{
    "message": "数据加载成功",
    "data": [
        {
            "id": 10001,
            "createTime": "2022-05-24T09:09:05.443+0000",
            "creatorId": 100,
            "creatorName": "admin",
            "name": "输入",
            "targetAlgorithm": null,
            "parentId": 0,
            "enabled": true,
            "paralleled": false,
            "component": false,
            "allowViewSource": true,
            "iconPath": "iconshuru-01",
            "minimumInput": 0,
            "inBuilt": true,
            "hasReport": false,
            "description": null,
            "tabs": [],
            "inputs": [],
            "outputs": [],
            "updateTime": "2022-05-24T09:09:05.443+0000",
            "sequence": 0,
            "extra": {
                "type": "NORMAL",
                "value": null,
                "mainClass": null,
                "engine": "PYTHON"
            },
            "script": {},
            "supportPmml": false,
            "children": [
                {
                    "id": 10002,
                    "createTime": "2022-05-24T09:09:05.822+0000",
                    "creatorId": 100,
                    "creatorName": "admin",
                    "name": "数据源",
                    "targetAlgorithm": null,
                    "parentId": 10001,
                    "enabled": true,
                    "paralleled": false,
                    "component": false,
                    "allowViewSource": false,
                    "iconPath": "iconshuru-01",
                    "minimumInput": 0,
                    "inBuilt": true,
                    "hasReport": false,
                    "description": null,
                    "tabs": [],
                    "inputs": [],
                    "outputs": [],
                    "updateTime": "2022-05-24T09:09:05.822+0000",
                    "sequence": 0,
                    "extra": {
                        "type": "NORMAL",
                        "value": null,
                        "mainClass": null,
                        "engine": "PYTHON"
                    },
                    "script": {},
                    "supportPmml": false,
                    "children": [
                        {
                            "id": 10003,
                            "createTime": "2022-05-24T09:09:05.860+0000",
                            "creatorId": 100,
                            "creatorName": "admin",
                            "name": "输入源",
                            "targetAlgorithm": "com.yzx.mlp.scheduling.core.alog.unparallel.engine.pythonengine.io.Input1",
                            "parentId": 10002,
                            "enabled": true,
                            "paralleled": false,
                            "component": true,
                            "allowViewSource": false,
                            "iconPath": "iconshuru-01",
                            "minimumInput": 0,
                            "inBuilt": true,
                            "hasReport": false,
                            "description": "",
                            "tabs": [
                                {
                                    "id": 7492,
                                    "createTime": "2022-05-24T09:09:05.860+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "tabName": "数据源",
                                    "elements": [
                                        {
                                            "id": 20478,
                                            "createTime": "2022-05-24T09:09:05.860+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "datasource",
                                            "label": "数据源",
                                            "defaultValue": null,
                                            "value": null,
                                            "options": "",
                                            "rexp": "/^[1-9][0-9]{0,9999}$/",
                                            "placeholder": "",
                                            "toolTip": "",
                                            "sequence": 1,
                                            "elementType": 0,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        }
                                    ]
                                },
                                {
                                    "id": 7493,
                                    "createTime": "2022-05-24T09:09:05.860+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "tabName": "字段信息",
                                    "elements": [
                                        {
                                            "id": 20479,
                                            "createTime": "2022-05-24T09:09:05.860+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "sourcetableinfo",
                                            "label": "源表字段信息",
                                            "defaultValue": null,
                                            "value": null,
                                            "options": "",
                                            "rexp": "",
                                            "placeholder": "",
                                            "toolTip": "",
                                            "sequence": 1,
                                            "elementType": 13,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": false
                                        }
                                    ]
                                }
                            ],
                            "inputs": [],
                            "outputs": [
                                {
                                    "id": 10345,
                                    "createTime": "2022-05-24T09:09:05.860+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "key": "data_out",
                                    "type": "OUTPUT",
                                    "cat": "DATA",
                                    "canPreview": true,
                                    "preViewMode": "ONLY100",
                                    "description": "输出",
                                    "access": "SAME",
                                    "columns": "[]",
                                    "model": false
                                }
                            ],
                            "updateTime": "2022-05-24T09:09:05.860+0000",
                            "sequence": 0,
                            "extra": {
                                "type": "NORMAL",
                                "value": null,
                                "mainClass": null,
                                "engine": "PYTHON"
                            },
                            "script": {},
                            "supportPmml": false,
                            "children": null,
                            "parameters": {
                                "datasource": "",
                                "sourcetableinfo": ""
                            }
                        }
                    ],
                    "parameters": {}
                }
            ],
            "parameters": {}
        },
        {
            "id": 10040,
            "createTime": "2022-05-24T09:09:05.992+0000",
            "creatorId": 100,
            "creatorName": "admin",
            "name": "数据EDA",
            "targetAlgorithm": null,
            "parentId": 0,
            "enabled": true,
            "paralleled": false,
            "component": false,
            "allowViewSource": true,
            "iconPath": "iconshuchu-01",
            "minimumInput": 0,
            "inBuilt": true,
            "hasReport": false,
            "description": null,
            "tabs": [],
            "inputs": [],
            "outputs": [],
            "updateTime": "2022-05-24T09:09:05.992+0000",
            "sequence": 1,
            "extra": {
                "type": "NORMAL",
                "value": null,
                "mainClass": null,
                "engine": "PYTHON"
            },
            "script": {},
            "supportPmml": false,
            "children": [
                {
                    "id": 10041,
                    "createTime": "2022-05-24T09:09:06.047+0000",
                    "creatorId": 100,
                    "creatorName": "admin",
                    "name": "数据EDA",
                    "targetAlgorithm": null,
                    "parentId": 10040,
                    "enabled": true,
                    "paralleled": false,
                    "component": false,
                    "allowViewSource": true,
                    "iconPath": "iconshuchu-01",
                    "minimumInput": 0,
                    "inBuilt": true,
                    "hasReport": false,
                    "description": null,
                    "tabs": [],
                    "inputs": [],
                    "outputs": [],
                    "updateTime": "2022-05-24T09:09:06.047+0000",
                    "sequence": 0,
                    "extra": {
                        "type": "NORMAL",
                        "value": null,
                        "mainClass": null,
                        "engine": "PYTHON"
                    },
                    "script": {},
                    "supportPmml": false,
                    "children": [
                        {
                            "id": 10042,
                            "createTime": "2022-05-24T09:09:06.424+0000",
                            "creatorId": 100,
                            "creatorName": "admin",
                            "name": "数据总览",
                            "targetAlgorithm": "com.yzx.mlp.scheduling.core.alog.unparallel.engine.pythonengine.PythonCommonAlgorithm",
                            "parentId": 10041,
                            "enabled": true,
                            "paralleled": false,
                            "component": true,
                            "allowViewSource": true,
                            "iconPath": "iconshuchu-01",
                            "minimumInput": 1,
                            "inBuilt": true,
                            "hasReport": true,
                            "description": "描述：数据总览",
                            "tabs": [
                                {
                                    "id": 7494,
                                    "createTime": "2022-05-24T09:09:06.428+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "tabName": "字段设置",
                                    "elements": [
                                        {
                                            "id": 20480,
                                            "createTime": "2022-05-24T09:09:06.428+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "edadatashowgoodbad",
                                            "label": "好坏样本列",
                                            "defaultValue": null,
                                            "value": null,
                                            "options": "",
                                            "rexp": "/\\S/",
                                            "placeholder": "请输入好坏样本所在列序号或者列名称",
                                            "toolTip": "好坏样本列所在列序号或者列名称",
                                            "sequence": 0,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        },
                                        {
                                            "id": 20481,
                                            "createTime": "2022-05-24T09:09:06.428+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "edadatashowduplicate",
                                            "label": "判断重复列",
                                            "defaultValue": null,
                                            "value": null,
                                            "options": "",
                                            "rexp": "/\\S/",
                                            "placeholder": "请输入判断重复列所在列序号或者列名称",
                                            "toolTip": "请输入判断重复列所在列序号或者列名称",
                                            "sequence": 1,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        }
                                    ]
                                }
                            ],
                            "inputs": [
                                {
                                    "id": 10346,
                                    "createTime": "2022-05-24T09:09:06.428+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "key": "data_in",
                                    "type": "INPUT",
                                    "cat": "DATA",
                                    "canPreview": true,
                                    "preViewMode": "ONLY100",
                                    "description": "输入",
                                    "model": false
                                }
                            ],
                            "outputs": [],
                            "updateTime": "2022-05-24T09:09:06.424+0000",
                            "sequence": 0,
                            "extra": {
                                "type": "NORMAL",
                                "value": null,
                                "mainClass": null,
                                "engine": "PYTHON"
                            },
                            "script": {
                                "MAIN": "# <ALOGCLASSNAME>\n# undefined\n# </ALOGCLASSNAME>\n\n# <EXECTUSCRIPT>\ndef execute(conn, inputs, params, outputs, reportFileName):\n\n    '''\n    载入模块\n    '''\n    import warnings\n    import json\n    from common import get_feature\n    import os\n    import db_utils\n    import report_utils\n    from common import get_db_column_with_type\n    from common import keep_dot_after\n    warnings.filterwarnings(\"ignore\")\n    report = report_utils.Report()\n\n    '''\n    载入redis连接信息\n    '''\n    redisParam = json.loads(params['redis'])\n    redisConn = db_utils.getRedisMasterConnection(redisParam['connectInfo'], redisParam['masterName'],\n                                                  redisParam['password'], redisParam['db'])\n\n    '''\n    获取输入数据\n    '''\n    keep_dot_after(db_type, inputs)\n    data_in = db_utils.query(conn, 'select * from ' + inputs['data_in'], db_type)\n\n    data_in_shape = data_in.shape\n    '''\n    转换后的参数\n    '''\n    db_columns = get_db_column_with_type(db_type, inputs, conn)\n    columns_values = get_feature(db_columns, params['edadatashowgoodbad'])\n    columns_values2 = get_feature(db_columns, params['edadatashowduplicate'])\n\n    # 量级大小\n    # print(data_in.shape)\n    report.h1(\"样本大小:\"+str(data_in.shape[0])+\"行,\"+str(data_in.shape[1])+\"列\")\n    # 好坏样本比例 或加排序：ascending=True,normalize=True\n    for column in columns_values:\n        report.h1(\"标签为1的样本量/标签为0的样本量:\"+str(data_in[column].value_counts().get(1, 0))+\"/\"+str(data_in[column].value_counts().get(0, 0)))\n    # subset为None的时候是针对素所有的行，如果是指定列的话，需要【】表示\n    dataTest2 = data_in.drop_duplicates(subset=columns_values2, keep='first')\n    if dataTest2.shape[0] == data_in.shape[0]:\n        report.h1(\"是否有重复行:否\")\n    elif dataTest2.shape[0] < data_in.shape[0]:\n        report.h1(\"是否有重复行:是\")\n        report.h1(\"删除重复行的样本大小为:\" + str(dataTest2.shape[0]) + \"行,\" + str(dataTest2.shape[1]) + \"列\")\n    else:\n        report.h1(\"是否有重复行:?\")\n\n\n    report.writeToHtml(reportFileName)\n    with open(reportFileName) as file_obj:\n        report_result = file_obj.read()\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"report_\" + reportFileName, report_result)\n    os.remove(reportFileName)\n\n# </EXECTUSCRIPT>\n\n# import db_utils\n# db_type = 1\n# if db_type == 1:\n#     conn = db_utils.get_connection(db_type=db_type, host=\"192.168.198.108\", port=\"10000\", dbname=\"yq_yzx\", user=\"yangqing_yzx\", password=\"12qw#$ER\")\n#     client = db_utils.hdfs_client(hadoop_path=\"http://192.168.198.105:50070\")\n# else:\n#     client = None\n#     conn = db_utils.get_connection(db_type=db_type, host='192.168.198.172', port='15434', dbname='mlp', user='postgres', password='pgsql123456',schema='admin')\n# inputs1 = {'data_in':'\"admin\".\"10000240_0_1\"','schema':'admin'}\n# outputs1= {'data_out':'10000427_0_2'}\n# params1 = {'project_id':'project_1','column_name_filter_strategy':'0','edadatashowgoodbad':'2','edadatashowduplicate':'3-4','column_type_filter_strategy':'0','column_type_filter_name':'float,int','pipeline_file':'/tmp/pyserve/pipeline/'\n#     ,\"redis\":\"{\\\"connectInfo\\\":[[\\\"192.168.198.220\\\",\\\"26380\\\"],[\\\"192.168.198.221\\\",\\\"26380\\\"],[\\\"192.168.198.222\\\",\\\"26380\\\"]],\\\"masterName\\\":\\\"mymaster\\\",\\\"password\\\":\\\"123456\\\",\\\"db\\\":0}\"}\n# execute(conn=conn,inputs=inputs1,outputs=outputs1,params=params1,reportFileName=\"test.html\")\n\n"
                            },
                            "supportPmml": false,
                            "children": null,
                            "parameters": {
                                "edadatashowgoodbad": "",
                                "edadatashowduplicate": ""
                            }
                        },
                        {
                            "id": 10043,
                            "createTime": "2022-05-24T09:09:06.571+0000",
                            "creatorId": 100,
                            "creatorName": "admin",
                            "name": "数据明细展示",
                            "targetAlgorithm": "com.yzx.mlp.scheduling.core.alog.unparallel.engine.pythonengine.PythonCommonAlgorithm",
                            "parentId": 10041,
                            "enabled": true,
                            "paralleled": false,
                            "component": true,
                            "allowViewSource": true,
                            "iconPath": "iconshuchu-01",
                            "minimumInput": 1,
                            "inBuilt": true,
                            "hasReport": true,
                            "description": "描述：数据明细展示",
                            "tabs": [],
                            "inputs": [
                                {
                                    "id": 10347,
                                    "createTime": "2022-05-24T09:09:06.572+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "key": "data_in",
                                    "type": "INPUT",
                                    "cat": "DATA",
                                    "canPreview": true,
                                    "preViewMode": "ONLY100",
                                    "description": "输入",
                                    "model": false
                                }
                            ],
                            "outputs": [],
                            "updateTime": "2022-05-24T09:09:06.571+0000",
                            "sequence": 1,
                            "extra": {
                                "type": "NORMAL",
                                "value": null,
                                "mainClass": null,
                                "engine": "PYTHON"
                            },
                            "script": {
                                "MAIN": "# <ALOGCLASSNAME>\n# undefined\n# </ALOGCLASSNAME>\n\n# <EXECTUSCRIPT>\ndef execute(conn, inputs, params, outputs, reportFileName):\n\n    '''\n    载入模块\n    '''\n    import warnings\n    from common import get_db_column_with_type\n    from common import keep_dot_after\n    import report_utils\n    warnings.filterwarnings(\"ignore\")\n    report = report_utils.Report()\n    import numpy as np\n    import json\n    import toad\n    import db_utils\n    redisParam = json.loads(params['redis'])\n    redisConn = db_utils.getRedisMasterConnection(redisParam['connectInfo'], redisParam['masterName'],\n                                                  redisParam['password'], redisParam['db'])\n\n    '''\n    获取输入数据\n    '''\n    keep_dot_after(db_type, inputs)\n    data_in = db_utils.query(conn, 'select * from ' + inputs['data_in'], db_type)\n\n    data_in_shape = data_in.shape\n\n    data_in.replace(to_replace=r'^\\s*$', value=np.nan, regex=True, inplace=True)\n    data_info = toad.detect(data_in)\n    data_info[\"missing\"] = data_info[\"missing\"].apply(lambda x:float(x.split('%')[0])/100.0)\n    data_info = data_info.sort_values(by=\"missing\", ascending=False)\n    data_info.insert(loc=0, column=\"feature\", value=data_info._stat_axis.values.tolist())\n\n\n    data_info['type'] = data_info['type'].astype(\"string\")\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"report_json_\" + reportFileName, data_info.to_json(orient=\"table\"))\n\n# </EXECTUSCRIPT>\n\n# import db_utils\n# db_type = 1\n# if db_type == 1:\n#     conn = db_utils.get_connection(db_type=db_type, host=\"192.168.198.108\", port=\"10000\", dbname=\"yq_yzx\", user=\"yangqing_yzx\", password=\"12qw#$ER\")\n#     client = db_utils.hdfs_client(hadoop_path=\"http://192.168.198.105:50070\")\n# else:\n#     client = None\n#     conn = db_utils.get_connection(db_type=db_type, host='192.168.198.172', port='15434', dbname='mlp', user='postgres', password='pgsql123456',schema='admin')\n# inputs1 = {'data_in':'\"admin\".\"10000492_0_1\"','schema':'admin'}\n# outputs1= {'data_out':'10000427_0_2'}\n# params1 = {'project_id':'project_1','column_name_filter_strategy':'0','edadatainfotag':'2','edadatainfoxs':'3-4','column_type_filter_strategy':'0','column_type_filter_name':'float,int','pipeline_file':'/tmp/pyserve/pipeline/'\n#     ,\"redis\":\"{\\\"connectInfo\\\":[[\\\"192.168.198.220\\\",\\\"26380\\\"],[\\\"192.168.198.221\\\",\\\"26380\\\"],[\\\"192.168.198.222\\\",\\\"26380\\\"]],\\\"masterName\\\":\\\"mymaster\\\",\\\"password\\\":\\\"123456\\\",\\\"db\\\":0}\"}\n# execute(conn=conn,inputs=inputs1,outputs=outputs1,params=params1,reportFileName=\"test.html\")"
                            },
                            "supportPmml": false,
                            "children": null,
                            "parameters": {}
                        },
                        {
                            "id": 10045,
                            "createTime": "2022-05-24T09:09:06.904+0000",
                            "creatorId": 100,
                            "creatorName": "admin",
                            "name": "可视化",
                            "targetAlgorithm": "com.yzx.mlp.scheduling.core.alog.unparallel.engine.pythonengine.PythonCommonAlgorithm",
                            "parentId": 10041,
                            "enabled": true,
                            "paralleled": false,
                            "component": true,
                            "allowViewSource": true,
                            "iconPath": "iconshuchu-01",
                            "minimumInput": 1,
                            "inBuilt": true,
                            "hasReport": true,
                            "description": "描述：连续型的用密度图表示，类别型用柱状图表示，对于类别大于10的类别型暂不显示图形",
                            "tabs": [
                                {
                                    "id": 7495,
                                    "createTime": "2022-05-24T09:09:06.905+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "tabName": "字段设置",
                                    "elements": [
                                        {
                                            "id": 20482,
                                            "createTime": "2022-05-24T09:09:06.905+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "edadatainfotag",
                                            "label": "标签列",
                                            "defaultValue": null,
                                            "value": null,
                                            "options": "",
                                            "rexp": "/\\S/",
                                            "placeholder": "请输入标签所在列序号或者列名称",
                                            "toolTip": "标签列所在列序号或者列名称",
                                            "sequence": 0,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        },
                                        {
                                            "id": 20483,
                                            "createTime": "2022-05-24T09:09:06.905+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "edadatainfoxs",
                                            "label": "统计列",
                                            "defaultValue": null,
                                            "value": null,
                                            "options": "",
                                            "rexp": "/\\S/",
                                            "placeholder": "请输入判断统计列所在列序号或者列名称",
                                            "toolTip": "请输入判断统计列所在列序号或者列名称",
                                            "sequence": 1,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        }
                                    ]
                                }
                            ],
                            "inputs": [
                                {
                                    "id": 10348,
                                    "createTime": "2022-05-24T09:09:06.905+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "key": "data_in",
                                    "type": "INPUT",
                                    "cat": "DATA",
                                    "canPreview": true,
                                    "preViewMode": "ONLY100",
                                    "description": "输入",
                                    "model": false
                                }
                            ],
                            "outputs": [],
                            "updateTime": "2022-05-24T09:09:06.904+0000",
                            "sequence": 2,
                            "extra": {
                                "type": "NORMAL",
                                "value": null,
                                "mainClass": null,
                                "engine": "PYTHON"
                            },
                            "script": {
                                "MAIN": "# <ALOGCLASSNAME>\n# undefined\n# </ALOGCLASSNAME>\n\n# <EXECTUSCRIPT>\n\ndef execute(conn, inputs, params, outputs, reportFileName):\n\n    '''\n    载入模块\n    '''\n    import warnings\n    import matplotlib.pyplot as plt\n    from common import get_db_column_with_type,keep_dot_after,get_label,get_feature\n    import db_utils\n    import seaborn as sns\n    import json\n    import math\n\n    warnings.filterwarnings(\"ignore\")\n\n    redisParam = json.loads(params['redis'])\n    redisConn = db_utils.getRedisMasterConnection(redisParam['connectInfo'], redisParam['masterName'],\n                                                  redisParam['password'], redisParam['db'])\n    '''\n    获取输入数据\n    '''\n    keep_dot_after(db_type, inputs)\n    data_in = db_utils.query(conn, 'select * from ' + inputs['data_in'], db_type)\n\n    data_in_shape = data_in.shape\n    '''\n    转换后的参数\n    '''\n    db_columns = get_db_column_with_type(db_type, inputs, conn)\n\n    columns_value_tag = get_label(db_columns, params['edadatainfotag'])\n    columns_value_xs = get_feature(db_columns, params['edadatainfoxs'])\n    graph_dict = []\n    tag_uniq_vals = data_in[columns_value_tag].unique().tolist()\n    if data_in[columns_value_tag].isnull().any():\n        remove_null = data_in[tag_uniq_vals].dropna(axis=0)\n        uniq_remove_null = remove_null.unique().tolist()\n        tag_uniq_vals = uniq_remove_null\n\n    for column in columns_value_xs:\n        type_judge, uniq_vals = judge_types(data_in,column)\n        if type_judge == 'numerical':\n            graph = {}\n            graph['name'] = column\n            graph['type'] = 'line'\n            graph['xName'] = column\n            graph['yName'] = 'Density'\n            graph['legendName'] = columns_value_tag\n            graph['lineName'] = []\n            graph['sourceData'] = []\n            for tag in tag_uniq_vals:\n                my_graph = sns.displot(data_in[data_in[columns_value_tag]==tag], x=column, hue=columns_value_tag,kind=\"kde\")\n                graph_list = my_graph.ax.lines\n                graph['lineName'].append(str(tag))\n                graph['sourceData'].append(graph_list[0].get_xydata().tolist())\n                plt.clf()\n            graph_dict.append(graph)\n        elif type_judge == 'category':\n            my_graph = sns.countplot(data=data_in, x=column, hue=columns_value_tag)\n            graph_list = my_graph.containers\n            graph = {}\n            graph['name'] = column\n            graph['type'] = 'bar'\n            graph['xName'] = column\n            graph['yName'] = 'count'\n            graph['legendName'] = columns_value_tag\n            graph['lineName'] = []\n            graph['xData'] = [xtrick._text for xtrick in my_graph.get_xticklabels()]\n            source_data = []\n            for i in range(len(my_graph.containers)):\n                temp_list = []\n                for h in graph_list[i].patches:\n                    if not math.isnan(h._height):\n                        temp_list.append(h._height)\n                    else:\n                        temp_list.append(0)\n                source_data.append([int(x) for x in temp_list])\n                graph['lineName'].append(graph_list[i].get_label())\n            graph['yData'] = source_data\n            graph_dict.append(graph)\n            plt.clf()\n        else:\n            pass\n\n    graph_dict = {'graph':graph_dict}\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"report_json_\" + reportFileName, json.dumps(graph_dict))\n\ndef judge_types(data_in,column):\n    import numbers\n    uniq_vals = data_in[column].unique().tolist()\n    if data_in[column].isnull().any():\n        len_val = len(uniq_vals)-1\n        remove_null = data_in[column].dropna(axis=0)\n        uniq_remove_null = remove_null.unique().tolist()\n        uniq_vals = uniq_remove_null\n    else:\n        len_val = len(uniq_vals)\n    if len(uniq_vals) >= 7 and isinstance(uniq_vals[0], numbers.Real):\n        type_judge = 'numerical'\n    elif len(uniq_vals) >= 10:\n        type_judge = 'not_show'\n    else:\n        type_judge = 'category'\n    return type_judge,uniq_vals\n\n# </EXECTUSCRIPT>\n\n# import db_utils\n# db_type = 0\n# if db_type == 1:\n#     conn = db_utils.get_connection(db_type=db_type, host=\"192.168.198.108\", port=\"10000\", dbname=\"yq_yzx\", user=\"yangqing_yzx\", password=\"12qw#$ER\")\n#     client = db_utils.hdfs_client(hadoop_path=\"http://192.168.198.105:50070\")\n# else:\n#     client = None\n#     conn = db_utils.get_connection(db_type=db_type, host='192.168.198.172', port='15434', dbname='mlp', user='postgres', password='pgsql123456',schema='admin')\n# inputs1 = {'data_in':'\"admin\".\"10000492_0_1\"','schema':'admin'}\n# outputs1= {'data_out':'10000427_0_2'}\n# params1 = {'project_id':'project_1','column_name_filter_strategy':'0','edadatainfotag':'avg_discount','edadatainfoxs':'2-8','column_type_filter_strategy':'0','column_type_filter_name':'float,int','pipeline_file':'/tmp/pyserve/pipeline/'\n#     ,\"redis\":\"{\\\"connectInfo\\\":[[\\\"192.168.198.220\\\",\\\"26380\\\"],[\\\"192.168.198.221\\\",\\\"26380\\\"],[\\\"192.168.198.222\\\",\\\"26380\\\"]],\\\"masterName\\\":\\\"mymaster\\\",\\\"password\\\":\\\"123456\\\",\\\"db\\\":0}\"}\n# execute(conn=conn,inputs=inputs1,outputs=outputs1,params=params1,reportFileName=\"test.html\")"
                            },
                            "supportPmml": false,
                            "children": null,
                            "parameters": {
                                "edadatainfotag": "",
                                "edadatainfoxs": ""
                            }
                        }
                    ],
                    "parameters": {}
                }
            ],
            "parameters": {}
        },
        {
            "id": 10005,
            "createTime": "2022-05-24T09:09:07.058+0000",
            "creatorId": 100,
            "creatorName": "admin",
            "name": "数据处理",
            "targetAlgorithm": null,
            "parentId": 0,
            "enabled": true,
            "paralleled": false,
            "component": false,
            "allowViewSource": true,
            "iconPath": "iconshujuyuchuli-01",
            "minimumInput": 0,
            "inBuilt": true,
            "hasReport": false,
            "description": null,
            "tabs": [],
            "inputs": [],
            "outputs": [],
            "updateTime": "2022-05-24T09:09:07.058+0000",
            "sequence": 2,
            "extra": {
                "type": "NORMAL",
                "value": null,
                "mainClass": null,
                "engine": "PYTHON"
            },
            "script": {},
            "supportPmml": false,
            "children": [
                {
                    "id": 10006,
                    "createTime": "2022-05-24T09:09:07.094+0000",
                    "creatorId": 100,
                    "creatorName": "admin",
                    "name": "采样与过滤",
                    "targetAlgorithm": null,
                    "parentId": 10005,
                    "enabled": true,
                    "paralleled": false,
                    "component": false,
                    "allowViewSource": true,
                    "iconPath": "iconshujuyuchuli-01",
                    "minimumInput": 0,
                    "inBuilt": true,
                    "hasReport": false,
                    "description": null,
                    "tabs": [],
                    "inputs": [],
                    "outputs": [],
                    "updateTime": "2022-05-24T09:09:07.094+0000",
                    "sequence": 0,
                    "extra": {
                        "type": "NORMAL",
                        "value": null,
                        "mainClass": null,
                        "engine": "PYTHON"
                    },
                    "script": {},
                    "supportPmml": false,
                    "children": [
                        {
                            "id": 10007,
                            "createTime": "2022-05-24T09:09:07.435+0000",
                            "creatorId": 100,
                            "creatorName": "admin",
                            "name": "随机采样",
                            "targetAlgorithm": "com.yzx.mlp.scheduling.core.alog.unparallel.engine.pythonengine.PythonCommonAlgorithm",
                            "parentId": 10006,
                            "enabled": true,
                            "paralleled": false,
                            "component": true,
                            "allowViewSource": true,
                            "iconPath": "iconshujuyuchuli-01",
                            "minimumInput": 1,
                            "inBuilt": true,
                            "hasReport": false,
                            "description": "",
                            "tabs": [
                                {
                                    "id": 7496,
                                    "createTime": "2022-05-24T09:09:07.437+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "tabName": "字段设置",
                                    "elements": [
                                        {
                                            "id": 20484,
                                            "createTime": "2022-05-24T09:09:07.437+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "samplingratio",
                                            "label": "采样比例",
                                            "defaultValue": null,
                                            "value": null,
                                            "options": "",
                                            "rexp": "/^0\\.\\d*[1-9]\\d*$|^[1-9]\\.\\d*[1-9]\\d*e-[1-9]+$/",
                                            "placeholder": "",
                                            "toolTip": "范围：0~1",
                                            "sequence": 1,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        },
                                        {
                                            "id": 20485,
                                            "createTime": "2022-05-24T09:09:07.437+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "replacesampling",
                                            "label": "放回采样",
                                            "defaultValue": "否",
                                            "value": "false",
                                            "options": "是:true;否:false",
                                            "rexp": "/\\S/",
                                            "placeholder": "",
                                            "toolTip": "",
                                            "sequence": 2,
                                            "elementType": 3,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        }
                                    ]
                                }
                            ],
                            "inputs": [
                                {
                                    "id": 10349,
                                    "createTime": "2022-05-24T09:09:07.437+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "key": "data_in",
                                    "type": "INPUT",
                                    "cat": "DATA",
                                    "canPreview": true,
                                    "preViewMode": "ONLY100",
                                    "description": "输入",
                                    "model": false
                                }
                            ],
                            "outputs": [
                                {
                                    "id": 10350,
                                    "createTime": "2022-05-24T09:09:07.437+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "key": "data_out",
                                    "type": "OUTPUT",
                                    "cat": "DATA",
                                    "canPreview": true,
                                    "preViewMode": "ONLY100",
                                    "description": "输出",
                                    "access": "SAME",
                                    "columns": "[]",
                                    "model": false
                                }
                            ],
                            "updateTime": "2022-05-24T09:09:07.435+0000",
                            "sequence": 0,
                            "extra": {
                                "type": "NORMAL",
                                "value": null,
                                "mainClass": null,
                                "engine": "PYTHON"
                            },
                            "script": {
                                "MAIN": "# <ALOGCLASSNAME>\n# RandomSampling\n# </ALOGCLASSNAME>\n\n# <EXECTUSCRIPT>\ndef execute(conn, inputs, params, outputs, reportFileName):\n\n    '''\n    载入模块\n    '''\n    from sklearn.pipeline import Pipeline\n    import os\n    import pickle\n    import db_utils\n    import joblib\n    import json\n    import sys\n    from SourceCodeImporter import SourceCodeImporter\n    import warnings\n    from common import get_db_column_with_type\n    from common import keep_dot_after\n    warnings.filterwarnings(\"ignore\")\n    '''\n    载入redis连接信息\n    '''\n    redisParam = json.loads(params['redis'])\n    redisConn = db_utils.getRedisMasterConnection(redisParam['connectInfo'], redisParam['masterName'],\n                                                  redisParam['password'], redisParam['db'])\n    '''\n    远程模块载入\n    '''\n    name = \"RandomSampling\"\n    code = db_utils.redisReadHsetFile(redisConn, \"alogclass\", name)\n    sys.meta_path.append(SourceCodeImporter(code.decode(),name))\n    from RandomSampling import RandomSampling\n    '''\n    获取输入数据\n    '''\n    keep_dot_after(db_type, inputs)\n    data_in = db_utils.query(conn, 'select * from ' + inputs['data_in'], db_type)\n\n    data_in_shape = data_in.shape\n    '''\n    随机采样处理\n    '''\n    randomSampling = RandomSampling(params)\n    '''\n    保存文件到redis\n    '''\n    pipeline_pkl_name = outputs['data_out'].split('_', 1)[0]\n    joblib.dump(randomSampling, params['pipeline_file'] + \"pkl_\" + pipeline_pkl_name, compress=3)\n    fileObject = pickle.dumps(joblib.load(params['pipeline_file'] + \"pkl_\" + pipeline_pkl_name))\n    os.remove(params['pipeline_file'] + \"pkl_\" + pipeline_pkl_name)\n    '''\n    保存pkl的二进制文件到redis中\n    '''\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"pkl_\" + pipeline_pkl_name, fileObject)\n    '''\n    保存模型pkl的参数到redis\n    '''\n    pkl_params = {}\n    for i, v in data_in.dtypes.items():\n        pkl_params[str(i)] = str(v)\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"params_\" + pipeline_pkl_name, str(pkl_params))\n    '''\n    构建pipeline\n    '''\n    pipe = Pipeline([\n        ('RandomSampling', randomSampling)\n    ])\n    data_out = pipe.transform(data_in)\n    '''\n    构建输出结果的shape\n    '''\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"shape_\" + outputs['data_out'],\n                                str(data_out.shape[0]) + \",\" + str(data_out.shape[1]))\n    change_shape = {\n        'data_in': {\n            'startAt': 1,\n            'endAt': data_in_shape[1]\n        },\n        'data_out': {\n            'startAt': 1,\n            'endAt': data_out.shape[1]\n        },\n        \"change\": {\n            'startAt': data_in_shape[1] + 1,\n            'endAt': data_out.shape[1]\n        }\n    }\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"change_shape_\" + pipeline_pkl_name,json.dumps(change_shape))\n\n    '''\n    将结果写出\n    '''\n    db_utils.write_db_table(db_type=db_type, conn=conn, table_name=outputs['data_out'], data_frame=data_out,\n                            client=client, schema=inputs['schema'], hdfs_path=hdfsTmpPath)\n\n# </EXECTUSCRIPT>\n\n# import db_utils\n# db_type = 1\n# if db_type == 1:\n#     conn = db_utils.get_connection(db_type=db_type, host=\"192.168.198.108\", port=\"10000\", dbname=\"yq_yzx\", user=\"yangqing_yzx\", password=\"12qw#$ER\")\n#     client = db_utils.hdfs_client(hadoop_path=\"http://192.168.198.105:50070\")\n# else:\n#     client = None\n#     conn = db_utils.get_connection(db_type=db_type, host='192.168.198.172', port='15434', dbname='mlp', user='postgres', password='pgsql123456',schema='admin')\n# inputs1 = {'data_in':'\"admin\".\"air_data\"','schema':'admin'}\n# outputs1= {'data_out':'10000171_0_2'}\n# params1 = {'project_id':'project_2','samplingratio':'0.5','replacesampling':'true','pipeline_file':'/tmp/pyserve/pipeline/'\n#     ,\"redis\":\"{\\\"connectInfo\\\":[[\\\"192.168.198.220\\\",\\\"26380\\\"],[\\\"192.168.198.221\\\",\\\"26380\\\"],[\\\"192.168.198.222\\\",\\\"26380\\\"]],\\\"masterName\\\":\\\"mymaster\\\",\\\"password\\\":\\\"123456\\\",\\\"db\\\":0}\"}\n# execute(conn=conn,inputs=inputs1,outputs=outputs1,params=params1,reportFileName=None)"
                            },
                            "supportPmml": false,
                            "children": null,
                            "parameters": {
                                "replacesampling": "false",
                                "samplingratio": ""
                            }
                        },
                        {
                            "id": 10008,
                            "createTime": "2022-05-24T09:09:07.577+0000",
                            "creatorId": 100,
                            "creatorName": "admin",
                            "name": "分层采样",
                            "targetAlgorithm": "com.yzx.mlp.scheduling.core.alog.unparallel.engine.pythonengine.PythonCommonAlgorithm",
                            "parentId": 10006,
                            "enabled": true,
                            "paralleled": false,
                            "component": true,
                            "allowViewSource": true,
                            "iconPath": "iconshujuyuchuli-01",
                            "minimumInput": 1,
                            "inBuilt": true,
                            "hasReport": false,
                            "description": "",
                            "tabs": [
                                {
                                    "id": 7497,
                                    "createTime": "2022-05-24T09:09:07.578+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "tabName": "字段设置",
                                    "elements": [
                                        {
                                            "id": 20487,
                                            "createTime": "2022-05-24T09:09:07.578+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "stratificationtype",
                                            "label": "分层方式",
                                            "defaultValue": "按比例",
                                            "value": "ratio",
                                            "options": "按比例:ratio;按个数:count",
                                            "rexp": "/\\S/",
                                            "placeholder": "请选择",
                                            "toolTip": "支持按比例/按个数进行分层。",
                                            "sequence": 1,
                                            "elementType": 3,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        },
                                        {
                                            "id": 20486,
                                            "createTime": "2022-05-24T09:09:07.578+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "stratificationratio",
                                            "label": "分层比例或个数",
                                            "defaultValue": null,
                                            "value": null,
                                            "options": "",
                                            "rexp": "/\\S/",
                                            "placeholder": "输入数字或字符串（如：0.5 或 A:0.2,B:0.3）",
                                            "toolTip": "数字时：范围(0,1) 表示每个层的采样比例；\n字符串时：格式为 层0:r0,层1:r1,…\n               表示每个层分别配置采样比例。\n如：分层基数为600，基数中输入数据有三个分组，分别是A、B、C，其中A分组有100条样本，B有200条样本，C有300条样本。\n  1）参数配置为：0.5 时，表示A、B、C三个分组，分别采50%的数据（即A采50条，B采100条，C采150条）。\n  2）参数配置为：\"A:0.5,B:0.3,C:0.2\" 时，表示A分组采100×0.5=50条，B分组采200×0.3=60条，C分组采300×0.2=60条。",
                                            "sequence": 2,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        },
                                        {
                                            "id": 20488,
                                            "createTime": "2022-05-24T09:09:07.578+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "groupingcolumn",
                                            "label": "分组列",
                                            "defaultValue": null,
                                            "value": null,
                                            "options": "",
                                            "rexp": "/\\S/",
                                            "placeholder": "请选择",
                                            "toolTip": "分层按此列划分",
                                            "sequence": 3,
                                            "elementType": 12,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        },
                                        {
                                            "id": 20489,
                                            "createTime": "2022-05-24T09:09:07.578+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "replacesampling",
                                            "label": "放回采样",
                                            "defaultValue": "否",
                                            "value": "false",
                                            "options": "是:true;否:false",
                                            "rexp": "/\\S/",
                                            "placeholder": "",
                                            "toolTip": "",
                                            "sequence": 4,
                                            "elementType": 3,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        }
                                    ]
                                }
                            ],
                            "inputs": [
                                {
                                    "id": 10351,
                                    "createTime": "2022-05-24T09:09:07.578+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "key": "data_in",
                                    "type": "INPUT",
                                    "cat": "DATA",
                                    "canPreview": true,
                                    "preViewMode": "ONLY100",
                                    "description": "输入",
                                    "model": false
                                }
                            ],
                            "outputs": [
                                {
                                    "id": 10352,
                                    "createTime": "2022-05-24T09:09:07.578+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "key": "data_out",
                                    "type": "OUTPUT",
                                    "cat": "DATA",
                                    "canPreview": true,
                                    "preViewMode": "ONLY100",
                                    "description": "输出",
                                    "access": "SAME",
                                    "columns": "[]",
                                    "model": false
                                }
                            ],
                            "updateTime": "2022-05-24T09:09:07.577+0000",
                            "sequence": 1,
                            "extra": {
                                "type": "NORMAL",
                                "value": null,
                                "mainClass": null,
                                "engine": "PYTHON"
                            },
                            "script": {
                                "MAIN": "# <ALOGCLASSNAME>\n# StratifiedSampling\n# </ALOGCLASSNAME>\n\n# <EXECTUSCRIPT>\ndef execute(conn, inputs, params, outputs, reportFileName):\n    #<editable>\n    '''\n        载入模块\n    '''\n    from sklearn.pipeline import Pipeline\n    import os\n    import pickle\n    import db_utils\n    import joblib\n    import sys\n    import json\n    import warnings\n    from SourceCodeImporter import SourceCodeImporter\n    from common import get_db_column_with_type\n    from common import keep_dot_after\n    warnings.filterwarnings(\"ignore\")\n    '''\n    载入redis连接信息\n    '''\n    redisParam = json.loads(params['redis'])\n    redisConn = db_utils.getRedisMasterConnection(redisParam['connectInfo'], redisParam['masterName'],\n                                                  redisParam['password'], redisParam['db'])\n    '''\n    远程模块载入\n    '''\n    name = \"StratifiedSampling\"\n    code = db_utils.redisReadHsetFile(redisConn, \"alogclass\", name)\n    sys.meta_path.append(SourceCodeImporter(code.decode(),name))\n    from StratifiedSampling import StratifiedSampling\n    '''\n    选择目标数据\n    '''\n    keep_dot_after(db_type, inputs)\n    data_in = db_utils.query(conn, 'select * from ' + inputs['data_in'], db_type)\n\n    data_in_shape = data_in.shape\n    '''\n    分层处理\n    '''\n    straticied_dict = {}\n    # 抽样比例continuous\n    if params['stratificationratio'] !='':\n        samplingratio_value = params['stratificationratio']\n        if \":\" in samplingratio_value:\n            for str1 in samplingratio_value.split(','):\n                kvs = str1.split(\":\")\n                straticied_dict[kvs[0]] = kvs[1]\n\n    stratifiedSampling = StratifiedSampling(params,straticied_dict)\n    '''\n    保存文件到redis\n    '''\n    pipeline_pkl_name = outputs['data_out'].split('_',1)[0]\n    joblib.dump(stratifiedSampling,params['pipeline_file']+\"pkl_\"+pipeline_pkl_name,compress=3)\n    fileObject= pickle.dumps(joblib.load(params['pipeline_file']+\"pkl_\"+pipeline_pkl_name))\n    os.remove(params['pipeline_file']+\"pkl_\"+pipeline_pkl_name)\n    '''\n    保存pkl的二进制文件到redis中\n    '''\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"pkl_\" + pipeline_pkl_name, fileObject)\n    '''\n    保存模型pkl的参数到redis\n    '''\n    pkl_params = {}\n    for i, v in data_in.dtypes.items():\n        pkl_params[str(i)]=str(v)\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"params_\" + pipeline_pkl_name, str(pkl_params))\n    '''\n    构建pipeline\n    '''\n    pipe = Pipeline([\n        ('StratifiedSampling', stratifiedSampling)\n    ])\n    data_out = pipe.transform(data_in)\n    '''\n    构建输出结果的shape\n    '''\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"shape_\" + outputs['data_out'], str(data_out.shape[0]) + \",\" + str(data_out.shape[1]))\n\n    change_shape = {\n        'data_in': {\n            'startAt': 1,\n            'endAt': data_in_shape[1]\n        },\n        'data_out': {\n            'startAt': 1,\n            'endAt': data_out.shape[1]\n        },\n        \"change\": {\n            'startAt': data_in_shape[1] + 1,\n            'endAt': data_out.shape[1]\n        }\n    }\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"change_shape_\" + pipeline_pkl_name,json.dumps(change_shape))\n\n    '''\n    将结果写出\n    '''\n    db_utils.write_db_table(db_type=db_type, conn=conn, table_name=outputs['data_out'], data_frame=data_out,\n                            client=client, schema=inputs['schema'], hdfs_path=hdfsTmpPath)\n\n\n# </EXECTUSCRIPT>\n\n\n# db_type = 1\n# if db_type == 1:\n#     conn = db_utils.get_connection(db_type=db_type, host=\"192.168.198.108\", port=\"10000\", dbname=\"yq_yzx\", user=\"yangqing_yzx\", password=\"12qw#$ER\")\n#     client = db_utils.hdfs_client(hadoop_path=\"http://192.168.198.105:50070\")\n# else:\n#     client = None\n#     conn = db_utils.get_connection(db_type=db_type, host='192.168.198.172', port='15434', dbname='mlp', user='postgres', password='pgsql123456',schema='admin')\n# inputs1 = {'data_in':'\"shilmtest\".\"concatblankd\"','schema':'shilmtest'}\n# outputs1= {'data_out':'10000171_0_3'}\n# # stratified_type 分层类型 :stratifiedratio 分层比例 stratifiedvalue 分层数值\n# params1 = {'project_id':'project_3','stratificationratio':'100','replacesampling':'false','stratificationtype':'count','groupingcolumn':'ft_tag_age','pipeline_file':'/tmp/pyserve/pipeline/'\n#     ,\"redis\":\"{\\\"connectInfo\\\":[[\\\"192.168.198.220\\\",\\\"26380\\\"],[\\\"192.168.198.221\\\",\\\"26380\\\"],[\\\"192.168.198.222\\\",\\\"26380\\\"]],\\\"masterName\\\":\\\"mymaster\\\",\\\"password\\\":\\\"123456\\\",\\\"db\\\":0}\"}\n# execute(conn=conn,inputs=inputs1,outputs=outputs1,params=params1,reportFileName=None)"
                            },
                            "supportPmml": false,
                            "children": null,
                            "parameters": {
                                "stratificationtype": "ratio",
                                "stratificationratio": "",
                                "replacesampling": "false",
                                "groupingcolumn": ""
                            }
                        },
                        {
                            "id": 10009,
                            "createTime": "2022-05-24T09:09:08.015+0000",
                            "creatorId": 100,
                            "creatorName": "admin",
                            "name": "上/下采样",
                            "targetAlgorithm": "com.yzx.mlp.scheduling.core.alog.unparallel.engine.pythonengine.PythonCommonAlgorithm",
                            "parentId": 10006,
                            "enabled": true,
                            "paralleled": false,
                            "component": true,
                            "allowViewSource": true,
                            "iconPath": "iconshujuyuchuli-01",
                            "minimumInput": 1,
                            "inBuilt": true,
                            "hasReport": true,
                            "description": "",
                            "tabs": [
                                {
                                    "id": 7498,
                                    "createTime": "2022-05-24T09:09:08.016+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "tabName": "字段设置",
                                    "elements": [
                                        {
                                            "id": 20490,
                                            "createTime": "2022-05-24T09:09:08.016+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "sample_type",
                                            "label": "采样方式",
                                            "defaultValue": "上采样",
                                            "value": "over",
                                            "options": "上采样:over;下采样:under",
                                            "rexp": "/\\S/",
                                            "placeholder": "请选择",
                                            "toolTip": "支持上采样和下采样。",
                                            "sequence": 1,
                                            "elementType": 3,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        },
                                        {
                                            "id": 20491,
                                            "createTime": "2022-05-24T09:09:08.016+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "sample_strategy",
                                            "label": "采样比例",
                                            "defaultValue": null,
                                            "value": null,
                                            "options": "",
                                            "rexp": "/\\S/",
                                            "placeholder": "输入数字(如:0.5)",
                                            "toolTip": "范围在(0,1]，只适用于二分类的标签，表示最终上、下采样后，少数类:多数类=该比例。",
                                            "sequence": 2,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        },
                                        {
                                            "id": 20493,
                                            "createTime": "2022-05-24T09:09:08.016+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "label_column",
                                            "label": "采样列",
                                            "defaultValue": null,
                                            "value": null,
                                            "options": "",
                                            "rexp": "/\\S/",
                                            "placeholder": "请选择",
                                            "toolTip": "按此列进行采样",
                                            "sequence": 3,
                                            "elementType": 12,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        },
                                        {
                                            "id": 20492,
                                            "createTime": "2022-05-24T09:09:08.016+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "replace_sampling",
                                            "label": "放回采样",
                                            "defaultValue": "否",
                                            "value": "false",
                                            "options": "是:true;否:false",
                                            "rexp": "",
                                            "placeholder": "",
                                            "toolTip": "下采样支持有放回和不放回采样，上采样不支持",
                                            "sequence": 3,
                                            "elementType": 3,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": false
                                        }
                                    ]
                                }
                            ],
                            "inputs": [
                                {
                                    "id": 10353,
                                    "createTime": "2022-05-24T09:09:08.016+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "key": "data_in",
                                    "type": "INPUT",
                                    "cat": "DATA",
                                    "canPreview": true,
                                    "preViewMode": "ONLY100",
                                    "description": "输入",
                                    "model": false
                                }
                            ],
                            "outputs": [
                                {
                                    "id": 10354,
                                    "createTime": "2022-05-24T09:09:08.016+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "key": "data_out",
                                    "type": "OUTPUT",
                                    "cat": "DATA",
                                    "canPreview": true,
                                    "preViewMode": "ONLY100",
                                    "description": "输出",
                                    "access": "SAME",
                                    "columns": "[]",
                                    "model": false
                                }
                            ],
                            "updateTime": "2022-05-24T09:09:08.015+0000",
                            "sequence": 2,
                            "extra": {
                                "type": "NORMAL",
                                "value": null,
                                "mainClass": null,
                                "engine": "PYTHON"
                            },
                            "script": {
                                "MAIN": "# <ALOGCLASSNAME>\n# OverUnderSampling\n# </ALOGCLASSNAME>\n\n# <EXECTUSCRIPT>\ndef execute(conn, inputs, params, outputs, reportFileName):\n\n    #<editable>\n    '''\n    载入模块\n    '''\n    import sys\n    import json\n    import os\n    import pickle\n    import joblib\n    from report_utils import Report\n    import pandas as pd\n    from sklearn.pipeline import Pipeline\n    import db_utils\n    from SourceCodeImporter import SourceCodeImporter\n    from common import get_db_column_with_type\n    from common import keep_dot_after\n\n    import warnings\n    warnings.filterwarnings(\"ignore\")\n\n    '''\n    载入redis连接信息\n     '''\n    redisParam = json.loads(params['redis'])\n    redisConn = db_utils.getRedisMasterConnection(redisParam['connectInfo'], redisParam['masterName'],\n                                                  redisParam['password'], redisParam['db'])\n    '''\n    远程模块载入\n    '''\n    code = db_utils.redisReadHsetFile(redisConn, \"alogclass\", \"OverUnderSampling\")\n    sys.meta_path.append(SourceCodeImporter(code.decode(), \"OverUnderSampling\"))\n    from OverUnderSampling import OverUnderSampling\n    '''\n    选择目标数据\n    '''\n    keep_dot_after(db_type, inputs)\n    data_in = db_utils.query(conn, 'select * from ' + inputs['data_in'], db_type)\n\n    data_in_shape = data_in.shape\n\n    counts_series_before = data_in[params['label_column']].value_counts(ascending=True)\n    if counts_series_before.size != 2:\n        raise Exception(params['label_column'] + \" 列不是二分类数据\")\n    report_ratio_param_before = ('%.4f' %(counts_series_before.values[0] / counts_series_before.values[1]))\n    '''\n    抽样策略处理\n    '''\n    overUnderSampling = OverUnderSampling(params)\n    '''\n    保存文件到redis\n    '''\n    pipeline_pkl_name = outputs['data_out'].split('_',1)[0]\n    joblib.dump(overUnderSampling, params['pipeline_file']+\"pkl_\"+pipeline_pkl_name, compress=3)\n    fileObject = pickle.dumps(joblib.load(params['pipeline_file']+\"pkl_\"+pipeline_pkl_name))\n    os.remove(params['pipeline_file']+\"pkl_\"+pipeline_pkl_name)\n    '''\n    保存pkl的二进制文件到redis中\n    '''\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"pkl_\" + pipeline_pkl_name, fileObject)\n    '''\n    保存模型pkl的参数到redis\n    '''\n    pkl_params = {}\n    for i, v in data_in.dtypes.items():\n        pkl_params[str(i)]=str(v)\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"params_\" + pipeline_pkl_name, str(pkl_params))\n    '''\n    构建pipeline\n    '''\n    pipe = Pipeline([\n        ('OverUnderSampling', overUnderSampling)\n    ])\n    data_out = pipe.transform(data_in)\n\n    '''\n    报表输出\n    '''\n    counts_series = data_out[params['label_column']].value_counts(ascending=True)\n    report_param_after = ('%.4f' %(counts_series.values[0] / counts_series.values[1]))\n    report = Report()\n    a = pd.DataFrame([['采样前', counts_series_before[1], counts_series_before[0], report_ratio_param_before],\n                      ['采样后', counts_series[1], counts_series[0], report_param_after]])\n    a.columns = ['', '标签为1的样本量', '标签为0的样本量','标签为1的样本量/标签为0的样本量(比例)']\n    report.table(a)\n    report.writeToHtml(reportFileName)\n    with open(reportFileName) as file_obj:\n        report_result = file_obj.read()\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"report_\" + reportFileName, report_result)\n    os.remove(reportFileName)\n    '''\n    构建输出结果的shape\n    '''\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"shape_\" + outputs['data_out'], str(data_out.shape[0]) + \",\" + str(data_out.shape[1]))\n    change_shape = {\n        'data_in': {\n            'startAt': 1,\n            'endAt': data_in_shape[1]\n        },\n        'data_out': {\n            'startAt': 1,\n            'endAt': data_out.shape[1]\n        },\n        \"change\": {\n            'startAt': data_in_shape[1] + 1,\n            'endAt': data_out.shape[1]\n        }\n    }\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"change_shape_\" + pipeline_pkl_name,json.dumps(change_shape))\n\n    '''\n    将结果写出\n    '''\n    db_utils.write_db_table(db_type=db_type, conn=conn, table_name=outputs['data_out'], data_frame=data_out,\n                            client=client, schema=inputs['schema'], hdfs_path=hdfsTmpPath)\n\n\n\"\"\"\nsample_type:采样方式\n    over: 上采样\n    down：下采样\n上采样\n    必选参数：\n        - label_column：采样列，按该列进行上采样\n    可选参数：\n        - sample_strategy : 必须输入float型数字\n            -string：默认为\"auto\",即1：1：1\n            -float：标签列必须是二分类数据\n            -dict：按个数采样。设置的个数 >= 实际个数\n下采样\n    必须参数：\n        - label_column：标签列，按该列进行下采样\n    可选参数：\n        - sample_strategy 样本策略：必须输入float型数字\n                -string：默认为\"auto\",即1：1：1\n                -float：标签列必须是二分类数据\n                -dict：按个数采样。设置的个数 >= 实际个数\n        - replace_sampling 是否放回\n\n\"\"\"\n\n# </EXECTUSCRIPT>\n\n# import  db_utils\n# db_type = 1\n# if db_type == 1:\n#     conn = db_utils.get_connection(db_type=db_type, host=\"192.168.198.108\", port=\"10000\", dbname=\"yq_yzx\", user=\"yangqing_yzx\", password=\"12qw#$ER\")\n#     client = db_utils.hdfs_client(hadoop_path=\"http://192.168.198.105:50070\")\n# else:\n#     client = None\n#     conn = db_utils.get_connection(db_type=db_type, host='192.168.198.172', port='15434', dbname='mlp', user='postgres', password='pgsql123456',schema='admin')\n# inputs1 = {'data_in':'\"admin\".\"air_data\"','schema':'admin'}\n# outputs1= {'data_out':'10000677_0_1'}\n# params1 = {'project_id':'project_3','sample_type':'over','label_column' : 'avg_discount' ,'replace_sampling':'false', 'sample_strategy': '0.5','pipeline_file':'/tmp/pyserve/pipeline/'\n#     ,\"redis\":\"{\\\"connectInfo\\\":[[\\\"192.168.198.220\\\",\\\"26380\\\"],[\\\"192.168.198.221\\\",\\\"26380\\\"],[\\\"192.168.198.222\\\",\\\"26380\\\"]],\\\"masterName\\\":\\\"mymaster\\\",\\\"password\\\":\\\"123456\\\",\\\"db\\\":0}\"}\n# execute(conn=conn, inputs=inputs1, outputs=outputs1, params=params1, reportFileName='/tmp/pycharm_yq/1000002.html')"
                            },
                            "supportPmml": false,
                            "children": null,
                            "parameters": {
                                "label_column": "",
                                "replace_sampling": "false",
                                "sample_type": "over",
                                "sample_strategy": ""
                            }
                        }
                    ],
                    "parameters": {}
                },
                {
                    "id": 10027,
                    "createTime": "2022-05-24T09:09:08.450+0000",
                    "creatorId": 100,
                    "creatorName": "admin",
                    "name": "数据预处理",
                    "targetAlgorithm": null,
                    "parentId": 10005,
                    "enabled": true,
                    "paralleled": false,
                    "component": false,
                    "allowViewSource": true,
                    "iconPath": "iconshujuyuchuli-01",
                    "minimumInput": 0,
                    "inBuilt": true,
                    "hasReport": false,
                    "description": null,
                    "tabs": [],
                    "inputs": [],
                    "outputs": [],
                    "updateTime": "2022-05-24T09:09:08.450+0000",
                    "sequence": 1,
                    "extra": {
                        "type": "NORMAL",
                        "value": null,
                        "mainClass": null,
                        "engine": "PYTHON"
                    },
                    "script": {},
                    "supportPmml": false,
                    "children": [
                        {
                            "id": 10004,
                            "createTime": "2022-05-24T09:09:08.484+0000",
                            "creatorId": 100,
                            "creatorName": "admin",
                            "name": "字段过滤",
                            "targetAlgorithm": "com.yzx.mlp.scheduling.core.alog.unparallel.engine.pythonengine.PythonCommonAlgorithm",
                            "parentId": 10027,
                            "enabled": true,
                            "paralleled": false,
                            "component": true,
                            "allowViewSource": true,
                            "iconPath": "iconshuru-01",
                            "minimumInput": 0,
                            "inBuilt": true,
                            "hasReport": false,
                            "description": "",
                            "tabs": [
                                {
                                    "id": 7499,
                                    "createTime": "2022-05-24T09:09:08.485+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "tabName": "字段名称过滤",
                                    "elements": [
                                        {
                                            "id": 20494,
                                            "createTime": "2022-05-24T09:09:08.485+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "column_name_filter_strategy",
                                            "label": "过滤策略",
                                            "defaultValue": "保留数据",
                                            "value": "0",
                                            "options": "保留数据:0;删除数据:1",
                                            "rexp": "/\\S/",
                                            "placeholder": "请选择",
                                            "toolTip": "根据策略删除或者保留数据",
                                            "sequence": 2,
                                            "elementType": 3,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        },
                                        {
                                            "id": 20495,
                                            "createTime": "2022-05-24T09:09:08.485+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "column_name_filter_name",
                                            "label": "过滤字段",
                                            "defaultValue": null,
                                            "value": null,
                                            "options": "",
                                            "rexp": "/\\S/",
                                            "placeholder": "请输入特征所在列序号或者列名称",
                                            "toolTip": "请输入特征所在列序号或者列名称,如 1-3,10,column1 (多个字段逗号分割)",
                                            "sequence": 3,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": false
                                        }
                                    ]
                                },
                                {
                                    "id": 7500,
                                    "createTime": "2022-05-24T09:09:08.485+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "tabName": "字段类型过滤",
                                    "elements": [
                                        {
                                            "id": 20496,
                                            "createTime": "2022-05-24T09:09:08.485+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "column_type_filter_strategy",
                                            "label": "过滤策略",
                                            "defaultValue": "保留数据",
                                            "value": "0",
                                            "options": "保留数据:0;删除数据:1",
                                            "rexp": "/\\S/",
                                            "placeholder": "请选择",
                                            "toolTip": "根据策略删除或者保留数据",
                                            "sequence": 2,
                                            "elementType": 3,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": false
                                        },
                                        {
                                            "id": 20497,
                                            "createTime": "2022-05-24T09:09:08.485+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "column_type_filter_name",
                                            "label": "过滤字段类型",
                                            "defaultValue": null,
                                            "value": null,
                                            "options": "[{\"value\":\"1\",\"label\":\"object\"},{\"value\":\"2\",\"label\":\"int\"},{\"value\":\"3\",\"label\":\"float\"},{\"value\":\"4\",\"label\":\"number\"},{\"value\":\"5\",\"label\":\"datetime\"}]",
                                            "rexp": "/\\S/",
                                            "placeholder": "请输入特征字段类型",
                                            "toolTip": "请输入特征字段类型,支持object,int,float,number,datetime;多个类型逗号分割。",
                                            "sequence": 3,
                                            "elementType": 26,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": false
                                        }
                                    ]
                                }
                            ],
                            "inputs": [
                                {
                                    "id": 10355,
                                    "createTime": "2022-05-24T09:09:08.485+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "key": "data_in",
                                    "type": "INPUT",
                                    "cat": "DATA",
                                    "canPreview": true,
                                    "preViewMode": "ONLY100",
                                    "description": "输入",
                                    "model": false
                                }
                            ],
                            "outputs": [
                                {
                                    "id": 10356,
                                    "createTime": "2022-05-24T09:09:08.485+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "key": "data_out",
                                    "type": "OUTPUT",
                                    "cat": "DATA",
                                    "canPreview": true,
                                    "preViewMode": "ONLY100",
                                    "description": "输出",
                                    "access": "SAME",
                                    "columns": "[]",
                                    "model": false
                                }
                            ],
                            "updateTime": "2022-05-24T09:09:08.484+0000",
                            "sequence": 0,
                            "extra": {
                                "type": "NORMAL",
                                "value": null,
                                "mainClass": null,
                                "engine": "PYTHON"
                            },
                            "script": {
                                "MAIN": "# <ALOGCLASSNAME>\n# FilterColumn\n# </ALOGCLASSNAME>\n\n# <EXECTUSCRIPT>\ndef execute(conn, inputs, params, outputs, reportFileName):\n\n    '''\n    载入模块\n    '''\n    from sklearn.pipeline import Pipeline\n    import os\n    import pickle\n    import db_utils\n    import joblib\n    import sys\n    import json\n    import warnings\n    from common import get_db_column\n    from common import get_feature\n    from SourceCodeImporter import SourceCodeImporter\n    from common import get_db_column_with_type\n    from common import keep_dot_after\n    warnings.filterwarnings(\"ignore\")\n    '''\n    载入redis连接信息\n    '''\n    redisParam = json.loads(params['redis'])\n    redisConn = db_utils.getRedisMasterConnection(redisParam['connectInfo'], redisParam['masterName'],\n                                                  redisParam['password'], redisParam['db'])\n    '''\n    远程模块载入\n    '''\n    name = \"FilterColumn\"\n    code = db_utils.redisReadHsetFile(redisConn, \"alogclass\", name)\n    sys.meta_path.append(SourceCodeImporter(code.decode(),name))\n    from FilterColumn import FilterColumn\n    '''\n    获取输入数据\n    '''\n    keep_dot_after(db_type, inputs)\n    data_in = db_utils.query(conn, 'select * from ' + inputs['data_in'], db_type)\n\n    data_in_shape = data_in.shape\n\n    '''\n    转换后的参数\n    '''\n    db_columns = get_db_column_with_type(db_type, inputs, conn)\n    columns_values = get_feature(db_columns, params['column_name_filter_name'])\n    '''\n    字段过滤处理\n    '''\n    filterColumn = FilterColumn(params, columns_values)\n    filterColumn.fit(data_in)\n    '''\n    保存pkl文件到redis\n    '''\n    pipeline_pkl_name = outputs['data_out'].split('_', 1)[0]\n    joblib.dump(filterColumn, params['pipeline_file'] + \"pkl_\" + pipeline_pkl_name, compress=3)\n    fileObject = pickle.dumps(joblib.load(params['pipeline_file'] + \"pkl_\" + pipeline_pkl_name))\n    os.remove(params['pipeline_file'] + \"pkl_\" + pipeline_pkl_name)\n    '''\n    保存pkl的二进制文件到redis中\n    '''\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"pkl_\" + pipeline_pkl_name, fileObject)\n    '''\n    保存模型pkl的参数到redis\n    '''\n    pkl_params = {}\n    for i, v in data_in.dtypes.items():\n        pkl_params[str(i)] = str(v)\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"params_\" + pipeline_pkl_name, str(pkl_params))\n    '''\n    构建pipeline\n    '''\n    pipe = Pipeline([\n        ('FilterColumn', filterColumn)\n    ])\n    pipe.fit(data_in)\n    data_out = pipe.transform(data_in)\n    if data_out.empty:\n        raise Exception(\"没有匹配上规则的数据\");\n    '''\n    构建输出结果的shape\n    '''\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"shape_\" + outputs['data_out'],\n                                str(data_out.shape[0]) + \",\" + str(data_out.shape[1]))\n\n    change_shape = {\n        'data_in': {\n            'startAt': 1,\n            'endAt': data_in_shape[1]\n        },\n        'data_out': {\n            'startAt': 1,\n            'endAt': data_out.shape[1]\n        },\n        \"change\": {\n            'startAt': data_in_shape[1] + 1,\n            'endAt': data_out.shape[1]\n        }\n    }\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"change_shape_\" + pipeline_pkl_name,json.dumps(change_shape))\n    '''\n    将结果写出\n    '''\n    db_utils.write_db_table(db_type=db_type, conn=conn, table_name=outputs['data_out'], data_frame=data_out,\n                            client=client, schema=inputs['schema'], hdfs_path=hdfsTmpPath)\n\n# </EXECTUSCRIPT>\n\n# import  db_utils\n# db_type = 1\n# if db_type == 1:\n#     conn = db_utils.get_connection(db_type=db_type, host=\"192.168.198.108\", port=\"10000\", dbname=\"yq_yzx\", user=\"yangqing_yzx\", password=\"12qw#$ER\")\n#     client = db_utils.hdfs_client(hadoop_path=\"http://192.168.198.105:50070\",user=\"yangqing_yzx\")\n# else:\n#     client = None\n#     conn = db_utils.get_connection(db_type=db_type, host='192.168.198.172', port='15434', dbname='mlp', user='postgres', password='pgsql123456',schema='admin')\n# inputs1 = {'data_in': '\"admin\".\"air_data\"', 'schema': 'admin'}\n# outputs1 = {'data_out': '10000427_0_2'}\n# params1 = {'project_id': 'project_1', 'column_name_filter_strategy': '0', 'column_name_filter_name': '1-2',\n#            'column_type_filter_strategy': '0', 'column_type_filter_name': 'float,int',\n#            'pipeline_file': '/tmp/pyserve/pipeline/'\n#     ,\n#            \"redis\": \"{\\\"connectInfo\\\":[[\\\"192.168.198.220\\\",\\\"26380\\\"],[\\\"192.168.198.221\\\",\\\"26380\\\"],[\\\"192.168.198.222\\\",\\\"26380\\\"]],\\\"masterName\\\":\\\"mymaster\\\",\\\"password\\\":\\\"123456\\\",\\\"db\\\":0}\"}\n# execute(conn=conn, inputs=inputs1, outputs=outputs1, params=params1, reportFileName=None)"
                            },
                            "supportPmml": false,
                            "children": null,
                            "parameters": {
                                "column_name_filter_strategy": "0",
                                "column_type_filter_name": "",
                                "column_type_filter_strategy": "0",
                                "column_name_filter_name": ""
                            }
                        },
                        {
                            "id": 10044,
                            "createTime": "2022-05-24T09:09:08.678+0000",
                            "creatorId": 100,
                            "creatorName": "admin",
                            "name": "类型转化",
                            "targetAlgorithm": "com.yzx.mlp.scheduling.core.alog.unparallel.engine.pythonengine.PythonCommonAlgorithm",
                            "parentId": 10027,
                            "enabled": true,
                            "paralleled": false,
                            "component": true,
                            "allowViewSource": true,
                            "iconPath": "iconshuchu-01",
                            "minimumInput": 1,
                            "inBuilt": true,
                            "hasReport": false,
                            "description": "描述：类型转化",
                            "tabs": [
                                {
                                    "id": 7501,
                                    "createTime": "2022-05-24T09:09:08.679+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "tabName": "操作设置",
                                    "elements": [
                                        {
                                            "id": 20498,
                                            "createTime": "2022-05-24T09:09:08.679+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "target_column_list",
                                            "label": "转换字段",
                                            "defaultValue": null,
                                            "value": null,
                                            "options": "",
                                            "rexp": "",
                                            "placeholder": "请输入字段检索或下拉选择",
                                            "toolTip": "请输入字段检索或下拉选择",
                                            "sequence": 0,
                                            "elementType": 5,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": false
                                        },
                                        {
                                            "id": 20499,
                                            "createTime": "2022-05-24T09:09:08.679+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "target_type",
                                            "label": "目标类型",
                                            "defaultValue": "1",
                                            "value": "1",
                                            "options": "string:1;float:2;int:3;object:4",
                                            "rexp": "/\\S/",
                                            "placeholder": "请选择目标类型",
                                            "toolTip": "请选择目标类型",
                                            "sequence": 1,
                                            "elementType": 3,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        }
                                    ]
                                }
                            ],
                            "inputs": [
                                {
                                    "id": 10357,
                                    "createTime": "2022-05-24T09:09:08.679+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "key": "data_in",
                                    "type": "INPUT",
                                    "cat": "DATA",
                                    "canPreview": true,
                                    "preViewMode": "ONLY100",
                                    "description": "输入",
                                    "model": false
                                }
                            ],
                            "outputs": [
                                {
                                    "id": 10358,
                                    "createTime": "2022-05-24T09:09:08.679+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "key": "data_out",
                                    "type": "OUTPUT",
                                    "cat": "DATA",
                                    "canPreview": true,
                                    "preViewMode": "ONLY100",
                                    "description": "输出",
                                    "access": "SAME",
                                    "columns": "[]",
                                    "model": false
                                }
                            ],
                            "updateTime": "2022-05-24T09:09:08.678+0000",
                            "sequence": 1,
                            "extra": {
                                "type": "NORMAL",
                                "value": null,
                                "mainClass": null,
                                "engine": "PYTHON"
                            },
                            "script": {
                                "MAIN": "# <ALOGCLASSNAME>\n# EDATypeHandle\n# </ALOGCLASSNAME>\n\n# <EXECTUSCRIPT>\ndef execute(conn, inputs, params, outputs, reportFileName):\n\n    '''\n    载入模块\n    '''\n    import warnings\n    import json\n    import sys\n    from sklearn.pipeline import Pipeline\n    import os\n    import pickle\n    import db_utils\n    import joblib\n    from SourceCodeImporter import SourceCodeImporter\n    from common import get_db_column_with_type\n    from common import keep_dot_after\n    warnings.filterwarnings(\"ignore\")\n\n    '''\n    载入redis连接信息\n    '''\n    redisParam = json.loads(params['redis'])\n    redisConn = db_utils.getRedisMasterConnection(redisParam['connectInfo'], redisParam['masterName'],\n                                                  redisParam['password'], redisParam['db'])\n    '''\n    远程模块载入\n    '''\n    name = \"EDATypeHandle\"\n    code = db_utils.redisReadHsetFile(redisConn, \"alogclass\", \"EDATypeHandle\")\n    sys.meta_path.append(SourceCodeImporter(code.decode(),name))\n    from EDATypeHandle import EDATypeHandle\n    # from pipeline.alogclass.EDATypeHandle import EDATypeHandle\n\n    '''\n    获取输入数据\n    '''\n    keep_dot_after(db_type, inputs)\n    data_in = db_utils.query(conn, 'select * from ' + inputs['data_in'], db_type)\n\n    data_in_shape = data_in.shape\n    '''\n    数据操作\n    '''\n    edaTypeHandle = EDATypeHandle(params)\n    edaTypeHandle.fit(data_in)\n    # data_out = edaTypeHandle.transform(data_in)\n    '''\n    保存pkl文件到redis\n    '''\n    pipeline_pkl_name = outputs['data_out'].split('_', 1)[0]\n    joblib.dump(edaTypeHandle, params['pipeline_file'] + \"pkl_\" + pipeline_pkl_name, compress=3)\n    fileObject = pickle.dumps(joblib.load(params['pipeline_file'] + \"pkl_\" + pipeline_pkl_name))\n    os.remove(params['pipeline_file'] + \"pkl_\" + pipeline_pkl_name)\n    '''\n    保存pkl的二进制文件到redis中\n    '''\n    import json\n    redisParam = json.loads(params['redis'])\n    redisConn = db_utils.getRedisMasterConnection(redisParam['connectInfo'], redisParam['masterName'],\n                                                  redisParam['password'], redisParam['db'])\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"pkl_\" + pipeline_pkl_name, fileObject)\n\n    '''\n    保存模型pkl的参数到redis\n    '''\n    pkl_params = {}\n    for i, v in data_in.dtypes.items():\n        pkl_params[str(i)] = str(v)\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"params_\" + pipeline_pkl_name, str(pkl_params))\n    '''\n    构建pipeline\n    '''\n    pipe = Pipeline([\n        ('EDATypeHandle', edaTypeHandle)\n    ])\n    pipe.fit(data_in)\n    data_out = pipe.transform(data_in)\n    if data_out.empty:\n        raise Exception(\"没有匹配上规则的数据\");\n    '''\n    构建输出结果的shape\n    '''\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"shape_\" + outputs['data_out'],\n                                str(data_out.shape[0]) + \",\" + str(data_out.shape[1]))\n\n    change_shape = {\n        'data_in': {\n            'startAt': 1,\n            'endAt': data_in_shape[1]\n        },\n        'data_out': {\n            'startAt': 1,\n            'endAt': data_out.shape[1]\n        },\n        \"change\": {\n            'startAt': data_in_shape[1] + 1,\n            'endAt': data_out.shape[1]\n        }\n    }\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"change_shape_\" + pipeline_pkl_name,json.dumps(change_shape))\n\n    '''\n    将结果写出\n    '''\n    db_utils.write_db_table(db_type=db_type, conn=conn, table_name=outputs['data_out'], data_frame=data_out,\n                            client=client, schema=inputs['schema'], hdfs_path=hdfsTmpPath)\n\n# </EXECTUSCRIPT>\n\n# import db_utils\n# db_type = 1\n# if db_type == 1:\n#     conn = db_utils.get_connection(db_type=db_type, host=\"192.168.198.108\", port=\"10000\", dbname=\"yq_yzx\", user=\"yangqing_yzx\", password=\"12qw#$ER\")\n#     client = db_utils.hdfs_client(hadoop_path=\"http://192.168.198.105:50070\")\n# else:\n#     client = None\n#     conn = db_utils.get_connection(db_type=db_type, host='192.168.198.172', port='15434', dbname='mlp', user='postgres', password='pgsql123456',schema='admin')\n# inputs1 = {'data_in':'\"admin\".\"10000240_0_1\"','schema':'admin'}\n# outputs1= {'data_out':'10000427_0_2'}\n# params1 = {'project_id':'project_1',\n#            'target_column_list':'id,name',\n#            'target_type':'string',\n#            'column_type_filter_name':'float,int',\n#            'pipeline_file':'/tmp/pyserve/pipeline/'\n#     ,\"redis\":\"{\\\"connectInfo\\\":[[\\\"192.168.198.220\\\",\\\"26380\\\"],[\\\"192.168.198.221\\\",\\\"26380\\\"],[\\\"192.168.198.222\\\",\\\"26380\\\"]],\\\"masterName\\\":\\\"mymaster\\\",\\\"password\\\":\\\"123456\\\",\\\"db\\\":0}\"}\n# execute(conn=conn,inputs=inputs1,outputs=outputs1,params=params1,reportFileName=\"test.html\")"
                            },
                            "supportPmml": false,
                            "children": null,
                            "parameters": {
                                "target_column_list": "",
                                "target_type": ""
                            }
                        },
                        {
                            "id": 10010,
                            "createTime": "2022-05-24T09:09:09.063+0000",
                            "creatorId": 100,
                            "creatorName": "admin",
                            "name": "缺失值填充",
                            "targetAlgorithm": "com.yzx.mlp.scheduling.core.alog.unparallel.engine.pythonengine.PythonCommonAlgorithm",
                            "parentId": 10027,
                            "enabled": true,
                            "paralleled": false,
                            "component": true,
                            "allowViewSource": true,
                            "iconPath": "iconshujuyuchuli-01",
                            "minimumInput": 1,
                            "inBuilt": true,
                            "hasReport": false,
                            "description": "",
                            "tabs": [
                                {
                                    "id": 7502,
                                    "createTime": "2022-05-24T09:09:09.064+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "tabName": "类别型",
                                    "elements": [
                                        {
                                            "id": 20500,
                                            "createTime": "2022-05-24T09:09:09.064+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "cate_inputfeaturecolumn",
                                            "label": "输入特征列",
                                            "defaultValue": null,
                                            "value": null,
                                            "options": "",
                                            "rexp": "/\\S/",
                                            "placeholder": "请输入列序号或者名称",
                                            "toolTip": "表示需要填充的特征所在列序号或者列名称，如“1-3,10,column1”,表示取特征在表中的1到3列，10列，column1，从1开始计数，不包含序号列。",
                                            "sequence": 0,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": false
                                        },
                                        {
                                            "id": 20501,
                                            "createTime": "2022-05-24T09:09:09.064+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "cate_originalvalue",
                                            "label": "原值",
                                            "defaultValue": "NULL",
                                            "value": "0",
                                            "options": "NULL:0;空字符串:1;NULL和空字符串:2",
                                            "rexp": "/\\S/",
                                            "placeholder": "请选择",
                                            "toolTip": "",
                                            "sequence": 1,
                                            "elementType": 3,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": false
                                        },
                                        {
                                            "id": 20502,
                                            "createTime": "2022-05-24T09:09:09.064+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "cate_replacementvalue",
                                            "label": "替换值",
                                            "defaultValue": null,
                                            "value": "[\"0\"]",
                                            "options": "[{\"value\":\"3\",\"label\":\"自定义\"},{\"value\":\"4\",\"label\":\"删除行\",\"invisible\":[\"cate_insertvalue\"]},{\"value\":\"7\",\"label\":\"众数\",\"invisible\":[\"cate_insertvalue\"]}]",
                                            "rexp": "/\\S/",
                                            "placeholder": "请选择",
                                            "toolTip": "类别型变量支持：自定义、众数；\n\n数值型变量支持：自定义、min、max 、average、median 、knn、众数、插值法；",
                                            "sequence": 2,
                                            "elementType": 28,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": false
                                        },
                                        {
                                            "id": 20503,
                                            "createTime": "2022-05-24T09:09:09.064+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "cate_insertvalue",
                                            "label": "填充值",
                                            "defaultValue": null,
                                            "value": null,
                                            "options": "",
                                            "rexp": "/\\S/",
                                            "placeholder": "请输入",
                                            "toolTip": "",
                                            "sequence": 3,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": false,
                                            "required": false
                                        }
                                    ]
                                },
                                {
                                    "id": 7503,
                                    "createTime": "2022-05-24T09:09:09.064+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "tabName": "连续型",
                                    "elements": [
                                        {
                                            "id": 20504,
                                            "createTime": "2022-05-24T09:09:09.064+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "conti_inputfeaturecolumn",
                                            "label": "输入特征列",
                                            "defaultValue": null,
                                            "value": null,
                                            "options": "",
                                            "rexp": "/\\S/",
                                            "placeholder": "请输入列序号或者名称",
                                            "toolTip": "表示需要填充的特征所在列序号或者列名称，如“1-3,10,column1”,表示取特征在表中的1到3列，10列，column1，从1开始计数，不包含序号列。",
                                            "sequence": 0,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": false
                                        },
                                        {
                                            "id": 20505,
                                            "createTime": "2022-05-24T09:09:09.064+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "conti_originalvalue",
                                            "label": "原值",
                                            "defaultValue": "NULL",
                                            "value": "0",
                                            "options": "NULL:0;空字符串:1;NULL和空字符串:2",
                                            "rexp": "/\\S/",
                                            "placeholder": "请选择",
                                            "toolTip": "",
                                            "sequence": 1,
                                            "elementType": 3,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": false
                                        },
                                        {
                                            "id": 20506,
                                            "createTime": "2022-05-24T09:09:09.064+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "conti_replacementvalue",
                                            "label": "替换值",
                                            "defaultValue": null,
                                            "value": "[\"0\"]",
                                            "options": "[{\"value\":\"0\",\"label\":\"min\",\"invisible\":[\"conti_insertvalue\"]},{\"value\":\"1\",\"label\":\"max\",\"invisible\":[\"conti_insertvalue\"]},{\"value\":\"2\",\"label\":\"average\",\"invisible\":[\"conti_insertvalue\"]},{\"value\":\"3\",\"label\":\"自定义\"},{\"value\":\"4\",\"label\":\"删除行\",\"invisible\":[\"conti_insertvalue\"]},{\"value\":\"5\",\"label\":\"KNN\",\"invisible\":[\"conti_insertvalue\"]},{\"value\":\"6\",\"label\":\"插值法\",\"invisible\":[\"conti_insertvalue\"], \"children\":[{\"value\":\"6-1\",\"label\":\"linear\",\"invisible\":[\"conti_insertvalue\"]},{\"value\":\"6-2\",\"label\":\"polynomial\",\"invisible\":[\"conti_insertvalue\"]},{\"value\":\"6-3\",\"label\":\"spline\",\"invisible\":[\"conti_insertvalue\"]}]},{\"value\":\"7\",\"label\":\"众数\",\"invisible\":[\"conti_insertvalue\"]},{\"value\":\"8\",\"label\":\"中位数\",\"invisible\":[\"conti_insertvalue\"]}]",
                                            "rexp": "/\\S/",
                                            "placeholder": "请选择",
                                            "toolTip": "类别型变量支持：自定义、众数；\n\n数值型变量支持：自定义、min、max 、average、median 、knn、众数、插值法；",
                                            "sequence": 2,
                                            "elementType": 28,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": false
                                        },
                                        {
                                            "id": 20507,
                                            "createTime": "2022-05-24T09:09:09.064+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "conti_insertvalue",
                                            "label": "填充值",
                                            "defaultValue": null,
                                            "value": null,
                                            "options": "",
                                            "rexp": "/\\S/",
                                            "placeholder": "请输入",
                                            "toolTip": "",
                                            "sequence": 3,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": false,
                                            "required": false
                                        }
                                    ]
                                }
                            ],
                            "inputs": [
                                {
                                    "id": 10359,
                                    "createTime": "2022-05-24T09:09:09.064+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "key": "data_in",
                                    "type": "INPUT",
                                    "cat": "DATA",
                                    "canPreview": true,
                                    "preViewMode": "ONLY100",
                                    "description": "输入",
                                    "model": false
                                }
                            ],
                            "outputs": [
                                {
                                    "id": 10360,
                                    "createTime": "2022-05-24T09:09:09.064+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "key": "data_out",
                                    "type": "OUTPUT",
                                    "cat": "DATA",
                                    "canPreview": true,
                                    "preViewMode": "ONLY100",
                                    "description": "输出",
                                    "access": "SAME",
                                    "columns": "[]",
                                    "model": false
                                }
                            ],
                            "updateTime": "2022-05-24T09:09:09.063+0000",
                            "sequence": 2,
                            "extra": {
                                "type": "NORMAL",
                                "value": null,
                                "mainClass": null,
                                "engine": "PYTHON"
                            },
                            "script": {
                                "MAIN": "# <ALOGCLASSNAME>\n# MissingValueProcessing\n# </ALOGCLASSNAME>\n\n# <EXECTUSCRIPT>\ndef execute(conn, inputs, params, outputs, reportFileName):\n    #<editable>\n    '''\n    载入模块\n    '''\n    from sklearn.pipeline import Pipeline\n    import os\n    import pickle\n    import pandas as pd\n    import db_utils\n    import joblib\n    import sys\n    import json\n    import ast\n    import warnings\n    import numpy as np\n    from common import get_db_column\n    from common import get_feature\n    from SourceCodeImporter import SourceCodeImporter\n    from common import get_db_column_with_type\n    from common import keep_dot_after\n    warnings.filterwarnings(\"ignore\")\n    '''\n    载入redis连接信息\n    '''\n    redisParam = json.loads(params['redis'])\n    redisConn = db_utils.getRedisMasterConnection(redisParam['connectInfo'], redisParam['masterName'],\n                                                  redisParam['password'], redisParam['db'])\n    '''\n    远程模块载入\n    '''\n    name = \"MissingValueProcessing\"\n    code = db_utils.redisReadHsetFile(redisConn, \"alogclass\", name)\n    sys.meta_path.append(SourceCodeImporter(code.decode(),name))\n    from MissingValueProcessing import MissingValueProcessing\n    # from pipeline.alogclass.MissingValueProcessing import MissingValueProcessing\n\n    '''\n    获取输入数据\n    '''\n    keep_dot_after(db_type, inputs)\n    data_in = db_utils.query(conn, 'select * from ' + inputs['data_in'], db_type)\n\n    data_in_shape = data_in.shape\n    '''\n    转换后的参数\n    '''\n    db_columns = get_db_column_with_type(db_type, inputs, conn)\n    columns_values_conti = get_feature(db_columns,params['conti_inputfeaturecolumn'])\n    columns_values_cate = get_feature(db_columns,params['cate_inputfeaturecolumn'])\n    ret_list = list(set(columns_values_conti).intersection(set(columns_values_cate)))\n    if len(ret_list) != 0:\n        raise Exception(\"类别型特征与连续型特征存在交集,不可同时将特征设置为类别型与连续型:\"+str(ret_list))\n    for val in columns_values_cate:\n        if data_in.dtypes[val] is not np.dtype('object'):\n            raise Exception(\"特征: \" + str(val)+\" 不是字符型特征\")\n    for val in columns_values_conti:\n        if data_in.dtypes[val] is np.dtype('object'):\n            raise Exception(\"特征: \" + str(val) + \" 不是数值型特征\")\n\n    fill_value_conti = None\n    fill_value_cate = None\n    # 输入的特征列\n    if len(columns_values_conti) != 0:\n        if params['conti_replacementvalue'] == '[\"0\"]':\n            fill_value_conti =data_in[columns_values_conti].min()\n        elif params['conti_replacementvalue'] == '[\"1\"]':\n            fill_value_conti =data_in[columns_values_conti].max()\n        elif params['conti_replacementvalue'] == '[\"2\"]':\n            fill_value_conti = data_in[columns_values_conti].mean()\n        elif params['conti_replacementvalue'] == '[\"3\"]':\n            #通过冒号来判定是否是字典映射\n            if \":\" in params['conti_insertvalue']:\n                fill_value_conti =ast.literal_eval(params['conti_insertvalue'])\n            else:\n                fill_value_dic_conti={}\n                for col in columns_values_conti:\n                    fill_value_dic_conti[col]=params['conti_insertvalue']\n                fill_value_conti = fill_value_dic_conti\n        elif params['conti_replacementvalue'] == '[\"7\"]':\n            tmp = data_in[columns_values_conti].mode()\n            fill_value_conti = pd.Series({key: tmp[key][0] for key in tmp.keys()})\n        elif params['conti_replacementvalue'] == '[\"8\"]':\n            fill_value_conti = data_in[columns_values_conti].median()\n\n    if len(columns_values_cate) != 0:\n        if \"3\" in params['cate_replacementvalue']:\n            #通过冒号来判定是否是字典映射\n            if \":\" in params['cate_insertvalue']:\n                fill_value_cate =ast.literal_eval(params['cate_insertvalue'])\n            else:\n                fill_value_dic_cate={}\n                for col in columns_values_cate:\n                    fill_value_dic_cate[col]=params['cate_insertvalue']\n                fill_value_cate = fill_value_dic_cate\n        elif \"7\" in params['cate_replacementvalue']:\n            tmp = data_in[columns_values_cate].mode()\n            fill_value_cate = pd.Series({key: tmp[key][0] for key in tmp.keys()})\n\n    '''\n    字段过滤处理\n    '''\n    missingValueProcessing = MissingValueProcessing(params,columns_values_cate,fill_value_cate,columns_values_conti,fill_value_conti)\n    missingValueProcessing.fit()\n    '''\n    保存文件到redis\n    '''\n    pipeline_pkl_name = outputs['data_out'].split('_',1)[0]\n    joblib.dump(missingValueProcessing,params['pipeline_file']+\"pkl_\"+pipeline_pkl_name,compress=3)\n    fileObject= pickle.dumps(joblib.load(params['pipeline_file']+\"pkl_\"+pipeline_pkl_name))\n    os.remove(params['pipeline_file']+\"pkl_\"+pipeline_pkl_name)\n    '''\n    保存pkl的二进制文件到redis中\n    '''\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"pkl_\" + pipeline_pkl_name, fileObject)\n    '''\n    保存模型pkl的参数到redis\n    '''\n    pkl_params = {}\n    for i, v in data_in.dtypes.items():\n        pkl_params[str(i)]=str(v)\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"params_\" + pipeline_pkl_name, str(pkl_params))\n    '''\n    构建pipeline\n    '''\n    pipe = Pipeline([\n        ('MissingValueProcessing', missingValueProcessing)\n    ])\n    data_out=pipe.transform(data_in)\n    '''\n    构建输出结果的shape\n    '''\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"shape_\" + outputs['data_out'], str(data_out.shape[0]) + \",\" + str(data_out.shape[1]))\n\n    change_shape = {\n        'data_in': {\n            'startAt': 1,\n            'endAt': data_in_shape[1]\n        },\n        'data_out': {\n            'startAt': 1,\n            'endAt': data_out.shape[1]\n        },\n        \"change\": {\n            'startAt': data_in_shape[1] + 1,\n            'endAt': data_out.shape[1]\n        }\n    }\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"change_shape_\" + pipeline_pkl_name,json.dumps(change_shape))\n\n    '''\n    将结果写出\n    '''\n    db_utils.write_db_table(db_type=db_type, conn=conn, table_name=outputs['data_out'], data_frame=data_out,\n                            client=client, schema=inputs['schema'], hdfs_path=hdfsTmpPath)\n\n# </EXECTUSCRIPT>\n\n# import  db_utils\n# db_type = 1\n# hdfsTmpPath='/tmp/mlp/'\n# if db_type == 1:\n#     conn = db_utils.get_connection(db_type=db_type, host=\"192.168.198.108\", port=\"10000\", dbname=\"yq_yzx\", user=\"yangqing_yzx\", password=\"12qw#$ER\")\n#     client = db_utils.hdfs_client(hadoop_path=\"http://192.168.198.105:50070\", user=\"yangqing\")\n# else:\n#     client = None\n#     conn = db_utils.get_connection(db_type=db_type, host='192.168.198.172', port='15434', dbname='mlp', user='postgres', password='pgsql123456',schema='admin')\n# inputs1 = {'data_in':'\"10000395_0_1\"','schema':'shilmtest'}\n# outputs1= {'data_out':'10000171_0_1'}\n# params1 = {'project_id':'project_4','inputfeaturecolumn':'2','originalvalue':'2','replacementvalue':'[\"5\"]','insertvalue':'1'\n#     ,'pipeline_file':'/tmp/pyserve/pipeline/'\n#     ,\"redis\":\"{\\\"connectInfo\\\":[[\\\"192.168.198.220\\\",\\\"26380\\\"],[\\\"192.168.198.221\\\",\\\"26380\\\"],[\\\"192.168.198.222\\\",\\\"26380\\\"]],\\\"masterName\\\":\\\"mymaster\\\",\\\"password\\\":\\\"123456\\\",\\\"db\\\":0}\"}\n# execute(conn=conn,inputs=inputs1,outputs=outputs1,params=params1,reportFileName=None)"
                            },
                            "supportPmml": false,
                            "children": null,
                            "parameters": {
                                "cate_inputfeaturecolumn": "",
                                "cate_replacementvalue": "[\"0\"]",
                                "cate_insertvalue": "",
                                "conti_insertvalue": "",
                                "conti_inputfeaturecolumn": "",
                                "cate_originalvalue": "0",
                                "conti_originalvalue": "0",
                                "conti_replacementvalue": "[\"0\"]"
                            }
                        },
                        {
                            "id": 10059,
                            "createTime": "2022-05-24T09:09:09.547+0000",
                            "creatorId": 100,
                            "creatorName": "admin",
                            "name": "LabelEncode",
                            "targetAlgorithm": "com.yzx.mlp.scheduling.core.alog.unparallel.engine.pythonengine.PythonCommonAlgorithm",
                            "parentId": 10027,
                            "enabled": true,
                            "paralleled": false,
                            "component": true,
                            "allowViewSource": true,
                            "iconPath": "iconshujuyuchuli-01",
                            "minimumInput": 1,
                            "inBuilt": true,
                            "hasReport": false,
                            "description": "",
                            "tabs": [
                                {
                                    "id": 7504,
                                    "createTime": "2022-05-24T09:09:09.548+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "tabName": "字段设置",
                                    "elements": [
                                        {
                                            "id": 20508,
                                            "createTime": "2022-05-24T09:09:09.548+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "feature_columns",
                                            "label": "特征列",
                                            "defaultValue": null,
                                            "value": null,
                                            "options": "",
                                            "rexp": "/\\S/",
                                            "placeholder": "请输入需要labelencode所在列序号或者列名称",
                                            "toolTip": "labelencode所在列序号或者列名称",
                                            "sequence": 0,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        }
                                    ]
                                }
                            ],
                            "inputs": [
                                {
                                    "id": 10361,
                                    "createTime": "2022-05-24T09:09:09.548+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "key": "data_in",
                                    "type": "INPUT",
                                    "cat": "DATA",
                                    "canPreview": true,
                                    "preViewMode": "ONLY100",
                                    "description": "输入",
                                    "model": false
                                }
                            ],
                            "outputs": [
                                {
                                    "id": 10362,
                                    "createTime": "2022-05-24T09:09:09.548+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "key": "data_out",
                                    "type": "OUTPUT",
                                    "cat": "DATA",
                                    "canPreview": true,
                                    "preViewMode": "ONLY100",
                                    "description": "输出",
                                    "access": "SAME",
                                    "columns": "[]",
                                    "model": false
                                }
                            ],
                            "updateTime": "2022-05-24T09:09:09.547+0000",
                            "sequence": 3,
                            "extra": {
                                "type": "NORMAL",
                                "value": null,
                                "mainClass": null,
                                "engine": "PYTHON"
                            },
                            "script": {
                                "MAIN": "# <ALOGCLASSNAME>\n# LabelEncode\n# </ALOGCLASSNAME>\n\n# <EXECTUSCRIPT>\ndef execute(conn, inputs, params, outputs, reportFileName):\n\n    '''\n    载入模块\n    '''\n    from sklearn.pipeline import Pipeline\n    import os\n    import pickle\n    import db_utils\n    import joblib\n    import sys\n    import json\n    import warnings\n    from common import get_db_column\n    from common import get_feature\n    from common import get_label\n    from SourceCodeImporter import SourceCodeImporter\n    from common import get_db_column_with_type\n    from common import keep_dot_after\n\n    warnings.filterwarnings(\"ignore\")\n    '''\n    载入redis连接信息\n    '''\n    redisParam = json.loads(params['redis'])\n    redisConn = db_utils.getRedisMasterConnection(redisParam['connectInfo'], redisParam['masterName'],\n                                                  redisParam['password'], redisParam['db'])\n    '''\n    远程模块载入\n    '''\n    name = \"LabelEncode\"\n    code = db_utils.redisReadHsetFile(redisConn, \"alogclass\", \"LabelEncode\")\n    sys.meta_path.append(SourceCodeImporter(code.decode(), name))\n    from LabelEncode import LabelEncode\n    # from pipeline.alogclass.LabelEncode import LabelEncode\n\n    '''\n    获取输入数据\n    '''\n    keep_dot_after(db_type, inputs)\n    data_in = db_utils.query(conn, 'select * from ' + inputs['data_in'], db_type)\n\n    data_in_shape = data_in.shape\n\n    '''\n    转换后的参数\n    '''\n    db_columns = get_db_column_with_type(db_type, inputs, conn)\n    columns_values = get_feature(db_columns, params['feature_columns'])\n\n    '''\n    管道处理\n    '''\n    label_encode = LabelEncode(params, columns_values)\n    label_encode.fit()\n    # data_out = treeModelScore.transform(data_in)\n\n    '''\n    保存文件到redis\n    '''\n    pipeline_pkl_name = outputs['data_out'].split('_', 1)[0]\n    joblib.dump(label_encode, params['pipeline_file']+\"pkl_\" + pipeline_pkl_name, compress=3)\n    fileObject = pickle.dumps(joblib.load(params['pipeline_file']+\"pkl_\" + pipeline_pkl_name))\n    os.remove(params['pipeline_file']+\"pkl_\" + pipeline_pkl_name)\n    '''\n    保存pkl的二进制文件到redis中\n    '''\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"pkl_\" + pipeline_pkl_name, fileObject)\n    '''\n    保存模型pkl的参数到redis\n    '''\n    pkl_params = {}\n    for i, v in data_in.dtypes.items():\n        pkl_params[str(i)]=str(v)\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"params_\" + pipeline_pkl_name, str(pkl_params))\n    '''\n    构建pipeline\n    '''\n    pipe = Pipeline([\n        ('LabelEncode', label_encode)\n    ])\n    data_out = pipe.transform(data_in)\n    '''\n    构建输出结果的shape\n    '''\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"shape_\" + outputs['data_out'], str(data_out.shape[0]) + \",\" + str(data_out.shape[1]))\n\n    change_shape = {\n        'data_in': {\n            'startAt': 1,\n            'endAt': data_in_shape[1]\n        },\n        'data_out': {\n            'startAt': 1,\n            'endAt': data_out.shape[1]\n        },\n        \"change\": {\n            'startAt': data_in_shape[1] + 1,\n            'endAt': data_out.shape[1]\n        }\n    }\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"change_shape_\" + pipeline_pkl_name,json.dumps(change_shape))\n\n    '''\n    将结果写出\n    '''\n    db_utils.write_db_table(db_type=db_type, conn=conn, table_name=outputs['data_out'], data_frame=data_out,\n                            client=client, schema=inputs['schema'], hdfs_path=hdfsTmpPath)\n\n# </EXECTUSCRIPT>\n\n# import db_utils\n# db_type = 1\n# if db_type == 1:\n#     conn = db_utils.get_connection(db_type=db_type, host=\"192.168.198.108\", port=\"10000\", dbname=\"yq_yzx\", user=\"yangqing_yzx\", password=\"12qw#$ER\")\n#     client = db_utils.hdfs_client(hadoop_path=\"http://192.168.198.105:50070\", user='yangqing_yzx')\n# else:\n#     client = None\n#     conn = db_utils.get_connection(db_type=db_type, host='192.168.198.172', port='15434', dbname='mlp', user='postgres', password='pgsql123456',schema='admin')\n# inputs1 = {'data_in':'\"admin\".\"10002082_0_1\"','schema':'admin'}\n# outputs1= {'data_out':'10000171_0_4'}\n# params1 = {'project_id': 'project_5',\n#            'feature_columns': '2-5',\n#            'pipeline_file': '/tmp/pyserve/pipeline/',\n#            \"diyfunctioncontent\": 'def feature_handle_diy(data_in):\\n\\tdata_in+=10\\n\\treturn data_in',\n#            \"redis\": \"{\\\"connectInfo\\\":[[\\\"192.168.198.220\\\",\\\"26380\\\"],[\\\"192.168.198.221\\\",\\\"26380\\\"],[\\\"192.168.198.222\\\",\\\"26380\\\"]],\\\"masterName\\\":\\\"mymaster\\\",\\\"password\\\":\\\"123456\\\",\\\"db\\\":0}\"\n#            }\n# execute(conn=conn,inputs=inputs1,outputs=outputs1,params=params1,reportFileName=\"comb.html\")"
                            },
                            "supportPmml": false,
                            "children": null,
                            "parameters": {
                                "feature_columns": ""
                            }
                        },
                        {
                            "id": 10063,
                            "createTime": "2022-05-24T09:09:09.703+0000",
                            "creatorId": 100,
                            "creatorName": "admin",
                            "name": "删除重复行",
                            "targetAlgorithm": "com.yzx.mlp.scheduling.core.alog.unparallel.engine.pythonengine.PythonCommonAlgorithm",
                            "parentId": 10027,
                            "enabled": true,
                            "paralleled": false,
                            "component": true,
                            "allowViewSource": true,
                            "iconPath": "iconshujuyuchuli-01",
                            "minimumInput": 1,
                            "inBuilt": true,
                            "hasReport": false,
                            "description": "",
                            "tabs": [
                                {
                                    "id": 7505,
                                    "createTime": "2022-05-24T09:09:09.703+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "tabName": "字段设置",
                                    "elements": [
                                        {
                                            "id": 20509,
                                            "createTime": "2022-05-24T09:09:09.703+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "feature_columns",
                                            "label": "特征列",
                                            "defaultValue": null,
                                            "value": null,
                                            "options": "",
                                            "rexp": "/\\S/",
                                            "placeholder": "请输入需要labelencode所在列序号或者列名称",
                                            "toolTip": "labelencode所在列序号或者列名称",
                                            "sequence": 0,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        },
                                        {
                                            "id": 20510,
                                            "createTime": "2022-05-24T09:09:09.703+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "keep_type",
                                            "label": "保留策略",
                                            "defaultValue": null,
                                            "value": "1",
                                            "options": "first:1;last:2;False:3",
                                            "rexp": "/\\S/",
                                            "placeholder": "请选择",
                                            "toolTip": "选择保留策略",
                                            "sequence": 0,
                                            "elementType": 3,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        }
                                    ]
                                }
                            ],
                            "inputs": [
                                {
                                    "id": 10363,
                                    "createTime": "2022-05-24T09:09:09.703+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "key": "data_in",
                                    "type": "INPUT",
                                    "cat": "DATA",
                                    "canPreview": true,
                                    "preViewMode": "ONLY100",
                                    "description": "输入",
                                    "model": false
                                }
                            ],
                            "outputs": [
                                {
                                    "id": 10364,
                                    "createTime": "2022-05-24T09:09:09.703+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "key": "data_out",
                                    "type": "OUTPUT",
                                    "cat": "DATA",
                                    "canPreview": true,
                                    "preViewMode": "ONLY100",
                                    "description": "输出",
                                    "access": "SAME",
                                    "columns": "[]",
                                    "model": false
                                }
                            ],
                            "updateTime": "2022-05-24T09:09:09.703+0000",
                            "sequence": 4,
                            "extra": {
                                "type": "NORMAL",
                                "value": null,
                                "mainClass": null,
                                "engine": "PYTHON"
                            },
                            "script": {
                                "MAIN": "# <ALOGCLASSNAME>\n# DropDuplicates\n# </ALOGCLASSNAME>\n\n# <EXECTUSCRIPT>\ndef execute(conn, inputs, params, outputs, reportFileName):\n\n    '''\n    载入模块\n    '''\n    import warnings\n    import json\n    import sys\n    from sklearn.pipeline import Pipeline\n    from common import get_feature\n    import os\n    import pickle\n    import db_utils\n    import joblib\n    from SourceCodeImporter import SourceCodeImporter\n    from common import get_db_column_with_type\n    from common import keep_dot_after\n    warnings.filterwarnings(\"ignore\")\n\n    '''\n    载入redis连接信息\n    '''\n    redisParam = json.loads(params['redis'])\n    redisConn = db_utils.getRedisMasterConnection(redisParam['connectInfo'], redisParam['masterName'],\n                                                  redisParam['password'], redisParam['db'])\n    '''\n    远程模块载入\n    '''\n    name = \"DropDuplicates\"\n    code = db_utils.redisReadHsetFile(redisConn, \"alogclass\", \"DropDuplicates\")\n    sys.meta_path.append(SourceCodeImporter(code.decode(),name))\n    from DropDuplicates import DropDuplicates\n    # from pipeline.alogclass.DropDuplicates import DropDuplicates\n\n    '''\n    获取输入数据\n    '''\n    keep_dot_after(db_type, inputs)\n    data_in = db_utils.query(conn, 'select * from ' + inputs['data_in'], db_type)\n\n    data_in_shape = data_in.shape\n    '''\n    转换后的参数\n    '''\n    db_columns = get_db_column_with_type(db_type, inputs, conn)\n    columns_values = get_feature(db_columns, params['feature_columns'])\n\n    keep_type = params['keep_type']\n    if '1' in keep_type:\n        keep_type = 'first'\n    elif '2' in keep_type:\n        keep_type = 'last'\n    elif '3' in keep_type:\n        keep_type = False\n\n    '''\n    输出去重后数据\n    '''\n    dropDuplicates = DropDuplicates(params, columns_values,keep_type)\n    dropDuplicates.fit()\n\n    '''\n    保存pkl文件到redis\n    '''\n    pipeline_pkl_name = outputs['data_out'].split('_', 1)[0]\n    joblib.dump(dropDuplicates, params['pipeline_file'] + \"pkl_\" + pipeline_pkl_name, compress=3)\n    fileObject = pickle.dumps(joblib.load(params['pipeline_file'] + \"pkl_\" + pipeline_pkl_name))\n    os.remove(params['pipeline_file'] + \"pkl_\" + pipeline_pkl_name)\n\n    '''\n    保存pkl的二进制文件到redis中\n    '''\n    redisParam = json.loads(params['redis'])\n    redisConn = db_utils.getRedisMasterConnection(redisParam['connectInfo'], redisParam['masterName'],\n                                                  redisParam['password'], redisParam['db'])\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"pkl_\" + pipeline_pkl_name, fileObject)\n\n    '''\n    保存模型pkl的参数到redis\n    '''\n    pkl_params = {}\n    for i, v in data_in.dtypes.items():\n        pkl_params[str(i)] = str(v)\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"params_\" + pipeline_pkl_name, str(pkl_params))\n    '''\n    构建pipeline\n    '''\n    pipe = Pipeline([\n        ('DropDuplicates', dropDuplicates)\n    ])\n    data_out = pipe.transform(data_in)\n\n    '''\n    构建输出结果的shape\n    '''\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"shape_\" + outputs['data_out'],\n                                str(data_out.shape[0]) + \",\" + str(data_out.shape[1]))\n\n    change_shape = {\n        'data_in': {\n            'startAt': 1,\n            'endAt': data_in_shape[1]\n        },\n        'data_out': {\n            'startAt': 1,\n            'endAt': data_out.shape[1]\n        },\n        \"change\": {\n            'startAt': data_in_shape[1] + 1,\n            'endAt': data_out.shape[1]\n        }\n    }\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"change_shape_\" + pipeline_pkl_name,json.dumps(change_shape))\n\n    '''\n    将结果写出\n    '''\n    db_utils.write_db_table(db_type=db_type, conn=conn, table_name=outputs['data_out'], data_frame=data_out,\n                            client=client, schema=inputs['schema'], hdfs_path=hdfsTmpPath)\n\n# </EXECTUSCRIPT>\n\n# import db_utils\n# db_type = 1\n# if db_type == 1:\n#     conn = db_utils.get_connection(db_type=db_type, host=\"192.168.198.108\", port=\"10000\", dbname=\"yq_yzx\", user=\"yangqing_yzx\", password=\"12qw#$ER\")\n#     client = db_utils.hdfs_client(hadoop_path=\"http://192.168.198.105:50070\")\n# else:\n#     client = None\n#     conn = db_utils.get_connection(db_type=db_type, host='192.168.198.172', port='15434', dbname='mlp', user='postgres', password='pgsql123456',schema='admin')\n# inputs1 = {'data_in':'\"admin\".\"10000240_0_1\"','schema':'admin'}\n# outputs1= {'data_out':'10000427_0_2'}\n# params1 = {'project_id':'project_1','column_name_filter_strategy':'0','edadatashowgoodbad':'2','edadatashowduplicate':'3-4','column_type_filter_strategy':'0','column_type_filter_name':'float,int','pipeline_file':'/tmp/pyserve/pipeline/'\n#     ,\"redis\":\"{\\\"connectInfo\\\":[[\\\"192.168.198.220\\\",\\\"26380\\\"],[\\\"192.168.198.221\\\",\\\"26380\\\"],[\\\"192.168.198.222\\\",\\\"26380\\\"]],\\\"masterName\\\":\\\"mymaster\\\",\\\"password\\\":\\\"123456\\\",\\\"db\\\":0}\"}\n# execute(conn=conn,inputs=inputs1,outputs=outputs1,params=params1,reportFileName=\"test.html\")\n\n"
                            },
                            "supportPmml": false,
                            "children": null,
                            "parameters": {
                                "feature_columns": "",
                                "keep_type": "1"
                            }
                        }
                    ],
                    "parameters": {}
                },
                {
                    "id": 10011,
                    "createTime": "2022-05-24T09:09:10.049+0000",
                    "creatorId": 100,
                    "creatorName": "admin",
                    "name": "工具",
                    "targetAlgorithm": null,
                    "parentId": 10005,
                    "enabled": true,
                    "paralleled": false,
                    "component": true,
                    "allowViewSource": true,
                    "iconPath": "iconshujuyuchuli-01",
                    "minimumInput": 0,
                    "inBuilt": true,
                    "hasReport": false,
                    "description": null,
                    "tabs": [],
                    "inputs": [],
                    "outputs": [],
                    "updateTime": "2022-05-24T09:09:10.049+0000",
                    "sequence": 2,
                    "extra": {
                        "type": "NORMAL",
                        "value": null,
                        "mainClass": null,
                        "engine": "PYTHON"
                    },
                    "script": {},
                    "supportPmml": true,
                    "children": [
                        {
                            "id": 10012,
                            "createTime": "2022-05-24T09:09:10.087+0000",
                            "creatorId": 100,
                            "creatorName": "admin",
                            "name": "SQL脚本",
                            "targetAlgorithm": "com.yzx.mlp.scheduling.core.alog.unparallel.sql.SQLExecutor",
                            "parentId": 10011,
                            "enabled": true,
                            "paralleled": false,
                            "component": true,
                            "allowViewSource": false,
                            "iconPath": "iconshujuyuchuli-01",
                            "minimumInput": 4,
                            "inBuilt": true,
                            "hasReport": false,
                            "description": "1、支持sql语句，\n\n2、接入数据源时，会自动获取input字段；\n\n3、支持单条select语句，使用上方输入表时，输入格式如下：\n\n使用input1举例：select*from{{input1}}\n\n4、支持表之间的关联，最多4张表",
                            "tabs": [
                                {
                                    "id": 7506,
                                    "createTime": "2022-05-24T09:09:10.087+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "tabName": "输入",
                                    "elements": [
                                        {
                                            "id": 20511,
                                            "createTime": "2022-05-24T09:09:10.087+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "sqlinputList",
                                            "label": "输入",
                                            "defaultValue": null,
                                            "value": null,
                                            "options": "",
                                            "rexp": "",
                                            "placeholder": "",
                                            "toolTip": "",
                                            "sequence": 1,
                                            "elementType": 14,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": false
                                        },
                                        {
                                            "id": 20512,
                                            "createTime": "2022-05-24T09:09:10.087+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "SQL",
                                            "label": "脚本",
                                            "defaultValue": null,
                                            "value": null,
                                            "options": "",
                                            "rexp": "/\\S{1,100000}/",
                                            "placeholder": "",
                                            "toolTip": "说明：使用上方输入表时，输入格式如下：\n使用input1举例：select * from {{input1}} \n仅支持单条select语句。",
                                            "sequence": 2,
                                            "elementType": 8,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        }
                                    ]
                                }
                            ],
                            "inputs": [
                                {
                                    "id": 10365,
                                    "createTime": "2022-05-24T09:09:10.087+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "key": "input1",
                                    "type": "INPUT",
                                    "cat": "DATA",
                                    "canPreview": false,
                                    "preViewMode": "ONLY100",
                                    "description": "输入一",
                                    "model": false
                                },
                                {
                                    "id": 10366,
                                    "createTime": "2022-05-24T09:09:10.087+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "key": "input2",
                                    "type": "INPUT",
                                    "cat": "DATA",
                                    "canPreview": false,
                                    "preViewMode": "ONLY100",
                                    "description": "输入二",
                                    "model": false
                                },
                                {
                                    "id": 10367,
                                    "createTime": "2022-05-24T09:09:10.087+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "key": "input3",
                                    "type": "INPUT",
                                    "cat": "DATA",
                                    "canPreview": false,
                                    "preViewMode": "ONLY100",
                                    "description": "输入三",
                                    "model": false
                                },
                                {
                                    "id": 10368,
                                    "createTime": "2022-05-24T09:09:10.087+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "key": "input4",
                                    "type": "INPUT",
                                    "cat": "DATA",
                                    "canPreview": false,
                                    "preViewMode": "ONLY100",
                                    "description": "输入四",
                                    "model": false
                                }
                            ],
                            "outputs": [
                                {
                                    "id": 10369,
                                    "createTime": "2022-05-24T09:09:10.087+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "key": "output",
                                    "type": "OUTPUT",
                                    "cat": "DATA",
                                    "canPreview": true,
                                    "preViewMode": "ONLY100",
                                    "description": "输出",
                                    "access": "SAME",
                                    "columns": "[]",
                                    "model": false
                                }
                            ],
                            "updateTime": "2022-05-24T09:09:10.087+0000",
                            "sequence": 0,
                            "extra": {
                                "type": "NORMAL",
                                "value": null,
                                "mainClass": null,
                                "engine": "PYTHON"
                            },
                            "script": {},
                            "supportPmml": false,
                            "children": null,
                            "parameters": {
                                "sqlinputList": "",
                                "SQL": ""
                            }
                        },
                        {
                            "id": 10061,
                            "createTime": "2022-05-24T09:09:12.170+0000",
                            "creatorId": 100,
                            "creatorName": "admin",
                            "name": "数据拆分",
                            "targetAlgorithm": "com.yzx.mlp.scheduling.core.alog.unparallel.engine.pythonengine.PythonCommonAlgorithm",
                            "parentId": 10011,
                            "enabled": true,
                            "paralleled": false,
                            "component": true,
                            "allowViewSource": true,
                            "iconPath": "icontezhenggongcheng-01",
                            "minimumInput": 1,
                            "inBuilt": true,
                            "hasReport": false,
                            "description": "数据拆分",
                            "tabs": [
                                {
                                    "id": 7509,
                                    "createTime": "2022-05-24T09:09:12.172+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "tabName": "参数设置",
                                    "elements": [
                                        {
                                            "id": 20516,
                                            "createTime": "2022-05-24T09:09:12.172+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "split_way",
                                            "label": "拆分方式",
                                            "defaultValue": null,
                                            "value": "1",
                                            "options": "按比例拆分:1",
                                            "rexp": "/\\S/",
                                            "placeholder": "",
                                            "toolTip": "",
                                            "sequence": 0,
                                            "elementType": 3,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        },
                                        {
                                            "id": 20517,
                                            "createTime": "2022-05-24T09:09:12.172+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "split_percent",
                                            "label": "切分比例",
                                            "defaultValue": null,
                                            "value": null,
                                            "options": "",
                                            "rexp": "/\\S/",
                                            "placeholder": "",
                                            "toolTip": "",
                                            "sequence": 1,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        },
                                        {
                                            "id": 20518,
                                            "createTime": "2022-05-24T09:09:12.172+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "random_seed",
                                            "label": "随机数种子",
                                            "defaultValue": null,
                                            "value": null,
                                            "options": "",
                                            "rexp": "/\\S/",
                                            "placeholder": "",
                                            "toolTip": "",
                                            "sequence": 2,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        }
                                    ]
                                }
                            ],
                            "inputs": [
                                {
                                    "id": 10377,
                                    "createTime": "2022-05-24T09:09:12.172+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "key": "data_in",
                                    "type": "INPUT",
                                    "cat": "DATA",
                                    "canPreview": true,
                                    "preViewMode": "ONLY100",
                                    "description": "输入",
                                    "model": false
                                }
                            ],
                            "outputs": [
                                {
                                    "id": 10378,
                                    "createTime": "2022-05-24T09:09:12.172+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "key": "data_out_train",
                                    "type": "OUTPUT",
                                    "cat": "DATA",
                                    "canPreview": true,
                                    "preViewMode": "ONLY100",
                                    "description": "输出1",
                                    "access": "SAME",
                                    "columns": "[]",
                                    "model": false
                                },
                                {
                                    "id": 10379,
                                    "createTime": "2022-05-24T09:09:12.172+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "key": "data_out_test",
                                    "type": "OUTPUT",
                                    "cat": "DATA",
                                    "canPreview": true,
                                    "preViewMode": "ONLY100",
                                    "description": "输出2",
                                    "access": "SAME",
                                    "columns": "[]",
                                    "model": false
                                }
                            ],
                            "updateTime": "2022-05-24T09:09:12.170+0000",
                            "sequence": 3,
                            "extra": {
                                "type": "NORMAL",
                                "value": null,
                                "mainClass": null,
                                "engine": "PYTHON"
                            },
                            "script": {
                                "MAIN": "# <ALOGCLASSNAME>\n# undefined\n# </ALOGCLASSNAME>\n\n# <EXECTUSCRIPT>\ndef execute(conn, inputs, params, outputs, reportFileName):\n\n    '''\n    载入模块\n    '''\n    import db_utils\n    import json\n    import warnings\n    from common import keep_dot_after\n    from sklearn.model_selection import train_test_split\n\n    warnings.filterwarnings(\"ignore\")\n    '''\n    载入redis连接信息\n    '''\n    redisParam = json.loads(params['redis'])\n    redisConn = db_utils.getRedisMasterConnection(redisParam['connectInfo'], redisParam['masterName'],\n                                                  redisParam['password'], redisParam['db'])\n    '''\n    获取输入数据\n    '''\n    keep_dot_after(db_type, inputs)\n    data_in = db_utils.query(conn, 'select * from ' + inputs['data_in'], db_type)\n\n    data_in_shape = data_in.shape\n\n    split_way = int(params['split_way'])\n    random_seed = int(params['random_seed'])\n    data_out_train = None\n    data_out_test = None\n    if split_way == 1:\n        split_percent = float(params['split_percent'])\n        data_out_train, data_out_test = train_test_split(data_in,test_size=split_percent,random_state=random_seed)\n\n    node_name = outputs['data_out_train'].split('_', 1)[0]\n    '''\n    构建输出结果的shape\n    '''\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"shape_\" + outputs['data_out_train'], str(data_out_train.shape[0]) + \",\" + str(data_out_train.shape[1]))\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"shape_\" + outputs['data_out_test'], str(data_out_test.shape[0]) + \",\" + str(data_out_test.shape[1]))\n\n    change_shape = {\n        'data_in': {\n            'startAt': 1,\n            'endAt': data_in_shape[1]\n        },\n        'data_out_test': {\n            'startAt': 1,\n            'endAt': data_out_test.shape[1]\n        },\n        'data_out_train': {\n            'startAt': 1,\n            'endAt': data_out_train.shape[1]\n        },\n        \"change\": {\n            'startAt': data_in_shape[1] + 1,\n            'endAt': data_out_test.shape[1]\n        }\n    }\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"change_shape_\" + node_name,json.dumps(change_shape))\n\n    '''\n    将结果写出\n    '''\n    db_utils.write_db_table(db_type=db_type, conn=conn, table_name=outputs['data_out_train'], data_frame=data_out_train,\n                            client=client, schema=inputs['schema'], hdfs_path=hdfsTmpPath)\n    db_utils.write_db_table(db_type=db_type, conn=conn, table_name=outputs['data_out_test'], data_frame=data_out_test,\n                            client=client, schema=inputs['schema'], hdfs_path=hdfsTmpPath)\n\n# </EXECTUSCRIPT>\n\n# import db_utils\n# db_type = 1\n# if db_type == 1:\n#     conn = db_utils.get_connection(db_type=db_type, host=\"192.168.198.108\", port=\"10000\", dbname=\"yq_yzx\", user=\"yangqing_yzx\", password=\"12qw#$ER\")\n#     client = db_utils.hdfs_client(hadoop_path=\"http://192.168.198.105:50070\", user='yangqing_yzx')\n# else:\n#     client = None\n#     conn = db_utils.get_connection(db_type=db_type, host='192.168.198.172', port='15434', dbname='mlp', user='postgres', password='pgsql123456',schema='admin')\n# inputs1 = {'data_in':'\"admin\".\"10002082_0_1\"','schema':'admin'}\n# outputs1= {'data_out':'10000171_0_4'}\n# params1 = {'project_id': 'project_5',\n#            'feature_columns': '2-5',\n#            'pipeline_file': '/tmp/pyserve/pipeline/',\n#            \"diyfunctioncontent\": 'def feature_handle_diy(data_in):\\n\\tdata_in+=10\\n\\treturn data_in',\n#            \"redis\": \"{\\\"connectInfo\\\":[[\\\"192.168.198.220\\\",\\\"26380\\\"],[\\\"192.168.198.221\\\",\\\"26380\\\"],[\\\"192.168.198.222\\\",\\\"26380\\\"]],\\\"masterName\\\":\\\"mymaster\\\",\\\"password\\\":\\\"123456\\\",\\\"db\\\":0}\"\n#            }\n# execute(conn=conn,inputs=inputs1,outputs=outputs1,params=params1,reportFileName=\"comb.html\")"
                            },
                            "supportPmml": false,
                            "children": null,
                            "parameters": {
                                "random_seed": "",
                                "split_way": "1",
                                "split_percent": ""
                            }
                        }
                    ],
                    "parameters": {}
                }
            ],
            "parameters": {}
        },
        {
            "id": 10015,
            "createTime": "2022-05-24T09:09:13.226+0000",
            "creatorId": 100,
            "creatorName": "admin",
            "name": "特征工程",
            "targetAlgorithm": null,
            "parentId": 0,
            "enabled": true,
            "paralleled": false,
            "component": false,
            "allowViewSource": true,
            "iconPath": "icontezhenggongcheng-01",
            "minimumInput": 0,
            "inBuilt": true,
            "hasReport": false,
            "description": null,
            "tabs": [],
            "inputs": [],
            "outputs": [],
            "updateTime": "2022-05-24T09:09:13.226+0000",
            "sequence": 3,
            "extra": {
                "type": "NORMAL",
                "value": null,
                "mainClass": null,
                "engine": "PYTHON"
            },
            "script": {},
            "supportPmml": false,
            "children": [
                {
                    "id": 10016,
                    "createTime": "2022-05-24T09:09:13.324+0000",
                    "creatorId": 100,
                    "creatorName": "admin",
                    "name": "特征变换",
                    "targetAlgorithm": null,
                    "parentId": 10015,
                    "enabled": true,
                    "paralleled": false,
                    "component": false,
                    "allowViewSource": true,
                    "iconPath": "icontezhenggongcheng-01",
                    "minimumInput": 0,
                    "inBuilt": true,
                    "hasReport": false,
                    "description": null,
                    "tabs": [],
                    "inputs": [],
                    "outputs": [],
                    "updateTime": "2022-05-24T09:09:13.324+0000",
                    "sequence": 0,
                    "extra": {
                        "type": "NORMAL",
                        "value": null,
                        "mainClass": null,
                        "engine": "PYTHON"
                    },
                    "script": {},
                    "supportPmml": false,
                    "children": [
                        {
                            "id": 10017,
                            "createTime": "2022-05-24T09:09:13.355+0000",
                            "creatorId": 100,
                            "creatorName": "admin",
                            "name": "特征离散",
                            "targetAlgorithm": "com.yzx.mlp.scheduling.core.alog.unparallel.engine.pythonengine.PythonCommonAlgorithm",
                            "parentId": 10016,
                            "enabled": true,
                            "paralleled": false,
                            "component": true,
                            "allowViewSource": true,
                            "iconPath": "icontezhenggongcheng-01",
                            "minimumInput": 1,
                            "inBuilt": true,
                            "hasReport": true,
                            "description": "描述：数据离散化是指将连续的数据进行分段，使其变为一段段离散化的区间。\n离散化列：在表最后新增离散列\n               名称：原名称_sp01\n               原始列保留",
                            "tabs": [
                                {
                                    "id": 7510,
                                    "createTime": "2022-05-24T09:09:13.356+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "tabName": "字段设置",
                                    "elements": [
                                        {
                                            "id": 20519,
                                            "createTime": "2022-05-24T09:09:13.356+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "discretefeatureseries",
                                            "label": "离散特征列",
                                            "defaultValue": null,
                                            "value": null,
                                            "options": "",
                                            "rexp": "/\\S/",
                                            "placeholder": "请输入特征所在列序号或者名称",
                                            "toolTip": "表示需离散处理的特征所在列，如“1-3,10,column1”,表示取特征在表中的1到3列，10列，column1，序号从1开始计数，不包含序号列。",
                                            "sequence": 0,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        },
                                        {
                                            "id": 20520,
                                            "createTime": "2022-05-24T09:09:13.356+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "discretelabelcolumn",
                                            "label": "标签列",
                                            "defaultValue": null,
                                            "value": null,
                                            "options": "",
                                            "rexp": "/\\S/",
                                            "placeholder": "标签列所在的列号或名称，如：1",
                                            "toolTip": "标签列所在的列号或名称，如：1或者column1 序号从1开始计数，不包含序号列。",
                                            "sequence": 1,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        }
                                    ]
                                },
                                {
                                    "id": 7511,
                                    "createTime": "2022-05-24T09:09:13.356+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "tabName": "参数设置",
                                    "elements": [
                                        {
                                            "id": 20521,
                                            "createTime": "2022-05-24T09:09:13.356+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "discretenull",
                                            "label": "缺失值是否分箱",
                                            "defaultValue": "是",
                                            "value": "1",
                                            "options": "是:1;否:2",
                                            "rexp": "/\\S/",
                                            "placeholder": "请选择",
                                            "toolTip": "",
                                            "sequence": 0,
                                            "elementType": 3,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        },
                                        {
                                            "id": 20522,
                                            "createTime": "2022-05-24T09:09:13.356+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "discretemethod",
                                            "label": "离散方法",
                                            "defaultValue": "等距离散",
                                            "value": "[\"1\"]",
                                            "options": "[\n    {\"value\": \"1\", \"label\": \"卡方\", \"invisible\": [\"discretenodeofbins\"]},\n    {\"value\": \"2\", \"label\": \"决策树\", \"invisible\": [\"discretenodeofbins\"]},\n    {\"value\": \"3\", \"label\": \"聚类\", \"invisible\": [\"discretenodeofbins\",\"discretenoteprecent\"]},\n    {\"value\": \"4\", \"label\": \"等频\", \"invisible\": [\"discretenodeofbins\",\"discretenoteprecent\"]},\n    {\"value\": \"5\", \"label\": \"等距\", \"invisible\": [\"discretenodeofbins\",\"discretenoteprecent\"]},\n    {\"value\": \"6\", \"label\": \"自定义\", \"invisible\": [\"discretenumberofbins\",\"discretenoteprecent\"]}\n]",
                                            "rexp": "/\\S/",
                                            "placeholder": "请选择",
                                            "toolTip": "",
                                            "sequence": 1,
                                            "elementType": 28,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        },
                                        {
                                            "id": 20523,
                                            "createTime": "2022-05-24T09:09:13.356+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "discretenumberofbins",
                                            "label": "分箱数量",
                                            "defaultValue": null,
                                            "value": null,
                                            "options": "",
                                            "rexp": "/\\S/",
                                            "placeholder": "请输入,如:10",
                                            "toolTip": "分箱的个数。",
                                            "sequence": 2,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        },
                                        {
                                            "id": 20524,
                                            "createTime": "2022-05-24T09:09:13.356+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "discretenodeofbins",
                                            "label": "自定义分箱节点",
                                            "defaultValue": null,
                                            "value": "[{\"feature\":\"1\",\"nums\":\"1,2,3\"}]",
                                            "options": "[{\"label\":\"特征(列名)\",\"prop\":\"feature\",\"placeholder\":\"请输入特征(列名)\"},{\"label\":\"自定义分箱节点\",\"prop\":\"nums\",\"placeholder\":\"请输入自定义分箱节点\"}]",
                                            "rexp": "/\\S/",
                                            "placeholder": "",
                                            "toolTip": "如果有缺失值单独分箱的情况，分箱的节点的格式会有差异，如，类别型的为[[45+, 35-44], [nan], [25-34], [18-24, 0-17]]，数值型的为[1,2,5,np.nan]",
                                            "sequence": 3,
                                            "elementType": 29,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": false,
                                            "required": false
                                        },
                                        {
                                            "id": 20525,
                                            "createTime": "2022-05-24T09:09:13.356+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "discretenoteprecent",
                                            "label": "节点最少占比",
                                            "defaultValue": null,
                                            "value": null,
                                            "options": "",
                                            "rexp": "/\\S/",
                                            "placeholder": "请输入,如:0.1",
                                            "toolTip": "每箱至少包含样本量，可以是数字或者占比",
                                            "sequence": 4,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": false
                                        }
                                    ]
                                }
                            ],
                            "inputs": [
                                {
                                    "id": 10380,
                                    "createTime": "2022-05-24T09:09:13.356+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "key": "data_in",
                                    "type": "INPUT",
                                    "cat": "DATA",
                                    "canPreview": true,
                                    "preViewMode": "ONLY100",
                                    "description": "输入",
                                    "model": false
                                }
                            ],
                            "outputs": [
                                {
                                    "id": 10381,
                                    "createTime": "2022-05-24T09:09:13.356+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "key": "data_out",
                                    "type": "OUTPUT",
                                    "cat": "DATA",
                                    "canPreview": true,
                                    "preViewMode": "ONLY100",
                                    "description": "输出",
                                    "access": "SAME",
                                    "columns": "[]",
                                    "model": false
                                }
                            ],
                            "updateTime": "2022-05-24T09:09:13.355+0000",
                            "sequence": 0,
                            "extra": {
                                "type": "NORMAL",
                                "value": null,
                                "mainClass": null,
                                "engine": "PYTHON"
                            },
                            "script": {
                                "MAIN": "# <ALOGCLASSNAME>\n# CharacteristicsDiscrete\n# </ALOGCLASSNAME>\n\n# <EXECTUSCRIPT>\ndef execute(conn, inputs, params, outputs, reportFileName):\n\n    '''\n    载入模块\n    '''\n    from sklearn.pipeline import Pipeline\n    import pickle\n    import db_utils\n    import joblib\n    import sys\n    import json\n    import os\n    import warnings\n    from common import get_db_column\n    from common import get_feature\n    from common import get_label\n    from SourceCodeImporter import SourceCodeImporter\n    from common import get_db_column_with_type\n    from common import keep_dot_after\n    import ast\n    import numpy as np\n    import re\n    warnings.filterwarnings(\"ignore\")\n    '''\n    载入redis连接信息\n    '''\n    redisParam = json.loads(params['redis'])\n    redisConn = db_utils.getRedisMasterConnection(redisParam['connectInfo'], redisParam['masterName'],\n                                                  redisParam['password'], redisParam['db'])\n    '''\n    远程模块载入\n    '''\n    name = \"CharacteristicsDiscrete\"\n    code = db_utils.redisReadHsetFile(redisConn, \"alogclass\", name)\n    sys.meta_path.append(SourceCodeImporter(code.decode(),name))\n    sys.meta_path.append(SourceCodeImporter(code.decode(),\"BoxCut\"))\n    from CharacteristicsDiscrete import CharacteristicsDiscrete\n    from CharacteristicsDiscrete import BoxCut\n\n    # from pipeline.alogclass.CharacteristicsDiscrete import CharacteristicsDiscrete\n    # from pipeline.alogclass.CharacteristicsDiscrete import BoxCut\n\n    '''\n    获取输入数据\n    '''\n    keep_dot_after(db_type, inputs)\n    data_in = db_utils.query(conn, 'select * from ' + inputs['data_in'], db_type)\n\n    data_in_shape = data_in.shape\n    '''\n    转换后的参数\n    '''\n    db_columns = get_db_column_with_type(db_type, inputs, conn)\n    columns_values = get_feature(db_columns,params['discretefeatureseries'])\n    label_column = get_label(db_columns,params['discretelabelcolumn'])\n\n    discretenull = params['discretenull']\n    if \"1\" in discretenull:\n        discretenull = True\n    else:\n        discretenull = False\n\n    discrete_method = params['discretemethod']\n    if \"1\" in discrete_method:\n        discrete_method = 'chi'\n    elif \"2\" in discrete_method:\n        discrete_method = 'dt'\n    elif \"3\" in discrete_method:\n        discrete_method = 'kmeans'\n    elif \"4\" in discrete_method:\n        discrete_method = 'quantile'\n    elif \"5\" in discrete_method:\n        discrete_method = 'step'\n\n    n_bins=None\n    if \"6\" not in discrete_method:\n        n_bins = int(params['discretenumberofbins'])\n    elif \"6\" in discrete_method:\n        n_bins = ast.literal_eval(params['discretenodeofbins'])\n        n_bins_dict = {}\n        for item in n_bins:\n            feature_list = []\n            if item['nums'].startswith('['):\n                re_list = re.findall(r'(\\[.*?\\])',item['nums'])\n                for temp_str in re_list:\n                    temp_str = temp_str[1:-1]\n                    temp_list = []\n                    for x in temp_str.split(','):\n                        x = str(x).strip()\n                        if 'nan' in x:\n                            temp_list.append(np.nan)\n                        else:\n                            temp_list.append(x)\n                    feature_list.append(temp_list)\n            else:\n                for x in item['nums'].split(\",\"):\n                    if 'nan' in x:\n                        feature_list.append(np.nan)\n                    else:\n                        feature_list.append(float(x))\n            n_bins_dict[item[\"feature\"]] = feature_list\n        n_bins = n_bins_dict\n    if len(params['discretenoteprecent']) == 0:\n        min_samples = 0.1\n    else:\n        min_samples = float(params['discretenoteprecent'])\n\n    temp_columns = columns_values.copy()\n    if label_column not in temp_columns:\n        temp_columns.append(label_column)\n    boxCut = BoxCut(data_in[temp_columns], label_column, n_bins, min_samples, discrete_method, discretenull)\n    df_all = None\n    if \"6\" in discrete_method:\n        # TODO 确定自定义分箱格式，修改n_bins参数\n        df_all = boxCut.make_final_table_self_defined(n_bins)\n    else:\n        df_all = boxCut.make_final_table()\n\n    redisConn = db_utils.getRedisMasterConnection(redisParam['connectInfo'], redisParam['masterName'],\n                                                  redisParam['password'], redisParam['db'])\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"report_json_\" + reportFileName, df_all.to_json(orient=\"table\"))\n\n    '''\n    管道处理\n    '''\n    characteristicsDiscrete = CharacteristicsDiscrete(params, columns_values, label_column,discretenull, discrete_method)\n    characteristicsDiscrete.fit()\n    # data_out = characteristicsDiscrete.transform(data_in)\n\n\n    '''\n    保存文件到redis\n    '''\n    pipeline_pkl_name = outputs['data_out'].split('_', 1)[0]\n    joblib.dump(characteristicsDiscrete, params['pipeline_file']+\"pkl_\" + pipeline_pkl_name, compress=3)\n    fileObject = pickle.dumps(joblib.load(params['pipeline_file']+\"pkl_\" + pipeline_pkl_name))\n    os.remove(params['pipeline_file']+\"pkl_\" + pipeline_pkl_name)\n    '''\n    保存pkl的二进制文件到redis中\n    '''\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"pkl_\" + pipeline_pkl_name, fileObject)\n    '''\n    保存模型pkl的参数到redis\n    '''\n    pkl_params = {}\n    for i, v in data_in.dtypes.items():\n        pkl_params[str(i)]=str(v)\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"params_\" + pipeline_pkl_name, str(pkl_params))\n    '''\n    构建pipeline\n    '''\n    pipe = Pipeline([\n        ('CharacteristicsDiscrete', characteristicsDiscrete)\n    ])\n    data_out = pipe.transform(data_in)\n    '''\n    构建输出结果的shape\n    '''\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"shape_\" + outputs['data_out'], str(data_out.shape[0]) + \",\" + str(data_out.shape[1]))\n\n    change_shape = {\n        'data_in': {\n            'startAt': 1,\n            'endAt': data_in_shape[1]\n        },\n        'data_out': {\n            'startAt': 1,\n            'endAt': data_out.shape[1]\n        },\n        \"change\": {\n            'startAt': data_in_shape[1] + 1,\n            'endAt': data_out.shape[1]\n        }\n    }\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"change_shape_\" + pipeline_pkl_name,json.dumps(change_shape))\n\n    '''\n    将结果写出\n    '''\n    db_utils.write_db_table(db_type=db_type, conn=conn, table_name=outputs['data_out'], data_frame=data_out,\n                            client=client, schema=inputs['schema'], hdfs_path=hdfsTmpPath)\n\n# </EXECTUSCRIPT>\n\n# db_type = 1\n# if db_type == 1:\n#     conn = db_utils.get_connection(db_type=db_type, host=\"192.168.198.108\", port=\"10000\", dbname=\"yq_yzx\", user=\"yangqing_yzx\", password=\"12qw#$ER\")\n#     client = db_utils.hdfs_client(hadoop_path=\"http://192.168.198.105:50070\")\n# else:\n#     client = None\n#     conn = db_utils.get_connection(db_type=db_type, host='192.168.198.172', port='15434', dbname='mlp', user='postgres', password='pgsql123456',schema='admin')\n# inputs1 = {'data_in':'\"admin\".\"10000690_0_1\"','schema':'admin'}\n# outputs1= {'data_out':'10000171_0_4'}\n# params1 = {'project_id':'project_5',\n#            'discretefeatureseries':'3','discretelabelcolumn':'5',\n#            'discretemethod':'6',\n#            'discretenumberofbins':'2',\n#            'discretenodeofbins':'[{\"feature\":\"flight_count\",\"nums\":\"10,100,1000\"},{\"feature\":\"last_to_end\",\"nums\":\"10,100,1000\"}]',\n#            'discretenull':2,\n#            'discretenoteprecent':'0.1','pipeline_file':'/tmp/pyserve/pipeline/',\"diyf\":'def test(x):\\n\\treturn x+6'\n#     ,\"redis\": \"{\\\"connectInfo\\\":[[\\\"192.168.198.220\\\",\\\"26380\\\"],[\\\"192.168.198.221\\\",\\\"26380\\\"],[\\\"192.168.198.222\\\",\\\"26380\\\"]],\\\"masterName\\\":\\\"mymaster\\\",\\\"password\\\":\\\"123456\\\",\\\"db\\\":0}\"}\n# execute(conn=conn,inputs=inputs1,outputs=outputs1,params=params1,reportFileName=\"comb.html\")"
                            },
                            "supportPmml": false,
                            "children": null,
                            "parameters": {
                                "discretefeatureseries": "",
                                "discretenull": "1",
                                "discretenumberofbins": "",
                                "discretemethod": "[\"1\"]",
                                "discretenoteprecent": "",
                                "discretenodeofbins": "[{\"feature\":\"1\",\"nums\":\"1,2,3\"}]",
                                "discretelabelcolumn": ""
                            }
                        },
                        {
                            "id": 10055,
                            "createTime": "2022-05-24T09:09:15.248+0000",
                            "creatorId": 100,
                            "creatorName": "admin",
                            "name": "WOE",
                            "targetAlgorithm": "com.yzx.mlp.scheduling.core.alog.unparallel.engine.pythonengine.PythonCommonAlgorithm",
                            "parentId": 10016,
                            "enabled": true,
                            "paralleled": false,
                            "component": true,
                            "allowViewSource": true,
                            "iconPath": "icontezhenggongcheng-01",
                            "minimumInput": 1,
                            "inBuilt": true,
                            "hasReport": false,
                            "description": "WOE",
                            "tabs": [
                                {
                                    "id": 7512,
                                    "createTime": "2022-05-24T09:09:15.249+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "tabName": "字段设置",
                                    "elements": [
                                        {
                                            "id": 20526,
                                            "createTime": "2022-05-24T09:09:15.249+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "woefeaturecolumn",
                                            "label": "特征列",
                                            "defaultValue": null,
                                            "value": null,
                                            "options": "",
                                            "rexp": "/\\S/",
                                            "placeholder": "请输入特征所在列序号或者名称",
                                            "toolTip": "表示需WOE的特征所在列，如“1-3,10,column1”,表示取特征在表中的1到3列，10列，column1，序号从1开始计数，不包含序号列。",
                                            "sequence": 0,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        },
                                        {
                                            "id": 20527,
                                            "createTime": "2022-05-24T09:09:15.249+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "woelabelcolumn",
                                            "label": "标签列",
                                            "defaultValue": null,
                                            "value": null,
                                            "options": "",
                                            "rexp": "/\\S/",
                                            "placeholder": "标签列所在的列号或名称，如：1",
                                            "toolTip": "标签列所在的列号或名称，如：1或者column1 序号从1开始计数，不包含序号列。",
                                            "sequence": 1,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        }
                                    ]
                                }
                            ],
                            "inputs": [
                                {
                                    "id": 10382,
                                    "createTime": "2022-05-24T09:09:15.249+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "key": "data_in",
                                    "type": "INPUT",
                                    "cat": "DATA",
                                    "canPreview": true,
                                    "preViewMode": "ONLY100",
                                    "description": "输入",
                                    "model": false
                                }
                            ],
                            "outputs": [
                                {
                                    "id": 10383,
                                    "createTime": "2022-05-24T09:09:15.249+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "key": "data_out",
                                    "type": "OUTPUT",
                                    "cat": "DATA",
                                    "canPreview": true,
                                    "preViewMode": "ONLY100",
                                    "description": "输出",
                                    "access": "SAME",
                                    "columns": "[]",
                                    "model": false
                                }
                            ],
                            "updateTime": "2022-05-24T09:09:15.248+0000",
                            "sequence": 1,
                            "extra": {
                                "type": "NORMAL",
                                "value": null,
                                "mainClass": null,
                                "engine": "PYTHON"
                            },
                            "script": {
                                "MAIN": "# <ALOGCLASSNAME>\n# WeightEvidence\n# </ALOGCLASSNAME>\n\n# <EXECTUSCRIPT>\ndef execute(conn, inputs, params, outputs, reportFileName):\n\n    '''\n    载入模块\n    '''\n    from sklearn.pipeline import Pipeline\n    import os\n    import pickle\n    import db_utils\n    import joblib\n    import sys\n    import json\n    import warnings\n    from common import get_db_column\n    from common import get_feature\n    from common import get_label\n    from common import get_db_column_with_type\n    from common import keep_dot_after\n    from SourceCodeImporter import SourceCodeImporter\n\n    warnings.filterwarnings(\"ignore\")\n    '''\n    载入redis连接信息\n    '''\n    redisParam = json.loads(params['redis'])\n    redisConn = db_utils.getRedisMasterConnection(redisParam['connectInfo'], redisParam['masterName'],\n                                                  redisParam['password'], redisParam['db'])\n    '''\n    远程模块载入\n    '''\n    name = \"WeightEvidence\"\n    code = db_utils.redisReadHsetFile(redisConn, \"alogclass\", \"WeightEvidence\")\n    sys.meta_path.append(SourceCodeImporter(code.decode(),name))\n    from WeightEvidence import WeightEvidence\n\n    '''\n    获取输入数据\n    '''\n    keep_dot_after(db_type, inputs)\n    data_in = db_utils.query(conn, 'select * from ' + inputs['data_in'], db_type)\n\n    data_in_shape = data_in.shape\n\n    '''\n    转换后的参数\n    '''\n    db_columns = get_db_column_with_type(db_type, inputs, conn)\n    columns_values = get_feature(db_columns,params['woefeaturecolumn'])\n    label_column = get_label(db_columns,params['woelabelcolumn'])\n\n    '''\n    管道处理\n    '''\n    weightEvidence = WeightEvidence(params, columns_values, label_column)\n    weightEvidence.fit()\n    # data_out = weightEvidence.transform(data_in)\n\n\n    '''\n    保存文件到redis\n    '''\n    pipeline_pkl_name = outputs['data_out'].split('_', 1)[0]\n    joblib.dump(weightEvidence, params['pipeline_file']+\"pkl_\" + pipeline_pkl_name, compress=3)\n    fileObject = pickle.dumps(joblib.load(params['pipeline_file']+\"pkl_\" + pipeline_pkl_name))\n    os.remove(params['pipeline_file']+\"pkl_\" + pipeline_pkl_name)\n    '''\n    保存pkl的二进制文件到redis中\n    '''\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"pkl_\" + pipeline_pkl_name, fileObject)\n    '''\n    保存模型pkl的参数到redis\n    '''\n    pkl_params = {}\n    for i, v in data_in.dtypes.items():\n        pkl_params[str(i)]=str(v)\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"params_\" + pipeline_pkl_name, str(pkl_params))\n    '''\n    构建pipeline\n    '''\n    pipe = Pipeline([\n        ('WeightEvidence', weightEvidence)\n    ])\n    data_out = pipe.transform(data_in)\n    '''\n    构建输出结果的shape\n    '''\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"shape_\" + outputs['data_out'], str(data_out.shape[0]) + \",\" + str(data_out.shape[1]))\n\n    change_shape = {\n        'data_in': {\n            'startAt': 1,\n            'endAt': data_in_shape[1]\n        },\n        'data_out': {\n            'startAt': 1,\n            'endAt': data_out.shape[1]\n        },\n        \"change\": {\n            'startAt': data_in_shape[1] + 1,\n            'endAt': data_out.shape[1]\n        }\n    }\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"change_shape_\" + pipeline_pkl_name,json.dumps(change_shape))\n\n    '''\n    将结果写出\n    '''\n    db_utils.write_db_table(db_type=db_type, conn=conn, table_name=outputs['data_out'], data_frame=data_out,\n                            client=client, schema=inputs['schema'], hdfs_path=hdfsTmpPath)\n\n# </EXECTUSCRIPT>\n\n# import db_utils\n# db_type = 1\n# if db_type == 1:\n#     conn = db_utils.get_connection(db_type=db_type, host=\"192.168.198.108\", port=\"10000\", dbname=\"yq_yzx\", user=\"yangqing_yzx\", password=\"12qw#$ER\")\n#     client = db_utils.hdfs_client(hadoop_path=\"http://192.168.198.105:50070\")\n# else:\n#     client = None\n#     conn = db_utils.get_connection(db_type=db_type, host='192.168.198.172', port='15434', dbname='mlp', user='postgres', password='pgsql123456',schema='admin')\n# inputs1 = {'data_in':'\"admin\".\"10000690_0_1\"','schema':'admin'}\n# outputs1= {'data_out':'10000171_0_4'}\n# params1 = {'project_id':'project_5','woefeaturecolumn':'3','woelabelcolumn':'5','discretemethod':'1','discretenumberofbins':'2','discretenull':2,'discretenoteprecent':'0.1','pipeline_file':'/tmp/pyserve/pipeline/',\"diyf\":'def test(x):\\n\\treturn x+6'\n#     ,\"redis\": \"{\\\"connectInfo\\\":[[\\\"192.168.198.220\\\",\\\"26380\\\"],[\\\"192.168.198.221\\\",\\\"26380\\\"],[\\\"192.168.198.222\\\",\\\"26380\\\"]],\\\"masterName\\\":\\\"mymaster\\\",\\\"password\\\":\\\"123456\\\",\\\"db\\\":0}\"}\n# execute(conn=conn,inputs=inputs1,outputs=outputs1,params=params1,reportFileName=\"comb.html\")"
                            },
                            "supportPmml": false,
                            "children": null,
                            "parameters": {
                                "woefeaturecolumn": "",
                                "woelabelcolumn": ""
                            }
                        },
                        {
                            "id": 10018,
                            "createTime": "2022-05-24T09:09:15.466+0000",
                            "creatorId": 100,
                            "creatorName": "admin",
                            "name": "特征缩放",
                            "targetAlgorithm": "com.yzx.mlp.scheduling.core.alog.unparallel.engine.pythonengine.PythonCommonAlgorithm",
                            "parentId": 10016,
                            "enabled": true,
                            "paralleled": false,
                            "component": true,
                            "allowViewSource": true,
                            "iconPath": "icontezhenggongcheng-01",
                            "minimumInput": 1,
                            "inBuilt": true,
                            "hasReport": false,
                            "description": "将不同特征的值量化到同一区间的方法，使不同量纲的特征处于同一数值量级，减少方差大的特征的影响，使模型更准确。 加快学习算法的收敛；\n",
                            "tabs": [
                                {
                                    "id": 7513,
                                    "createTime": "2022-05-24T09:09:15.467+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "tabName": "字段设置",
                                    "elements": [
                                        {
                                            "id": 20528,
                                            "createTime": "2022-05-24T09:09:15.467+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "zoomfeaturecolumn",
                                            "label": "缩放特征列",
                                            "defaultValue": null,
                                            "value": null,
                                            "options": "",
                                            "rexp": "/\\S/",
                                            "placeholder": "请输入特征所在列序号或者列名称",
                                            "toolTip": "表示需特征缩放处理的特征所在列序号或者列名称，如“1-3,10,column1”,表示取特征在表中的1到3列，10列,column1，列序号从1开始计数，不包含序号列。",
                                            "sequence": 0,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        },
                                        {
                                            "id": 20529,
                                            "createTime": "2022-05-24T09:09:15.467+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "zoomethod",
                                            "label": "特征缩放",
                                            "defaultValue": null,
                                            "value": "[[\"1\",\"1_1\"]]",
                                            "options": "[{\"value\": \"1\",\"label\": \"归一化\",\"children\": [{\"value\": \"1_1\",\"label\": \"min_max归一化\"},{\"value\": \"1_2\",\"label\": \"mean归一化\"}]},{\"value\": \"2\",\"label\": \"标准化\",\"children\": [{\"value\": \"2_1\",\"label\": \"z-score标准化\"},{\"value\": \"2_2\",\"label\": \"max标准化\"}]},{\"value\": \"3\",\"label\": \"boxcoxlp\"}]",
                                            "rexp": "",
                                            "placeholder": "请选择",
                                            "toolTip": "",
                                            "sequence": 1,
                                            "elementType": 28,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": false
                                        }
                                    ]
                                }
                            ],
                            "inputs": [
                                {
                                    "id": 10384,
                                    "createTime": "2022-05-24T09:09:15.467+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "key": "data_in",
                                    "type": "INPUT",
                                    "cat": "DATA",
                                    "canPreview": true,
                                    "preViewMode": "ONLY100",
                                    "description": "输入",
                                    "model": false
                                }
                            ],
                            "outputs": [
                                {
                                    "id": 10385,
                                    "createTime": "2022-05-24T09:09:15.467+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "key": "data_out",
                                    "type": "OUTPUT",
                                    "cat": "DATA",
                                    "canPreview": true,
                                    "preViewMode": "ONLY100",
                                    "description": "输出",
                                    "access": "SAME",
                                    "columns": "[]",
                                    "model": false
                                }
                            ],
                            "updateTime": "2022-05-24T09:09:15.466+0000",
                            "sequence": 2,
                            "extra": {
                                "type": "NORMAL",
                                "value": null,
                                "mainClass": null,
                                "engine": "PYTHON"
                            },
                            "script": {
                                "MAIN": "# <ALOGCLASSNAME>\n# FeatureZoom\n# </ALOGCLASSNAME>\n\n# <EXECTUSCRIPT>\ndef execute(conn, inputs, params, outputs, reportFileName):\n\n    '''\n    载入模块\n    '''\n    from sklearn.pipeline import Pipeline\n    import os\n    import pickle\n    import db_utils\n    import joblib\n    import sys\n    import json\n    import warnings\n    from common import get_db_column\n    from common import get_feature\n    from common import get_label\n    from SourceCodeImporter import SourceCodeImporter\n    from common import get_db_column_with_type\n    from common import keep_dot_after\n\n    warnings.filterwarnings(\"ignore\")\n    '''\n    载入redis连接信息\n    '''\n    redisParam = json.loads(params['redis'])\n    redisConn = db_utils.getRedisMasterConnection(redisParam['connectInfo'], redisParam['masterName'],\n                                                  redisParam['password'], redisParam['db'])\n    '''\n    远程模块载入\n    '''\n    name = \"FeatureZoom\"\n    code = db_utils.redisReadHsetFile(redisConn, \"alogclass\", \"FeatureZoom\")\n    sys.meta_path.append(SourceCodeImporter(code.decode(),name))\n    from FeatureZoom import FeatureZoom\n    # from pipeline.alogclass.FeatureZoom import FeatureZoom\n\n    '''\n    获取输入数据\n    '''\n    keep_dot_after(db_type, inputs)\n    data_in = db_utils.query(conn, 'select * from ' + inputs['data_in'], db_type)\n\n    data_in_shape = data_in.shape\n\n    '''\n    转换后的参数\n    '''\n    db_columns = get_db_column_with_type(db_type, inputs, conn)\n    columns_values = get_feature(db_columns, params['zoomfeaturecolumn'])\n    method_c = [j for j in eval(params['zoomethod'])]\n    if '1_1' in method_c:\n        method_c = 1\n    elif '1_2' in method_c:\n        method_c = 2\n    elif '2_1' in method_c:\n        method_c = 3\n    elif '2_2' in method_c:\n        method_c = 4\n    elif '3' in method_c:\n        method_c = 5\n\n    '''\n    管道处理\n    '''\n    featureZoom = FeatureZoom(params, columns_values, method_c)\n    featureZoom.fit()\n    # data_out = featureZoom.transform(data_in)\n\n\n    '''\n    保存文件到redis\n    '''\n    pipeline_pkl_name = outputs['data_out'].split('_', 1)[0]\n    joblib.dump(featureZoom, params['pipeline_file']+\"pkl_\" + pipeline_pkl_name, compress=3)\n    fileObject = pickle.dumps(joblib.load(params['pipeline_file']+\"pkl_\" + pipeline_pkl_name))\n    os.remove(params['pipeline_file']+\"pkl_\" + pipeline_pkl_name)\n    '''\n    保存pkl的二进制文件到redis中\n    '''\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"pkl_\" + pipeline_pkl_name, fileObject)\n    '''\n    保存模型pkl的参数到redis\n    '''\n    pkl_params = {}\n    for i, v in data_in.dtypes.items():\n        pkl_params[str(i)]=str(v)\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"params_\" + pipeline_pkl_name, str(pkl_params))\n    '''\n    构建pipeline\n    '''\n    pipe = Pipeline([\n        ('FeatureZoom', featureZoom)\n    ])\n    data_out = pipe.transform(data_in)\n    '''\n    构建输出结果的shape\n    '''\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"shape_\" + outputs['data_out'], str(data_out.shape[0]) + \",\" + str(data_out.shape[1]))\n\n    change_shape = {\n        'data_in': {\n            'startAt': 1,\n            'endAt': data_in_shape[1]\n        },\n        'data_out': {\n            'startAt': 1,\n            'endAt': data_out.shape[1]\n        },\n        \"change\": {\n            'startAt': data_in_shape[1] + 1,\n            'endAt': data_out.shape[1]\n        }\n    }\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"change_shape_\" + pipeline_pkl_name,json.dumps(change_shape))\n\n    '''\n    将结果写出\n    '''\n    db_utils.write_db_table(db_type=db_type, conn=conn, table_name=outputs['data_out'], data_frame=data_out,\n                            client=client, schema=inputs['schema'], hdfs_path=hdfsTmpPath)\n\n# </EXECTUSCRIPT>\n\n# import db_utils\n# db_type = 1\n# if db_type == 1:\n#     conn = db_utils.get_connection(db_type=db_type, host=\"192.168.198.108\", port=\"10000\", dbname=\"yq_yzx\", user=\"yangqing_yzx\", password=\"12qw#$ER\")\n#     client = db_utils.hdfs_client(hadoop_path=\"http://192.168.198.105:50070\")\n# else:\n#     client = None\n#     conn = db_utils.get_connection(db_type=db_type, host='192.168.198.172', port='15434', dbname='mlp', user='postgres', password='pgsql123456',schema='admin')\n# inputs1 = {'data_in':'\"admin\".\"10000690_0_1\"','schema':'admin'}\n# outputs1= {'data_out':'10000171_0_4'}\n# params1 = {'project_id':'project_5','zoomfeaturecolumn':'3-5','woelabelcolumn':'5','zoomethod':'[[1]]','discretenumberofbins':'2','discretenull':2,'discretenoteprecent':'0.1','pipeline_file':'/tmp/pyserve/pipeline/',\"diyf\":'def test(x):\\n\\treturn x+6'\n#     ,\"redis\": \"{\\\"connectInfo\\\":[[\\\"192.168.198.220\\\",\\\"26380\\\"],[\\\"192.168.198.221\\\",\\\"26380\\\"],[\\\"192.168.198.222\\\",\\\"26380\\\"]],\\\"masterName\\\":\\\"mymaster\\\",\\\"password\\\":\\\"123456\\\",\\\"db\\\":0}\"}\n# execute(conn=conn,inputs=inputs1,outputs=outputs1,params=params1,reportFileName=\"comb.html\")"
                            },
                            "supportPmml": false,
                            "children": null,
                            "parameters": {
                                "zoomethod": "[[\"1\",\"1_1\"]]",
                                "zoomfeaturecolumn": ""
                            }
                        },
                        {
                            "id": 10020,
                            "createTime": "2022-05-24T09:09:15.988+0000",
                            "creatorId": 100,
                            "creatorName": "admin",
                            "name": "独热编码（one-hot）",
                            "targetAlgorithm": "com.yzx.mlp.scheduling.core.alog.unparallel.engine.pythonengine.PythonCommonAlgorithm",
                            "parentId": 10016,
                            "enabled": true,
                            "paralleled": false,
                            "component": true,
                            "allowViewSource": true,
                            "iconPath": "icontezhenggongcheng-01",
                            "minimumInput": 1,
                            "inBuilt": true,
                            "hasReport": false,
                            "description": "1）将离散型特征的每一种取值都看成一种状态，若您的这一特征中有 N 个不相同的取值，那么我们就可以将该特征抽象成 N 种不同的状态，独热编码保证了每一个取值只会使得一种状态处于“激活态”，也就是说这 N 种状态中只有一个状态位值为1，其他状态位都是0。\n2）经过二值化的特征会加到数据的最后几列。\n   新增列：在表最后新增列\n   名称：原名称_ot_枚举名1、原名称_ot_枚举名2…\n   原始列保留",
                            "tabs": [
                                {
                                    "id": 7514,
                                    "createTime": "2022-05-24T09:09:15.990+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "tabName": "字段设置",
                                    "elements": [
                                        {
                                            "id": 20530,
                                            "createTime": "2022-05-24T09:09:15.990+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "inputbinarizedfeaturecolumn",
                                            "label": "输入二值化特征列",
                                            "defaultValue": null,
                                            "value": null,
                                            "options": "",
                                            "rexp": "/\\S/",
                                            "placeholder": "请输入特征所在列序号或者列名称",
                                            "toolTip": "特征：表示需二值化处理的特征所在列，如“1-3,10,column1”,表示取特征在表中的1到3列，10列 和字段名称为column1的列，列序号从1开始计数，不包含序号列。\n",
                                            "sequence": 0,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        }
                                    ]
                                }
                            ],
                            "inputs": [
                                {
                                    "id": 10386,
                                    "createTime": "2022-05-24T09:09:15.990+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "key": "data_in",
                                    "type": "INPUT",
                                    "cat": "DATA",
                                    "canPreview": true,
                                    "preViewMode": "ONLY100",
                                    "description": "输入",
                                    "model": false
                                }
                            ],
                            "outputs": [
                                {
                                    "id": 10387,
                                    "createTime": "2022-05-24T09:09:15.990+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "key": "data_out",
                                    "type": "OUTPUT",
                                    "cat": "DATA",
                                    "canPreview": true,
                                    "preViewMode": "ONLY100",
                                    "description": "输出",
                                    "access": "SAME",
                                    "columns": "[]",
                                    "model": false
                                }
                            ],
                            "updateTime": "2022-05-24T09:09:15.988+0000",
                            "sequence": 3,
                            "extra": {
                                "type": "NORMAL",
                                "value": null,
                                "mainClass": null,
                                "engine": "PYTHON"
                            },
                            "script": {
                                "MAIN": "# <ALOGCLASSNAME>\n# HotCodingAlone\n# </ALOGCLASSNAME>\n\n# <EXECTUSCRIPT>\ndef execute(conn, inputs, params, outputs, reportFileName):\n\n    '''\n    载入模块\n    '''\n    from sklearn.pipeline import Pipeline\n    import os\n    import pickle\n    import db_utils\n    import joblib\n    import sys\n    import json\n    import warnings\n    from common import get_db_column\n    from common import get_feature\n    from SourceCodeImporter import SourceCodeImporter\n    from common import get_db_column_with_type\n    from common import keep_dot_after\n    warnings.filterwarnings(\"ignore\")\n    '''\n    载入redis连接信息\n    '''\n    redisParam = json.loads(params['redis'])\n    redisConn = db_utils.getRedisMasterConnection(redisParam['connectInfo'], redisParam['masterName'],\n                                                  redisParam['password'], redisParam['db'])\n    '''\n    远程模块载入\n    '''\n    name = \"HotCodingAlone\"\n    code = db_utils.redisReadHsetFile(redisConn, \"alogclass\", name)\n    sys.meta_path.append(SourceCodeImporter(code.decode(),name))\n    from HotCodingAlone import HotCodingAlone\n    '''\n    获取输入数据\n    '''\n    keep_dot_after(db_type, inputs)\n    data_in = db_utils.query(conn, 'select * from ' + inputs['data_in'], db_type)\n\n    data_in_shape = data_in.shape\n    '''\n    转换后的参数\n    '''\n    db_columns = get_db_column_with_type(db_type, inputs, conn)\n    columns_values = get_feature(db_columns, params['inputbinarizedfeaturecolumn'])\n    '''\n    管道处理\n    '''\n    hotCodingAlone = HotCodingAlone(params,columns_values)\n    hotCodingAlone.fit()\n    '''\n    保存文件到redis\n    '''\n    pipeline_pkl_name = outputs['data_out'].split('_', 1)[0]\n    joblib.dump(hotCodingAlone, params['pipeline_file']+\"pkl_\" + pipeline_pkl_name, compress=3)\n    fileObject = pickle.dumps(joblib.load(params['pipeline_file']+\"pkl_\" + pipeline_pkl_name))\n    os.remove(params['pipeline_file']+\"pkl_\" + pipeline_pkl_name)\n    '''\n    保存pkl的二进制文件到redis中\n    '''\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"pkl_\" + pipeline_pkl_name, fileObject)\n\n    '''\n    保存模型pkl的参数到redis\n    '''\n    pkl_params = {}\n    for i, v in data_in.dtypes.items():\n        pkl_params[str(i)]=str(v)\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"params_\" + pipeline_pkl_name, str(pkl_params))\n    '''\n    构建pipeline\n    '''\n    pipe = Pipeline([\n        ('HotCodingAlone', hotCodingAlone)\n    ])\n    data_out = pipe.transform(data_in)\n    '''\n    构建输出结果的shape\n    '''\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"shape_\" + outputs['data_out'], str(data_out.shape[0]) + \",\" + str(data_out.shape[1]))\n\n    change_shape = {\n        'data_in': {\n            'startAt': 1,\n            'endAt': data_in_shape[1]\n        },\n        'data_out': {\n            'startAt': 1,\n            'endAt': data_out.shape[1]\n        },\n        \"change\": {\n            'startAt': data_in_shape[1] + 1,\n            'endAt': data_out.shape[1]\n        }\n    }\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"change_shape_\" + pipeline_pkl_name,json.dumps(change_shape))\n\n    '''\n    将结果写出\n    '''\n    db_utils.write_db_table(db_type=db_type, conn=conn, table_name=outputs['data_out'], data_frame=data_out,\n                            client=client, schema=inputs['schema'], hdfs_path=hdfsTmpPath)\n\n # </EXECTUSCRIPT>\n\n# import db_utils\n# db_type = 1\n# if db_type == 1:\n#     conn = db_utils.get_connection(db_type=db_type, host=\"192.168.198.108\", port=\"10000\", dbname=\"yq_yzx\", user=\"yangqing_yzx\", password=\"12qw#$ER\")\n#     client = db_utils.hdfs_client(hadoop_path=\"http://192.168.198.105:50070\")\n# else:\n#     client = None\n#     conn = db_utils.get_connection(db_type=db_type, host='192.168.198.172', port='15434', dbname='mlp', user='postgres', password='pgsql123456',schema='admin')\n# inputs1 = {'data_in':'\"shilmtest\".\"10000331_0_1\"','schema':'shilmtest'}\n# outputs1= {'data_out':'10000426_0_2'}\n# params1 = {'project_id':'project_8','inputbinarizedfeaturecolumn':'2,4,5,6','pipeline_file':'/tmp/pyserve/pipeline/'\n#            ,\"redis\": \"{\\\"connectInfo\\\":[[\\\"192.168.198.220\\\",\\\"26380\\\"],[\\\"192.168.198.221\\\",\\\"26380\\\"],[\\\"192.168.198.222\\\",\\\"26380\\\"]],\\\"masterName\\\":\\\"mymaster\\\",\\\"password\\\":\\\"123456\\\",\\\"db\\\":0}\"}\n# execute(conn=conn,inputs=inputs1,outputs=outputs1,params=params1,reportFileName=None)"
                            },
                            "supportPmml": false,
                            "children": null,
                            "parameters": {
                                "inputbinarizedfeaturecolumn": ""
                            }
                        },
                        {
                            "id": 10021,
                            "createTime": "2022-05-24T09:09:16.458+0000",
                            "creatorId": 100,
                            "creatorName": "admin",
                            "name": "特征衍生",
                            "targetAlgorithm": "com.yzx.mlp.scheduling.core.alog.unparallel.engine.pythonengine.PythonCommonAlgorithm",
                            "parentId": 10016,
                            "enabled": true,
                            "paralleled": false,
                            "component": true,
                            "allowViewSource": true,
                            "iconPath": "icontezhenggongcheng-01",
                            "minimumInput": 1,
                            "inBuilt": true,
                            "hasReport": false,
                            "description": "特征衍生：是指从原始数据中构建新的特征，将一列或多列通过基本运算生成新列；\n支持基于现成算子直接进行自动运算、也可自定义表达式，手动设置运算公式。\n算子使用说明：\n  1）使用于单变量：\n“ 绝对值、平方、立方、对数、指数、倒数、开根号 ”；\n  2）使用于多变量：目前仅支持两两组合\n“ +、-、*、/、交集、并集 ”；\n  3）若既选择单变量算子、又选择多变量算子，两两组合按照原值计算，不对单变量变化后的值进行二次运算。\n新增列：在表最后新增列，原列保留\n  1）算子衍生-新特征名：\n       单变量：原变量1_dc01、原变量2_dc01…（若相同原变量被变换多次，后缀数字依次增加）\n       多变量：原变量1首尾字母_原变量2首尾字母_dc01、原变量1首尾字母_原变量3首尾字母_dc01…（如：time、member_no，生成新列名为 te_mo_dc01）\n  2）自定义表达式-新特征名：根据设置展示",
                            "tabs": [
                                {
                                    "id": 7515,
                                    "createTime": "2022-05-24T09:09:16.459+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "tabName": "算子衍生",
                                    "elements": [
                                        {
                                            "id": 20531,
                                            "createTime": "2022-05-24T09:09:16.460+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "derivecolumn",
                                            "label": "字段选择",
                                            "defaultValue": null,
                                            "value": null,
                                            "options": "",
                                            "rexp": "",
                                            "placeholder": "请输入搜索条件",
                                            "toolTip": "选择需进行衍生的特征，新增特征序列会在原字段基础上添加。",
                                            "sequence": 0,
                                            "elementType": 5,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": false
                                        },
                                        {
                                            "id": 20532,
                                            "createTime": "2022-05-24T09:09:16.460+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "derivearithmetic",
                                            "label": "使用算子",
                                            "defaultValue": null,
                                            "value": "[[\"1\",\"1_1\"],[\"1\",\"1_3\"],[\"2\",\"2_2\"]]",
                                            "options": "[{\"value\":\"1\",\"label\":\"单变量\",\"children\":[{\"value\":\"1_1\",\"label\":\"平方\"},{\"value\":\"1_2\",\"label\":\"立方\"},{\"value\":\"1_3\",\"label\":\"对数\"},{\"value\":\"1_4\",\"label\":\"绝对值\"},{\"value\":\"1_5\",\"label\":\"指数\"},{\"value\":\"1_6\",\"label\":\"倒数\"},{\"value\":\"1_7\",\"label\":\"开根号\"}]},{\"value\":\"2\",\"label\":\"多变量\",\"children\":[{\"value\":\"2_1\",\"label\":\"+\"},{\"value\":\"2_2\",\"label\":\"*\"},{\"value\":\"2_3\",\"label\":\"-\"},{\"value\":\"2_4\",\"label\":\"/\"},{\"value\":\"2_5\",\"label\":\"交集\"},{\"value\":\"2_5\",\"label\":\"并集\"}]}]",
                                            "rexp": "",
                                            "placeholder": "请选择",
                                            "toolTip": "算子：选择衍生过程中使用的算子，根据所选字段进行变量衍生运算。\n分为单变量使用、多变量使用，详细说明可见上方“描述说明”；\n对数算子说明：x=log(a)(N)，其中N（真数）设定为10",
                                            "sequence": 1,
                                            "elementType": 26,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": false
                                        }
                                    ]
                                },
                                {
                                    "id": 7516,
                                    "createTime": "2022-05-24T09:09:16.460+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "tabName": "自定义衍生",
                                    "elements": [
                                        {
                                            "id": 20533,
                                            "createTime": "2022-05-24T09:09:16.460+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "uderivearithmetic",
                                            "label": "新特征名",
                                            "defaultValue": null,
                                            "value": null,
                                            "options": "",
                                            "rexp": "/^[0-9a-zA-Z_]{1,10}$/",
                                            "placeholder": "1-10个字，支持英文、数字、下划线",
                                            "toolTip": "",
                                            "sequence": 1,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": false
                                        },
                                        {
                                            "id": 20534,
                                            "createTime": "2022-05-24T09:09:16.460+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "uderivecolumn",
                                            "label": "字段选择",
                                            "defaultValue": null,
                                            "value": null,
                                            "options": "",
                                            "rexp": "",
                                            "placeholder": "请输入搜索条件",
                                            "toolTip": "选择需进行衍生的特征，新增特征序列会在原字段基础上添加。",
                                            "sequence": 1,
                                            "elementType": 5,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": false
                                        },
                                        {
                                            "id": 20535,
                                            "createTime": "2022-05-24T09:09:16.460+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "uderivecalu",
                                            "label": "表达式",
                                            "defaultValue": null,
                                            "value": null,
                                            "options": "",
                                            "rexp": "/^[0-9a-zA-Z_.\\u4e00-\\u9fa5\\+\\-\\*\\/\\[\\]\\(\\)]+$/",
                                            "placeholder": "请从上方选择/输入字段名，设置表达式",
                                            "toolTip": "新增特征的表达式。\n仅支持运算符：+、-、*、/",
                                            "sequence": 2,
                                            "elementType": 4,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": false
                                        }
                                    ]
                                }
                            ],
                            "inputs": [
                                {
                                    "id": 10388,
                                    "createTime": "2022-05-24T09:09:16.459+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "key": "data_in",
                                    "type": "INPUT",
                                    "cat": "DATA",
                                    "canPreview": true,
                                    "preViewMode": "ONLY100",
                                    "description": "输入",
                                    "model": false
                                }
                            ],
                            "outputs": [
                                {
                                    "id": 10389,
                                    "createTime": "2022-05-24T09:09:16.459+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "key": "data_out",
                                    "type": "OUTPUT",
                                    "cat": "DATA",
                                    "canPreview": true,
                                    "preViewMode": "ONLY100",
                                    "description": "输出",
                                    "access": "SAME",
                                    "columns": "[]",
                                    "model": false
                                }
                            ],
                            "updateTime": "2022-05-24T09:09:16.458+0000",
                            "sequence": 4,
                            "extra": {
                                "type": "NORMAL",
                                "value": null,
                                "mainClass": null,
                                "engine": "PYTHON"
                            },
                            "script": {
                                "MAIN": "# <ALOGCLASSNAME>\n# CharacteristicsDerivative\n# </ALOGCLASSNAME>\n\n# <EXECTUSCRIPT>\ndef execute(conn, inputs, params, outputs, reportFileName):\n    '''\n    载入模块\n    '''\n    from sklearn.pipeline import Pipeline\n    import os\n    import pickle\n    import db_utils\n    import joblib\n    import sys\n    import json\n    import warnings\n    from SourceCodeImporter import SourceCodeImporter\n    from common import get_db_column_with_type\n    from common import keep_dot_after\n    warnings.filterwarnings(\"ignore\")\n    '''\n    载入redis连接信息\n    '''\n    redisParam = json.loads(params['redis'])\n    redisConn = db_utils.getRedisMasterConnection(redisParam['connectInfo'], redisParam['masterName'],\n                                                  redisParam['password'], redisParam['db'])\n    '''\n    远程模块载入\n    '''\n    name = \"CharacteristicsDerivative\"\n    code = db_utils.redisReadHsetFile(redisConn, \"alogclass\", name)\n    sys.meta_path.append(SourceCodeImporter(code.decode(),name))\n    from CharacteristicsDerivative import CharacteristicsDerivative\n    '''\n    获取输入数据\n    '''\n    keep_dot_after(db_type, inputs)\n    data_in = db_utils.query(conn, 'select * from ' + inputs['data_in'], db_type)\n\n    data_in_shape = data_in.shape\n    '''\n    转换后的参数\n    '''\n    columns_values = str(params['derivecolumn']).split(\",\")\n    '''\n    管道处理\n    '''\n    characteristicsDerivative = CharacteristicsDerivative(params,columns_values)\n    characteristicsDerivative.fit()\n    # data_out = characteristicsDerivative.transform(data_in)\n    '''\n    保存文件到redis\n    '''\n    pipeline_pkl_name = outputs['data_out'].split('_', 1)[0]\n    joblib.dump(characteristicsDerivative, params['pipeline_file']+\"pkl_\" + pipeline_pkl_name, compress=3)\n    fileObject = pickle.dumps(joblib.load(params['pipeline_file']+\"pkl_\" + pipeline_pkl_name))\n    os.remove(params['pipeline_file']+\"pkl_\" + pipeline_pkl_name)\n    '''\n    保存pkl的二进制文件到redis中\n    '''\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"pkl_\" + pipeline_pkl_name, fileObject)\n    '''\n    保存模型pkl的参数到redis\n    '''\n    pkl_params = {}\n    for i, v in data_in.dtypes.items():\n        pkl_params[str(i)]=str(v)\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"params_\" + pipeline_pkl_name, str(pkl_params))\n    '''\n    构建pipeline\n    '''\n    pipe = Pipeline([\n        ('CharacteristicsDerivative', characteristicsDerivative)\n    ])\n    data_out = pipe.transform(data_in)\n    '''\n    构建输出结果的shape\n    '''\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"shape_\" + outputs['data_out'], str(data_out.shape[0]) + \",\" + str(data_out.shape[1]))\n\n    change_shape = {\n        'data_in': {\n            'startAt': 1,\n            'endAt': data_in_shape[1]\n        },\n        'data_out': {\n            'startAt': 1,\n            'endAt': data_out.shape[1]\n        },\n        \"change\": {\n            'startAt': data_in_shape[1] + 1,\n            'endAt': data_out.shape[1]\n        }\n    }\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"change_shape_\" + pipeline_pkl_name,json.dumps(change_shape))\n\n    '''\n    将结果写出\n    '''\n    db_utils.write_db_table(db_type=db_type, conn=conn, table_name=outputs['data_out'], data_frame=data_out,\n                            client=client, schema=inputs['schema'], hdfs_path=hdfsTmpPath)\n\n# </EXECTUSCRIPT>\n\n# import db_utils\n# db_type = 1\n# if db_type == 1:\n#     conn = db_utils.get_connection(db_type=db_type, host=\"192.168.198.108\", port=\"10000\", dbname=\"yq_yzx\", user=\"yangqing_yzx\", password=\"12qw#$ER\")\n#     client = db_utils.hdfs_client(hadoop_path=\"http://192.168.198.105:50070\")\n# else:\n#     client = None\n#     conn = db_utils.get_connection(db_type=db_type, host='192.168.198.172', port='15434', dbname='mlp', user='postgres', password='pgsql123456',schema='admin')\n# inputs1 = {'data_in': '\"admin\".\"10000002_0_1\"', 'schema': 'admin'}\n# outputs1 = {'data_out': '10000171_0_4'}\n# params1 = {'project_id':'project_9','derivecolumn': 'flight_count,sum_yr_1', 'derivearithmetic': '[[1_1,1_2,1_3,1_4,1_5,1_6,1_7,2_1,2_2,2_3,2_4]]',\n#           'uderivearithmetic': 'new_col', 'uderivecalu': 'flight_count*2+flight_count/2','pipeline_file':'/tmp/pyserve/pipeline/'\n#            ,\"redis\": \"{\\\"connectInfo\\\":[[\\\"192.168.198.220\\\",\\\"26380\\\"],[\\\"192.168.198.221\\\",\\\"26380\\\"],[\\\"192.168.198.222\\\",\\\"26380\\\"]],\\\"masterName\\\":\\\"mymaster\\\",\\\"password\\\":\\\"123456\\\",\\\"db\\\":0}\"}\n# execute(conn=conn, inputs=inputs1, outputs=outputs1, params=params1, reportFileName=None)\n#\n# recursiveDescent = RecursiveDescent(\"abc*7+7*8\", {\"abc\":4})\n# recursiveDescent.exp()"
                            },
                            "supportPmml": false,
                            "children": null,
                            "parameters": {
                                "uderivecalu": "",
                                "uderivecolumn": "",
                                "uderivearithmetic": "",
                                "derivearithmetic": "[[\"1\",\"1_1\"],[\"1\",\"1_3\"],[\"2\",\"2_2\"]]",
                                "derivecolumn": ""
                            }
                        },
                        {
                            "id": 10058,
                            "createTime": "2022-05-24T09:09:17.041+0000",
                            "creatorId": 100,
                            "creatorName": "admin",
                            "name": "自定义组件",
                            "targetAlgorithm": "com.yzx.mlp.scheduling.core.alog.unparallel.engine.pythonengine.PythonCommonAlgorithm",
                            "parentId": 10016,
                            "enabled": true,
                            "paralleled": false,
                            "component": true,
                            "allowViewSource": true,
                            "iconPath": "icontezhenggongcheng-01",
                            "minimumInput": 1,
                            "inBuilt": true,
                            "hasReport": false,
                            "description": "1、通过自定义组件实现对向量的自定义函数处理；\n\n2、支持以python为脚本的”加、减、乘、除、开根号、平方等运算”；\n\n3、函数需符合：def feature_handle_diy(col_in):#TODO return col_in。\n\n     例：\n     def feature_handle_diy(col_in):\n         col_in = col_in*100\n         return col_in",
                            "tabs": [
                                {
                                    "id": 7517,
                                    "createTime": "2022-05-24T09:09:17.042+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "tabName": "特征名称",
                                    "elements": [
                                        {
                                            "id": 20536,
                                            "createTime": "2022-05-24T09:09:17.042+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "diyfeaturecolumn",
                                            "label": "特征名称",
                                            "defaultValue": null,
                                            "value": null,
                                            "options": "",
                                            "rexp": "/\\S/",
                                            "placeholder": "请输入特征所在列序号或者名称",
                                            "toolTip": "表示特征所在列，如“1-3,10,column1”,表示取特征在表中的1到3列，10列，column1，序号从1开始计数，不包含序号列。",
                                            "sequence": 0,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        },
                                        {
                                            "id": 20537,
                                            "createTime": "2022-05-24T09:09:17.042+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "diyfunctioncontent",
                                            "label": "处理函数",
                                            "defaultValue": null,
                                            "value": "def feature_handle_diy(col_in):\n\t# TODO\n\treturn col_in",
                                            "options": "",
                                            "rexp": "/\\S/",
                                            "placeholder": "def feature_handle_diy(col_in):\n\t# TODO\n\treturn col_in",
                                            "toolTip": "针对特征自行设置处理函数进行数据处理。函数需以符合：def feature_handle_diy(col_in):\n\t# TODO\n\treturn col_in",
                                            "sequence": 1,
                                            "elementType": 10,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": false
                                        }
                                    ]
                                }
                            ],
                            "inputs": [
                                {
                                    "id": 10390,
                                    "createTime": "2022-05-24T09:09:17.042+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "key": "data_in",
                                    "type": "INPUT",
                                    "cat": "DATA",
                                    "canPreview": true,
                                    "preViewMode": "ONLY100",
                                    "description": "输入",
                                    "model": false
                                }
                            ],
                            "outputs": [
                                {
                                    "id": 10391,
                                    "createTime": "2022-05-24T09:09:17.042+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "key": "data_out",
                                    "type": "OUTPUT",
                                    "cat": "DATA",
                                    "canPreview": true,
                                    "preViewMode": "ONLY100",
                                    "description": "输出",
                                    "access": "SAME",
                                    "columns": "[]",
                                    "model": false
                                }
                            ],
                            "updateTime": "2022-05-24T09:09:17.041+0000",
                            "sequence": 5,
                            "extra": {
                                "type": "NORMAL",
                                "value": null,
                                "mainClass": null,
                                "engine": "PYTHON"
                            },
                            "script": {
                                "MAIN": "# <ALOGCLASSNAME>\n# DIYComponent\n# </ALOGCLASSNAME>\n\n# <EXECTUSCRIPT>\ndef execute(conn, inputs, params, outputs, reportFileName):\n\n    '''\n    载入模块\n    '''\n    from sklearn.pipeline import Pipeline\n    import os\n    import pickle\n    import db_utils\n    import joblib\n    import sys\n    import json\n    import warnings\n    from common import get_db_column\n    from common import get_feature\n    from common import get_label\n    from SourceCodeImporter import SourceCodeImporter\n    from common import get_db_column_with_type\n    from common import keep_dot_after\n\n    warnings.filterwarnings(\"ignore\")\n    '''\n    载入redis连接信息\n    '''\n    redisParam = json.loads(params['redis'])\n    redisConn = db_utils.getRedisMasterConnection(redisParam['connectInfo'], redisParam['masterName'],\n                                                  redisParam['password'], redisParam['db'])\n    '''\n    远程模块载入\n    '''\n    name = \"DIYComponent\"\n    code = db_utils.redisReadHsetFile(redisConn, \"alogclass\", \"DIYComponent\")\n    function_content = params[\"diyfunctioncontent\"]\n    s = SourceCodeImporter(code.decode(), name)\n    s.add(\"DIYFunction\", function_content)\n    sys.meta_path.append(s)\n    from DIYFunction import feature_handle_diy\n    from DIYComponent import DIYComponent\n    # from pipeline.alogclass.DIYComponent import DIYComponent\n\n    '''\n    获取输入数据\n    '''\n    keep_dot_after(db_type, inputs)\n    data_in = db_utils.query(conn, 'select * from ' + inputs['data_in'], db_type)\n\n    data_in_shape = data_in.shape\n\n    '''\n    转换后的参数\n    '''\n    db_columns = get_db_column_with_type(db_type, inputs, conn)\n    columns_values = get_feature(db_columns, params['diyfeaturecolumn'])\n\n    '''\n    管道处理\n    '''\n    diyComponent = DIYComponent(params, columns_values,feature_handle_diy)\n    diyComponent.fit()\n    # data_out = treeModelScore.transform(data_in)\n\n    '''\n    保存文件到redis\n    '''\n    pipeline_pkl_name = outputs['data_out'].split('_', 1)[0]\n    joblib.dump(diyComponent, params['pipeline_file']+\"pkl_\" + pipeline_pkl_name, compress=3)\n    fileObject = pickle.dumps(joblib.load(params['pipeline_file']+\"pkl_\" + pipeline_pkl_name))\n    os.remove(params['pipeline_file']+\"pkl_\" + pipeline_pkl_name)\n    '''\n    保存pkl的二进制文件到redis中\n    '''\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"pkl_\" + pipeline_pkl_name, fileObject)\n    '''\n    保存模型pkl的参数到redis\n    '''\n    pkl_params = {}\n    for i, v in data_in.dtypes.items():\n        pkl_params[str(i)]=str(v)\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"params_\" + pipeline_pkl_name, str(pkl_params))\n    '''\n    构建pipeline\n    '''\n    pipe = Pipeline([\n        ('DIYComponent', diyComponent)\n    ])\n    data_out = pipe.transform(data_in)\n    '''\n    构建输出结果的shape\n    '''\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"shape_\" + outputs['data_out'], str(data_out.shape[0]) + \",\" + str(data_out.shape[1]))\n\n    change_shape = {\n        'data_in': {\n            'startAt': 1,\n            'endAt': data_in_shape[1]\n        },\n        'data_out': {\n            'startAt': 1,\n            'endAt': data_out.shape[1]\n        },\n        \"change\": {\n            'startAt': data_in_shape[1] + 1,\n            'endAt': data_out.shape[1]\n        }\n    }\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"change_shape_\" + pipeline_pkl_name,json.dumps(change_shape))\n\n    '''\n    将结果写出\n    '''\n    db_utils.write_db_table(db_type=db_type, conn=conn, table_name=outputs['data_out'], data_frame=data_out,\n                            client=client, schema=inputs['schema'], hdfs_path=hdfsTmpPath)\n\n# </EXECTUSCRIPT>\n\n# import db_utils\n# db_type = 1\n# if db_type == 1:\n#     conn = db_utils.get_connection(db_type=db_type, host=\"192.168.198.108\", port=\"10000\", dbname=\"yq_yzx\", user=\"yangqing_yzx\", password=\"12qw#$ER\")\n#     client = db_utils.hdfs_client(hadoop_path=\"http://192.168.198.105:50070\")\n# else:\n#     client = None\n#     conn = db_utils.get_connection(db_type=db_type, host='192.168.198.172', port='15434', dbname='mlp', user='postgres', password='pgsql123456',schema='admin')\n# inputs1 = {'data_in':'\"admin\".\"10000690_0_1\"','schema':'admin'}\n# outputs1= {'data_out':'10000171_0_4'}\n# params1 = {'project_id': 'project_5',\n#            'diyfeaturecolumn': '5',\n#            'pipeline_file': '/tmp/pyserve/pipeline/',\n#            \"diyfunctioncontent\": 'def feature_handle_diy(data_in):\\n\\tdata_in+=10\\n\\treturn data_in',\n#            \"redis\": \"{\\\"connectInfo\\\":[[\\\"192.168.198.220\\\",\\\"26380\\\"],[\\\"192.168.198.221\\\",\\\"26380\\\"],[\\\"192.168.198.222\\\",\\\"26380\\\"]],\\\"masterName\\\":\\\"mymaster\\\",\\\"password\\\":\\\"123456\\\",\\\"db\\\":0}\"\n#            }\n# execute(conn=conn,inputs=inputs1,outputs=outputs1,params=params1,reportFileName=\"comb.html\")"
                            },
                            "supportPmml": false,
                            "children": null,
                            "parameters": {
                                "diyfeaturecolumn": "",
                                "diyfunctioncontent": "def feature_handle_diy(col_in):\n\t# TODO\n\treturn col_in"
                            }
                        }
                    ],
                    "parameters": {}
                },
                {
                    "id": 10022,
                    "createTime": "2022-05-24T09:09:17.545+0000",
                    "creatorId": 100,
                    "creatorName": "admin",
                    "name": "特征重要性评估",
                    "targetAlgorithm": null,
                    "parentId": 10015,
                    "enabled": true,
                    "paralleled": false,
                    "component": false,
                    "allowViewSource": true,
                    "iconPath": "icontezhenggongcheng-01",
                    "minimumInput": 0,
                    "inBuilt": true,
                    "hasReport": false,
                    "description": null,
                    "tabs": [],
                    "inputs": [],
                    "outputs": [],
                    "updateTime": "2022-05-24T09:09:17.545+0000",
                    "sequence": 1,
                    "extra": {
                        "type": "NORMAL",
                        "value": null,
                        "mainClass": null,
                        "engine": "PYTHON"
                    },
                    "script": {},
                    "supportPmml": false,
                    "children": [
                        {
                            "id": 10023,
                            "createTime": "2022-05-24T09:09:17.579+0000",
                            "creatorId": 100,
                            "creatorName": "admin",
                            "name": "IV",
                            "targetAlgorithm": "com.yzx.mlp.scheduling.core.alog.unparallel.engine.pythonengine.PythonCommonAlgorithm",
                            "parentId": 10022,
                            "enabled": true,
                            "paralleled": false,
                            "component": true,
                            "allowViewSource": true,
                            "iconPath": "icontezhenggongcheng-01",
                            "minimumInput": 1,
                            "inBuilt": true,
                            "hasReport": true,
                            "description": "",
                            "tabs": [
                                {
                                    "id": 7518,
                                    "createTime": "2022-05-24T09:09:17.580+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "tabName": "字段设置",
                                    "elements": [
                                        {
                                            "id": 20538,
                                            "createTime": "2022-05-24T09:09:17.580+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "ivinputfeaturecolumn",
                                            "label": "输入特征列",
                                            "defaultValue": null,
                                            "value": null,
                                            "options": "",
                                            "rexp": "/\\S/",
                                            "placeholder": "请输入特征所在列序号或者列名称",
                                            "toolTip": "表示需处理的特征所在列，如“1-3,10,column1”,表示取特征在表中的1到3列，10列 和字段名称为column1的列，列序号从1开始计数，不包含序号列。",
                                            "sequence": 0,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        },
                                        {
                                            "id": 20539,
                                            "createTime": "2022-05-24T09:09:17.580+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "ivlabelcolumn",
                                            "label": "标签列",
                                            "defaultValue": null,
                                            "value": null,
                                            "options": "",
                                            "rexp": "/\\S/",
                                            "placeholder": "请输入特征所在列序号或者列名称",
                                            "toolTip": "标签列所在列序号或者列名称，序号从1开始计数，不包含序号列。",
                                            "sequence": 1,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        }
                                    ]
                                }
                            ],
                            "inputs": [
                                {
                                    "id": 10392,
                                    "createTime": "2022-05-24T09:09:17.580+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "key": "data_in",
                                    "type": "INPUT",
                                    "cat": "DATA",
                                    "canPreview": true,
                                    "preViewMode": "ONLY100",
                                    "description": "输入",
                                    "model": false
                                }
                            ],
                            "outputs": [],
                            "updateTime": "2022-05-24T09:09:17.579+0000",
                            "sequence": 0,
                            "extra": {
                                "type": "NORMAL",
                                "value": null,
                                "mainClass": null,
                                "engine": "PYTHON"
                            },
                            "script": {
                                "MAIN": "# <ALOGCLASSNAME>\n# EvaluateIV\n# </ALOGCLASSNAME>\n\n# <EXECTUSCRIPT>\ndef execute(conn, inputs, params, outputs, reportFileName):\n\n    '''\n    载入模块\n    '''\n    from sklearn.pipeline import Pipeline\n    import os\n    import pickle\n    import db_utils\n    import joblib\n    import sys\n    import json\n    import warnings\n    from SourceCodeImporter import SourceCodeImporter\n    from common import get_db_column\n    from common import get_feature\n    from common import get_label\n    from common import get_db_column_with_type\n    from common import keep_dot_after\n    warnings.filterwarnings(\"ignore\")\n    '''\n    载入redis连接信息\n    '''\n    redisParam = json.loads(params['redis'])\n    redisConn = db_utils.getRedisMasterConnection(redisParam['connectInfo'], redisParam['masterName'],\n                                                  redisParam['password'], redisParam['db'])\n    '''\n    远程模块载入\n    '''\n    name = \"EvaluateIV\"\n    code = db_utils.redisReadHsetFile(redisConn, \"alogclass\", name)\n    sys.meta_path.append(SourceCodeImporter(code.decode(),name))\n    from EvaluateIV import EvaluateIV\n    # from pipeline.alogclass.EvaluateIV import EvaluateIV\n    '''\n    获取输入数据\n    '''\n    keep_dot_after(db_type, inputs)\n    data_in = db_utils.query(conn, 'select * from ' + inputs['data_in'], db_type)\n\n    data_in_shape = data_in.shape\n    '''\n    转换后的参数\n    '''\n    db_columns = get_db_column_with_type(db_type, inputs, conn)\n    columns_values = get_feature(db_columns,params['ivinputfeaturecolumn'])\n    label_column = get_label(db_columns,params['ivlabelcolumn'])\n    '''\n    管道处理\n    '''\n    evaluateIV = EvaluateIV(params,columns_values,label_column)\n    evaluateIV.fit()\n    data_report_out = evaluateIV.transform(data_in)\n\n    data_report_out_copy = data_report_out.sort_values(\"IV\", ascending=True)\n\n    graph_dict = {\"x\":data_report_out_copy['feature'].tolist(), \"y\":data_report_out_copy['IV'].tolist()}\n    data_report_out_json = json.loads(data_report_out.to_json(orient=\"table\"))\n    data_report_out_json[\"graph\"] = graph_dict\n\n    redisParam = json.loads(params['redis'])\n    redisConn = db_utils.getRedisMasterConnection(redisParam['connectInfo'], redisParam['masterName'],\n                                                  redisParam['password'], redisParam['db'])\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"report_json_\" + reportFileName,\n                                json.dumps(data_report_out_json))\n\n    # '''\n    # 保存文件到redis\n    # '''\n    # pipeline_pkl_name = outputs['data_out'].split('_', 1)[0]\n    # joblib.dump(evaluateIV, params['pipeline_file']+\"pkl_\" + pipeline_pkl_name, compress=3)\n    # fileObject = pickle.dumps(joblib.load(params['pipeline_file']+\"pkl_\" + pipeline_pkl_name))\n    # os.remove(params['pipeline_file']+\"pkl_\" + pipeline_pkl_name)\n    # '''\n    # 保存pkl的二进制文件到redis中\n    # '''\n    # db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"pkl_\" + pipeline_pkl_name, fileObject)\n    # '''\n    # 保存模型pkl的参数到redis\n    # '''\n    # pkl_params = {}\n    # for i, v in data_in.dtypes.items():\n    #     pkl_params[str(i)]=str(v)\n    # db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"params_\" + pipeline_pkl_name, str(pkl_params))\n    # '''\n    # 构建pipeline\n    # '''\n    # pipe = Pipeline([\n    #     ('EvaluateIV', evaluateIV)\n    # ])\n    # data_out = pipe.transform(data_in)\n    # '''\n    # 构建输出结果的shape\n    # '''\n    # db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"shape_\" + outputs['data_out'], str(data_out.shape[0]) + \",\" + str(data_out.shape[1]))\n    #\n    # change_shape = {\n    #     'data_in': {\n    #         'startAt': 1,\n    #         'endAt': data_in_shape[1]\n    #     },\n    #     'data_out': {\n    #         'startAt': 1,\n    #         'endAt': data_out.shape[1]\n    #     },\n    #     \"change\": {\n    #         'startAt': data_in_shape[1] + 1,\n    #         'endAt': data_out.shape[1]\n    #     }\n    # }\n    # db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"change_shape_\" + pipeline_pkl_name,json.dumps(change_shape))\n    #\n    # '''\n    # 将结果写出\n    # '''\n    # db_utils.write_db_table(db_type=db_type, conn=conn, table_name=outputs['data_out'], data_frame=data_out,\n    #                         client=client, schema=inputs['schema'], hdfs_path=hdfsTmpPath)\n\n# </EXECTUSCRIPT>\n\n# import db_utils\n# db_type = 1\n# if db_type == 1:\n#     conn = db_utils.get_connection(db_type=db_type, host=\"192.168.198.108\", port=\"10000\", dbname=\"yq_yzx\", user=\"yangqing_yzx\", password=\"12qw#$ER\")\n#     client = db_utils.hdfs_client(hadoop_path=\"http://192.168.198.105:50070\")\n# else:\n#     client = None\n#     conn = db_utils.get_connection(db_type=db_type, host='192.168.198.172', port='15434', dbname='mlp', user='postgres', password='pgsql123456',schema='admin')\n# inputs1 = {'data_in':'\"shilmtest\".\"10000331_0_1\"','schema':'shilmtest'}\n# outputs1= {'data_out':'10000426_0_2'}\n# params1 = {'project_id':'project_10','ivinputfeaturecolumn':'4-5','ivlabelcolumn':'2','pipeline_file':'/tmp/pyserve/pipeline/'\n#            ,\"redis\": \"{\\\"connectInfo\\\":[[\\\"192.168.198.220\\\",\\\"26380\\\"],[\\\"192.168.198.221\\\",\\\"26380\\\"],[\\\"192.168.198.222\\\",\\\"26380\\\"]],\\\"masterName\\\":\\\"mymaster\\\",\\\"password\\\":\\\"123456\\\",\\\"db\\\":0}\"\n# , \"pipelines\": \"[10000221]\"}\n# execute(conn=conn,inputs=inputs1,outputs=outputs1,params=params1,reportFileName=\"comb.html\")"
                            },
                            "supportPmml": false,
                            "children": null,
                            "parameters": {
                                "ivinputfeaturecolumn": "",
                                "ivlabelcolumn": ""
                            }
                        },
                        {
                            "id": 10025,
                            "createTime": "2022-05-24T09:09:17.993+0000",
                            "creatorId": 100,
                            "creatorName": "admin",
                            "name": "基尼系数",
                            "targetAlgorithm": "com.yzx.mlp.scheduling.core.alog.unparallel.engine.pythonengine.PythonCommonAlgorithm",
                            "parentId": 10022,
                            "enabled": true,
                            "paralleled": false,
                            "component": true,
                            "allowViewSource": true,
                            "iconPath": "icontezhenggongcheng-01",
                            "minimumInput": 1,
                            "inBuilt": true,
                            "hasReport": true,
                            "description": "",
                            "tabs": [
                                {
                                    "id": 7519,
                                    "createTime": "2022-05-24T09:09:17.994+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "tabName": "字段设置",
                                    "elements": [
                                        {
                                            "id": 20540,
                                            "createTime": "2022-05-24T09:09:17.994+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "giniinputfeaturecolumn",
                                            "label": "输入特征列",
                                            "defaultValue": null,
                                            "value": null,
                                            "options": "",
                                            "rexp": "/^[0-9A-Za-z,\\-_]{1,10000}$/",
                                            "placeholder": "请输入特征所在列序号或者列名称",
                                            "toolTip": "表示需处理的特征所在列序号或者列名称，如“1-3,10,column1”,表示取特征在表中的1到3列，10列 和字段名称为column1的列，列序号从1开始计数，不包含序号列。",
                                            "sequence": 0,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        },
                                        {
                                            "id": 20541,
                                            "createTime": "2022-05-24T09:09:17.994+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "ginilabelcolumn",
                                            "label": "标签列",
                                            "defaultValue": null,
                                            "value": null,
                                            "options": "",
                                            "rexp": "/^[0-9A-Za-z,\\-_]{1,10000}$/",
                                            "placeholder": "请输入标签所在列序号或者列名称",
                                            "toolTip": "标签列所在列序号或者列名称，列序号从1开始计数，不包含序号列。",
                                            "sequence": 1,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        }
                                    ]
                                }
                            ],
                            "inputs": [
                                {
                                    "id": 10393,
                                    "createTime": "2022-05-24T09:09:17.994+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "key": "data_in",
                                    "type": "INPUT",
                                    "cat": "DATA",
                                    "canPreview": true,
                                    "preViewMode": "ONLY100",
                                    "description": "输入",
                                    "model": false
                                }
                            ],
                            "outputs": [],
                            "updateTime": "2022-05-24T09:09:17.993+0000",
                            "sequence": 1,
                            "extra": {
                                "type": "NORMAL",
                                "value": null,
                                "mainClass": null,
                                "engine": "PYTHON"
                            },
                            "script": {
                                "MAIN": "# <ALOGCLASSNAME>\n# GiniCoefficient\n# </ALOGCLASSNAME>\n\n# <EXECTUSCRIPT>\ndef execute(conn, inputs, params, outputs, reportFileName):\n\n    '''\n    载入模块\n    '''\n    from sklearn.pipeline import Pipeline\n    import os\n    import pickle\n    import db_utils\n    import joblib\n    import sys\n    import json\n    import warnings\n    from SourceCodeImporter import SourceCodeImporter\n    from common import get_db_column\n    from common import get_feature\n    from common import get_label\n    from common import get_db_column_with_type\n    from common import keep_dot_after\n    warnings.filterwarnings(\"ignore\")\n    '''\n    载入redis连接信息\n    '''\n    redisParam = json.loads(params['redis'])\n    redisConn = db_utils.getRedisMasterConnection(redisParam['connectInfo'], redisParam['masterName'],\n                                                  redisParam['password'], redisParam['db'])\n    '''\n    远程模块载入\n    '''\n    name = \"GiniCoefficient\"\n    code = db_utils.redisReadHsetFile(redisConn, \"alogclass\", name)\n    sys.meta_path.append(SourceCodeImporter(code.decode(), name))\n    from GiniCoefficient import GiniCoefficient\n    # from pipeline.alogclass.GiniCoefficient import GiniCoefficient\n    '''\n    获取输入数据\n    '''\n    keep_dot_after(db_type, inputs)\n    data_in = db_utils.query(conn, 'select * from ' + inputs['data_in'], db_type)\n\n    data_in_shape = data_in.shape\n    '''\n    转换后的参数\n    '''\n    db_columns = get_db_column_with_type(db_type, inputs, conn)\n    columns_values = get_feature(db_columns, params['giniinputfeaturecolumn'])\n    label_column = get_label(db_columns, params['ginilabelcolumn'])\n    '''\n    管道处理\n    '''\n    giniCoefficient = GiniCoefficient(params, columns_values, label_column)\n    giniCoefficient.fit()\n\n    data_report_out = giniCoefficient.transform(data_in)\n\n    data_report_out_copy = data_report_out.sort_values(\"gini\", ascending=True)\n\n    graph_dict = {\"x\":data_report_out_copy['feature'].tolist(), \"y\":data_report_out_copy['gini'].tolist()}\n    data_report_out_json = json.loads(data_report_out.to_json(orient=\"table\"))\n    data_report_out_json[\"graph\"] = graph_dict\n\n    redisParam = json.loads(params['redis'])\n    redisConn = db_utils.getRedisMasterConnection(redisParam['connectInfo'], redisParam['masterName'],\n                                                  redisParam['password'], redisParam['db'])\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"report_json_\" + reportFileName,\n                                json.dumps(data_report_out_json))\n    # '''\n    # 保存文件到redis\n    # '''\n    # pipeline_pkl_name = outputs['data_out'].split('_', 1)[0]\n    # joblib.dump(giniCoefficient, params['pipeline_file']+\"pkl_\" + pipeline_pkl_name, compress=3)\n    # fileObject = pickle.dumps(joblib.load(params['pipeline_file']+\"pkl_\" + pipeline_pkl_name))\n    # os.remove(params['pipeline_file']+\"pkl_\" + pipeline_pkl_name)\n    # '''\n    # 保存pkl的二进制文件到redis中\n    # '''\n    # db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"pkl_\" + pipeline_pkl_name, fileObject)\n    # '''\n    # 保存模型pkl的参数到redis\n    # '''\n    # pkl_params = {}\n    # for i, v in data_in.dtypes.items():\n    #     pkl_params[str(i)]=str(v)\n    # db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"params_\" + pipeline_pkl_name, str(pkl_params))\n    # '''\n    # 构建pipeline\n    # '''\n    # pipe = Pipeline([\n    #     ('GiniCoefficient', giniCoefficient)\n    # ])\n    # data_out = pipe.transform(data_in)\n    # '''\n    # 构建输出结果的shape\n    # '''\n    # db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"shape_\" + outputs['data_out'], str(data_out.shape[0]) + \",\" + str(data_out.shape[1]))\n    #\n    # change_shape = {\n    #     'data_in': {\n    #         'startAt': 1,\n    #         'endAt': data_in_shape[1]\n    #     },\n    #     'data_out': {\n    #         'startAt': 1,\n    #         'endAt': data_out.shape[1]\n    #     },\n    #     \"change\": {\n    #         'startAt': data_in_shape[1] + 1,\n    #         'endAt': data_out.shape[1]\n    #     }\n    # }\n    # db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"change_shape_\" + pipeline_pkl_name,json.dumps(change_shape))\n    #\n    # '''\n    # 将结果写出\n    # '''\n    # db_utils.write_db_table(db_type=db_type, conn=conn, table_name=outputs['data_out'], data_frame=data_out,\n    #                         client=client, schema=inputs['schema'], hdfs_path=hdfsTmpPath)\n\n# </EXECTUSCRIPT>\n\n# import db_utils\n# db_type = 1\n# if db_type == 1:\n#     conn = db_utils.get_connection(db_type=db_type, host=\"192.168.198.108\", port=\"10000\", dbname=\"yq_yzx\", user=\"yangqing_yzx\", password=\"12qw#$ER\")\n#     client = db_utils.hdfs_client(hadoop_path=\"http://192.168.198.105:50070\")\n# else:\n#     client = None\n#     conn = db_utils.get_connection(db_type=db_type, host='192.168.198.172', port='15434', dbname='mlp', user='postgres', password='pgsql123456',schema='admin')\n# inputs1 = {'data_in':'\"admin\".\"10000777_0_1\"','schema':'admin'}\n# outputs1= {'data_out':'10000171_0_10'}\n# params1 = {'project_id':'project_12','giniinputfeaturecolumn':'2-4,6','ginilabelcolumn':'5','pipeline_file':'/tmp/pyserve/pipeline/',\n#            \"redis\": \"{\\\"connectInfo\\\":[[\\\"192.168.198.220\\\",\\\"26380\\\"],[\\\"192.168.198.221\\\",\\\"26380\\\"],[\\\"192.168.198.222\\\",\\\"26380\\\"]],\\\"masterName\\\":\\\"mymaster\\\",\\\"password\\\":\\\"123456\\\",\\\"db\\\":0}\"}\n# execute(conn=conn,inputs=inputs1,outputs=outputs1,params=params1,reportFileName=\"comb.html\")"
                            },
                            "supportPmml": false,
                            "children": null,
                            "parameters": {
                                "giniinputfeaturecolumn": "",
                                "ginilabelcolumn": ""
                            }
                        },
                        {
                            "id": 10026,
                            "createTime": "2022-05-24T09:09:18.110+0000",
                            "creatorId": 100,
                            "creatorName": "admin",
                            "name": "卡方",
                            "targetAlgorithm": "com.yzx.mlp.scheduling.core.alog.unparallel.engine.pythonengine.PythonCommonAlgorithm",
                            "parentId": 10022,
                            "enabled": true,
                            "paralleled": false,
                            "component": true,
                            "allowViewSource": true,
                            "iconPath": "icontezhenggongcheng-01",
                            "minimumInput": 1,
                            "inBuilt": true,
                            "hasReport": true,
                            "description": "",
                            "tabs": [
                                {
                                    "id": 7520,
                                    "createTime": "2022-05-24T09:09:18.111+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "tabName": "字段设置",
                                    "elements": [
                                        {
                                            "id": 20542,
                                            "createTime": "2022-05-24T09:09:18.111+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "kfinputfeaturecolumn",
                                            "label": "输入特征列",
                                            "defaultValue": null,
                                            "value": null,
                                            "options": "",
                                            "rexp": "/^[0-9A-Za-z,\\-_]{1,10000}$/",
                                            "placeholder": "请输入特征所在列序号或者列名称，如：1-3,10",
                                            "toolTip": "表示需处理的特征所在列序号或者列名称，如“1-3,10,column1”,表示取特征在表中的1到3列，10列 和字段名称为column1的列，列序号从1开始计数，不包含序号列。\n",
                                            "sequence": 0,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        },
                                        {
                                            "id": 20543,
                                            "createTime": "2022-05-24T09:09:18.111+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "kflabelcolumn",
                                            "label": "标签列",
                                            "defaultValue": null,
                                            "value": null,
                                            "options": "",
                                            "rexp": "/^[0-9A-Za-z,\\-_]{1,10000}$/",
                                            "placeholder": "请输入标签所在列序号或者列名称。",
                                            "toolTip": "标签列所在列序号或者列名称，如“1-3,10,column1”,表示取特征在表中的1到3列，10列 和字段名称为column1的列，列序号从1开始计数，不包含序号列。",
                                            "sequence": 1,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        }
                                    ]
                                }
                            ],
                            "inputs": [
                                {
                                    "id": 10394,
                                    "createTime": "2022-05-24T09:09:18.111+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "key": "data_in",
                                    "type": "INPUT",
                                    "cat": "DATA",
                                    "canPreview": true,
                                    "preViewMode": "ONLY100",
                                    "description": "输入",
                                    "model": false
                                }
                            ],
                            "outputs": [],
                            "updateTime": "2022-05-24T09:09:18.110+0000",
                            "sequence": 2,
                            "extra": {
                                "type": "NORMAL",
                                "value": null,
                                "mainClass": null,
                                "engine": "PYTHON"
                            },
                            "script": {
                                "MAIN": "# <ALOGCLASSNAME>\n# ChisquareAssessment\n# </ALOGCLASSNAME>\n\n# <EXECTUSCRIPT>\ndef execute(conn, inputs, params, outputs, reportFileName):\n\n    '''\n    载入模块\n    '''\n    from sklearn.pipeline import Pipeline\n    import os\n    import pickle\n    import db_utils\n    import joblib\n    import sys\n    import json\n    import warnings\n    from SourceCodeImporter import SourceCodeImporter\n    from common import get_db_column\n    from common import get_feature\n    from common import get_label\n    from common import get_db_column_with_type\n    from common import keep_dot_after\n    warnings.filterwarnings(\"ignore\")\n    '''\n    载入redis连接信息\n    '''\n    redisParam = json.loads(params['redis'])\n    redisConn = db_utils.getRedisMasterConnection(redisParam['connectInfo'], redisParam['masterName'],\n                                                  redisParam['password'], redisParam['db'])\n    '''\n    远程模块载入\n    '''\n    name = \"ChisquareAssessment\"\n    code = db_utils.redisReadHsetFile(redisConn, \"alogclass\", name)\n    sys.meta_path.append(SourceCodeImporter(code.decode(),name))\n    from ChisquareAssessment import ChisquareAssessment\n    # from pipeline.alogclass.ChisquareAssessment import ChisquareAssessment\n    '''\n    获取输入数据\n    '''\n    keep_dot_after(db_type, inputs)\n    data_in = db_utils.query(conn, 'select * from ' + inputs['data_in'], db_type)\n\n    data_in_shape = data_in.shape\n    '''\n    转换后的参数\n    '''\n    db_columns = get_db_column_with_type(db_type, inputs, conn)\n    columns_values = get_feature(db_columns,params['kfinputfeaturecolumn'])\n    label_column = get_label(db_columns,params['kflabelcolumn'])\n    '''\n    管道处理\n    '''\n    chisquareAssessment = ChisquareAssessment(params, columns_values, label_column)\n    chisquareAssessment.fit()\n\n    data_report_out = chisquareAssessment.transform(data_in)\n\n    data_report_out_copy = data_report_out.sort_values(\"chi2_score\", ascending=True)\n\n    graph_dict = {\"x\":data_report_out_copy['feature'].tolist(), \"y\":data_report_out_copy['chi2_score'].tolist()}\n    data_report_out_json = json.loads(data_report_out.to_json(orient=\"table\"))\n    data_report_out_json[\"graph\"] = graph_dict\n\n    redisParam = json.loads(params['redis'])\n    redisConn = db_utils.getRedisMasterConnection(redisParam['connectInfo'], redisParam['masterName'],\n                                                  redisParam['password'], redisParam['db'])\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"report_json_\" + reportFileName,\n                                json.dumps(data_report_out_json))\n\n    # '''\n    # 保存文件到redis\n    # '''\n    # pipeline_pkl_name = outputs['data_out'].split('_', 1)[0]\n    # joblib.dump(chisquareAssessment, params['pipeline_file']+\"pkl_\" + pipeline_pkl_name, compress=3)\n    # fileObject = pickle.dumps(joblib.load(params['pipeline_file']+\"pkl_\" + pipeline_pkl_name))\n    # os.remove(params['pipeline_file']+\"pkl_\" + pipeline_pkl_name)\n    # '''\n    # 保存pkl的二进制文件到redis中\n    # '''\n    # db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"pkl_\" + pipeline_pkl_name, fileObject)\n    # '''\n    # 保存模型pkl的参数到redis\n    # '''\n    # pkl_params = {}\n    # for i, v in data_in.dtypes.items():\n    #     pkl_params[str(i)]=str(v)\n    # db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"params_\" + pipeline_pkl_name, str(pkl_params))\n    # '''\n    # 构建pipeline\n    # '''\n    # pipe = Pipeline([\n    #     ('ChisquareAssessment', chisquareAssessment)\n    # ])\n    # data_out = pipe.transform(data_in)\n    # '''\n    # 构建输出结果的shape\n    # '''\n    # db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"shape_\" + outputs['data_out'], str(data_out.shape[0]) + \",\" + str(data_out.shape[1]))\n    #\n    # change_shape = {\n    #     'data_in': {\n    #         'startAt': 1,\n    #         'endAt': data_in_shape[1]\n    #     },\n    #     'data_out': {\n    #         'startAt': 1,\n    #         'endAt': data_out.shape[1]\n    #     },\n    #     \"change\": {\n    #         'startAt': data_in_shape[1] + 1,\n    #         'endAt': data_out.shape[1]\n    #     }\n    # }\n    # db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"change_shape_\" + pipeline_pkl_name,json.dumps(change_shape))\n    #\n    # '''\n    # 将结果写出\n    # '''\n    # db_utils.write_db_table(db_type=db_type, conn=conn, table_name=outputs['data_out'], data_frame=data_out,\n    #                         client=client, schema=inputs['schema'], hdfs_path=hdfsTmpPath)\n\n# </EXECTUSCRIPT>\n\n# import db_utils\n# db_type = 1\n# if db_type == 1:\n#     conn = db_utils.get_connection(db_type=db_type, host=\"192.168.198.108\", port=\"10000\", dbname=\"yq_yzx\", user=\"yangqing_yzx\", password=\"12qw#$ER\")\n#     client = db_utils.hdfs_client(hadoop_path=\"http://192.168.198.105:50070\")\n# else:\n#     client = None\n#     conn = db_utils.get_connection(db_type=db_type, host='192.168.198.172', port='15434', dbname='mlp', user='postgres', password='pgsql123456',schema='admin')\n# inputs1 = {'data_in':'\"admin\".\"10000777_0_1\"','schema':'admin'}\n# outputs1= {'data_out':'10000171_0_10'}\n# params1 = {'project_id':'project_11','kfinputfeaturecolumn':'2-4,6','kflabelcolumn':'5','pipeline_file':'/tmp/pyserve/pipeline/'\n#            ,\"redis\": \"{\\\"connectInfo\\\":[[\\\"192.168.198.220\\\",\\\"26380\\\"],[\\\"192.168.198.221\\\",\\\"26380\\\"],[\\\"192.168.198.222\\\",\\\"26380\\\"]],\\\"masterName\\\":\\\"mymaster\\\",\\\"password\\\":\\\"123456\\\",\\\"db\\\":0}\"}\n# execute(conn=conn,inputs=inputs1,outputs=outputs1,params=params1,reportFileName=\"comb.html\")"
                            },
                            "supportPmml": false,
                            "children": null,
                            "parameters": {
                                "kfinputfeaturecolumn": "",
                                "kflabelcolumn": ""
                            }
                        },
                        {
                            "id": 10024,
                            "createTime": "2022-05-24T09:09:18.562+0000",
                            "creatorId": 100,
                            "creatorName": "admin",
                            "name": "lasso",
                            "targetAlgorithm": "com.yzx.mlp.scheduling.core.alog.unparallel.engine.pythonengine.PythonCommonAlgorithm",
                            "parentId": 10022,
                            "enabled": true,
                            "paralleled": false,
                            "component": true,
                            "allowViewSource": true,
                            "iconPath": "icontezhenggongcheng-01",
                            "minimumInput": 1,
                            "inBuilt": true,
                            "hasReport": true,
                            "description": "",
                            "tabs": [
                                {
                                    "id": 7521,
                                    "createTime": "2022-05-24T09:09:18.563+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "tabName": "字段设置",
                                    "elements": [
                                        {
                                            "id": 20544,
                                            "createTime": "2022-05-24T09:09:18.563+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "lassoinputfeaturecolumn",
                                            "label": "输入特征列",
                                            "defaultValue": null,
                                            "value": null,
                                            "options": "",
                                            "rexp": "/^[0-9A-Za-z,\\-_]{1,10000}$/",
                                            "placeholder": "请输入特征所在列序号或者列名称",
                                            "toolTip": "表示需处理的特征所在列序号或者列名称，如“1-3,10,column1”,表示取特征在表中的1到3列，10列 和字段名称为column1的列，列序号从1开始计数，不包含序号列。\n",
                                            "sequence": 0,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        },
                                        {
                                            "id": 20545,
                                            "createTime": "2022-05-24T09:09:18.563+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "lassolabelcolumn",
                                            "label": "标签列",
                                            "defaultValue": null,
                                            "value": null,
                                            "options": "",
                                            "rexp": "/^[0-9A-Za-z,\\-_]{1,10000}$/",
                                            "placeholder": "请输入所在列序号或者列名称",
                                            "toolTip": "标签列所在列序号或者列名称，序号从1开始计数，不包含序号列。",
                                            "sequence": 1,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        }
                                    ]
                                }
                            ],
                            "inputs": [
                                {
                                    "id": 10395,
                                    "createTime": "2022-05-24T09:09:18.563+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "key": "data_in",
                                    "type": "INPUT",
                                    "cat": "DATA",
                                    "canPreview": true,
                                    "preViewMode": "ONLY100",
                                    "description": "输入",
                                    "model": false
                                }
                            ],
                            "outputs": [
                                {
                                    "id": 10396,
                                    "createTime": "2022-05-24T09:09:18.563+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "key": "data_out",
                                    "type": "OUTPUT",
                                    "cat": "DATA",
                                    "canPreview": true,
                                    "preViewMode": "ONLY100",
                                    "description": "输出",
                                    "access": "SAME",
                                    "columns": "[]",
                                    "model": false
                                }
                            ],
                            "updateTime": "2022-05-24T09:09:18.562+0000",
                            "sequence": 3,
                            "extra": {
                                "type": "NORMAL",
                                "value": null,
                                "mainClass": null,
                                "engine": "PYTHON"
                            },
                            "script": {
                                "MAIN": "# <ALOGCLASSNAME>\n# Lasso_mlp\n# </ALOGCLASSNAME>\n\n# <EXECTUSCRIPT>\ndef execute(conn, inputs, params, outputs, reportFileName):\n\n    '''\n    载入模块\n    '''\n    from sklearn.pipeline import Pipeline\n    import os\n    import pickle\n    import db_utils\n    import joblib\n    import sys\n    import json\n    import warnings\n    from SourceCodeImporter import SourceCodeImporter\n    from common import get_db_column\n    from common import get_feature\n    from common import get_label\n    from common import get_db_column_with_type\n    from common import keep_dot_after\n    warnings.filterwarnings(\"ignore\")\n    '''\n    载入redis连接信息\n    '''\n    redisParam = json.loads(params['redis'])\n    redisConn = db_utils.getRedisMasterConnection(redisParam['connectInfo'], redisParam['masterName'],\n                                                  redisParam['password'], redisParam['db'])\n    '''\n    远程模块载入\n    '''\n    name = \"Lasso_mlp\"\n    code = db_utils.redisReadHsetFile(redisConn, \"alogclass\", name)\n    sys.meta_path.append(SourceCodeImporter(code.decode(),name))\n    from Lasso_mlp import Lasso_mlp\n    # from pipeline.alogclass.Lasso_mlp import Lasso_mlp\n\n    '''\n    获取输入数据\n    '''\n    keep_dot_after(db_type, inputs)\n    data_in = db_utils.query(conn, 'select * from ' + inputs['data_in'], db_type)\n\n    data_in_shape = data_in.shape\n    '''\n    转换后的参数\n    '''\n    db_columns = get_db_column_with_type(db_type, inputs, conn)\n    columns_values = get_feature(db_columns,params['lassoinputfeaturecolumn'])\n    label_column = get_label(db_columns,params['lassolabelcolumn'])\n    '''\n    管道处理\n    '''\n    lasso = Lasso_mlp(params, columns_values, label_column)\n    lasso.fit()\n\n    data_report_out = lasso.transform(data_in)\n\n    data_report_out_copy = data_report_out.sort_values(\"lasso\", ascending=True)\n\n    graph_dict = {\"x\":data_report_out_copy['feature'].tolist(), \"y\":data_report_out_copy['lasso'].tolist()}\n    data_report_out_json = json.loads(data_report_out.to_json(orient=\"table\"))\n    data_report_out_json[\"graph\"] = graph_dict\n\n    redisParam = json.loads(params['redis'])\n    redisConn = db_utils.getRedisMasterConnection(redisParam['connectInfo'], redisParam['masterName'],\n                                                  redisParam['password'], redisParam['db'])\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"report_json_\" + reportFileName,\n                                json.dumps(data_report_out_json))\n\n    # '''\n    # 保存文件到redis\n    # '''\n    # pipeline_pkl_name = outputs['data_out'].split('_', 1)[0]\n    # joblib.dump(lasso, params['pipeline_file']+\"pkl_\" + pipeline_pkl_name, compress=3)\n    # fileObject = pickle.dumps(joblib.load(params['pipeline_file']+\"pkl_\" + pipeline_pkl_name))\n    # os.remove(params['pipeline_file']+\"pkl_\" + pipeline_pkl_name)\n    # '''\n    # 保存pkl的二进制文件到redis中\n    # '''\n    # import json\n    # redisParam = json.loads(params['redis'])\n    # redisConn = db_utils.getRedisMasterConnection(redisParam['connectInfo'], redisParam['masterName'],\n    #                                               redisParam['password'], redisParam['db'])\n    # db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"pkl_\" + pipeline_pkl_name, fileObject)\n    # '''\n    # 保存模型pkl的参数到redis\n    # '''\n    # pkl_params = {}\n    # for i, v in data_in.dtypes.items():\n    #     pkl_params[str(i)]=str(v)\n    # db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"params_\" + pipeline_pkl_name, str(pkl_params))\n    # '''\n    # 构建pipeline\n    # '''\n    # pipe = Pipeline([\n    #     ('Lasso_mlp', lasso)\n    # ])\n    # data_out = pipe.transform(data_in)\n    # '''\n    # 构建输出结果的shape\n    # '''\n    # db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"shape_\" + outputs['data_out'], str(data_out.shape[0]) + \",\" + str(data_out.shape[1]))\n    #\n    # change_shape = {\n    #     'data_in': {\n    #         'startAt': 1,\n    #         'endAt': data_in_shape[1]\n    #     },\n    #     'data_out': {\n    #         'startAt': 1,\n    #         'endAt': data_out.shape[1]\n    #     },\n    #     \"change\": {\n    #         'startAt': data_in_shape[1] + 1,\n    #         'endAt': data_out.shape[1]\n    #     }\n    # }\n    # db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"change_shape_\" + pipeline_pkl_name,json.dumps(change_shape))\n    #\n    # '''\n    # 将结果写出\n    # '''\n    # db_utils.write_db_table(db_type=db_type, conn=conn, table_name=outputs['data_out'], data_frame=data_out,\n    #                         client=client, schema=inputs['schema'], hdfs_path=hdfsTmpPath)\n\n# </EXECTUSCRIPT>\n\n# import db_utils\n# db_type = 1\n# if db_type == 1:\n#     conn = db_utils.get_connection(db_type=db_type, host=\"192.168.198.108\", port=\"10000\", dbname=\"yq_yzx\", user=\"yangqing_yzx\", password=\"12qw#$ER\")\n#     client = db_utils.hdfs_client(hadoop_path=\"http://192.168.198.105:50070\")\n# else:\n#     client = None\n#     conn = db_utils.get_connection(db_type=db_type, host='192.168.198.172', port='15434', dbname='mlp', user='postgres', password='pgsql123456',schema='admin')\n# inputs1 = {'data_in':'\"admin\".\"10000777_0_1\"','schema':'admin'}\n# outputs1= {'data_out':'10000171_0_10'}\n# params1 = {'project_id':'project_11','lassoinputfeaturecolumn':'2-4,6','lassolabelcolumn':'5','pipeline_file':'/tmp/pyserve/pipeline/'\n#     ,\"redis\":\"{\\\"connectInfo\\\":[[\\\"192.168.198.220\\\",\\\"26380\\\"],[\\\"192.168.198.221\\\",\\\"26380\\\"],[\\\"192.168.198.222\\\",\\\"26380\\\"]],\\\"masterName\\\":\\\"mymaster\\\",\\\"password\\\":\\\"123456\\\",\\\"db\\\":0}\"}\n# execute(conn=conn,inputs=inputs1,outputs=outputs1,params=params1,reportFileName=\"comb.html\")"
                            },
                            "supportPmml": false,
                            "children": null,
                            "parameters": {
                                "lassoinputfeaturecolumn": "",
                                "lassolabelcolumn": ""
                            }
                        },
                        {
                            "id": 10056,
                            "createTime": "2022-05-24T09:09:18.971+0000",
                            "creatorId": 100,
                            "creatorName": "admin",
                            "name": "树模型",
                            "targetAlgorithm": "com.yzx.mlp.scheduling.core.alog.unparallel.engine.pythonengine.PythonCommonAlgorithm",
                            "parentId": 10022,
                            "enabled": true,
                            "paralleled": false,
                            "component": true,
                            "allowViewSource": true,
                            "iconPath": "icontezhenggongcheng-01",
                            "minimumInput": 1,
                            "inBuilt": true,
                            "hasReport": true,
                            "description": "树模型",
                            "tabs": [
                                {
                                    "id": 7522,
                                    "createTime": "2022-05-24T09:09:18.972+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "tabName": "字段设置",
                                    "elements": [
                                        {
                                            "id": 20546,
                                            "createTime": "2022-05-24T09:09:18.972+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "treeinputfeaturecolumn",
                                            "label": "输入特征列",
                                            "defaultValue": null,
                                            "value": null,
                                            "options": "",
                                            "rexp": "/^[0-9A-Za-z,\\-_]{1,10000}$/",
                                            "placeholder": "请输入特征所在列序号或者列名称",
                                            "toolTip": "表示需处理的特征所在列序号或者列名称，如“1-3,10,column1”,表示取特征在表中的1到3列，10列 和字段名称为column1的列，列序号从1开始计数，不包含序号列。\n",
                                            "sequence": 0,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        },
                                        {
                                            "id": 20547,
                                            "createTime": "2022-05-24T09:09:18.972+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "treelabelcolumn",
                                            "label": "标签列",
                                            "defaultValue": null,
                                            "value": null,
                                            "options": "",
                                            "rexp": "/^[0-9A-Za-z,\\-_]{1,10000}$/",
                                            "placeholder": "请输入标签所在列序号或者列名称",
                                            "toolTip": "标签列所在列序号或者列名称。",
                                            "sequence": 1,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        }
                                    ]
                                },
                                {
                                    "id": 7523,
                                    "createTime": "2022-05-24T09:09:18.972+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "tabName": "超参数设置",
                                    "elements": [
                                        {
                                            "id": 20548,
                                            "createTime": "2022-05-24T09:09:18.972+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "treen_estimators",
                                            "label": "n_estimators",
                                            "defaultValue": null,
                                            "value": "100",
                                            "options": "",
                                            "rexp": "/^[0-9]+$/",
                                            "placeholder": "",
                                            "toolTip": "基评估器的数量 取值范围正整数",
                                            "sequence": 0,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        },
                                        {
                                            "id": 20549,
                                            "createTime": "2022-05-24T09:09:18.972+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "treemax_depth",
                                            "label": "max_depth",
                                            "defaultValue": null,
                                            "value": "3",
                                            "options": "",
                                            "rexp": "/^[0-9]+$/",
                                            "placeholder": "",
                                            "toolTip": "决策树的最大深度 \n 取值范围:正整数常用[3,8]",
                                            "sequence": 1,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        },
                                        {
                                            "id": 20550,
                                            "createTime": "2022-05-24T09:09:18.972+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "treemin_samples_split",
                                            "label": "min_samples_split",
                                            "defaultValue": null,
                                            "value": "3",
                                            "options": "",
                                            "rexp": "/^[0-9]+$/",
                                            "placeholder": "",
                                            "toolTip": "节点再划分所需的最小样本数 \n 取值范围正整数",
                                            "sequence": 2,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        },
                                        {
                                            "id": 20551,
                                            "createTime": "2022-05-24T09:09:18.972+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "treecriterion",
                                            "label": "criterion",
                                            "defaultValue": null,
                                            "value": "gini",
                                            "options": "gini(基尼系数):gini;info Gain(信息增益):entropy",
                                            "rexp": "/\\S/",
                                            "placeholder": "",
                                            "toolTip": "选择基尼系数或者信息增益 \n 取值范围 gini或info gain",
                                            "sequence": 3,
                                            "elementType": 3,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        },
                                        {
                                            "id": 20552,
                                            "createTime": "2022-05-24T09:09:18.972+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "treeother_params",
                                            "label": "其他超参数设置",
                                            "defaultValue": null,
                                            "value": null,
                                            "options": "",
                                            "rexp": "/\\S/",
                                            "placeholder": "",
                                            "toolTip": "请输入配置的超参数。参数1=值1,参数2=值2",
                                            "sequence": 3,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": false
                                        }
                                    ]
                                }
                            ],
                            "inputs": [
                                {
                                    "id": 10397,
                                    "createTime": "2022-05-24T09:09:18.972+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "key": "data_in",
                                    "type": "INPUT",
                                    "cat": "DATA",
                                    "canPreview": true,
                                    "preViewMode": "ONLY100",
                                    "description": "输入",
                                    "model": false
                                }
                            ],
                            "outputs": [],
                            "updateTime": "2022-05-24T09:09:18.971+0000",
                            "sequence": 4,
                            "extra": {
                                "type": "NORMAL",
                                "value": null,
                                "mainClass": null,
                                "engine": "PYTHON"
                            },
                            "script": {
                                "MAIN": "# <ALOGCLASSNAME>\n# TreeModelScore\n# </ALOGCLASSNAME>\n\n# <EXECTUSCRIPT>\ndef execute(conn, inputs, params, outputs, reportFileName):\n\n    '''\n    载入模块\n    '''\n    from sklearn.pipeline import Pipeline\n    import os\n    import pickle\n    import db_utils\n    import joblib\n    import sys\n    import json\n    import warnings\n    from common import get_db_column\n    from common import get_feature\n    from common import get_label\n    from SourceCodeImporter import SourceCodeImporter\n    from common import get_db_column_with_type\n    from common import keep_dot_after\n\n    warnings.filterwarnings(\"ignore\")\n    '''\n    载入redis连接信息\n    '''\n    redisParam = json.loads(params['redis'])\n    redisConn = db_utils.getRedisMasterConnection(redisParam['connectInfo'], redisParam['masterName'],\n                                                  redisParam['password'], redisParam['db'])\n    '''\n    远程模块载入\n    '''\n    name = \"TreeModelScore\"\n    code = db_utils.redisReadHsetFile(redisConn, \"alogclass\", \"TreeModelScore\")\n    sys.meta_path.append(SourceCodeImporter(code.decode(), name))\n    from TreeModelScore import TreeModelScore\n    # from pipeline.alogclass.TreeModelScore import TreeModelScore\n\n    '''\n    获取输入数据\n    '''\n    keep_dot_after(db_type, inputs)\n    data_in = db_utils.query(conn, 'select * from ' + inputs['data_in'], db_type)\n\n    data_in_shape = data_in.shape\n\n    '''\n    转换后的参数\n    '''\n    db_columns = get_db_column_with_type(db_type, inputs, conn)\n    label_column = get_label(db_columns, params['treelabelcolumn'])\n    columns_values = get_feature(db_columns, params['treeinputfeaturecolumn'])\n\n    '''\n    管道处理\n    '''\n    treeModelScore = TreeModelScore(params, columns_values, label_column)\n    treeModelScore.fit()\n    # data_out = treeModelScore.transform(data_in)\n\n\n    data_report_out = treeModelScore.transform(data_in)\n\n    data_report_out_copy = data_report_out.sort_values(\"tree_score\", ascending=True)\n\n    graph_dict = {\"x\":data_report_out_copy['feature'].tolist(), \"y\":data_report_out_copy['tree_score'].tolist()}\n    data_report_out_json = json.loads(data_report_out.to_json(orient=\"table\"))\n    data_report_out_json[\"graph\"] = graph_dict\n\n    redisParam = json.loads(params['redis'])\n    redisConn = db_utils.getRedisMasterConnection(redisParam['connectInfo'], redisParam['masterName'],\n                                                  redisParam['password'], redisParam['db'])\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"report_json_\" + reportFileName,\n                                json.dumps(data_report_out_json))\n\n    # '''\n    # 保存文件到redis\n    # '''\n    # pipeline_pkl_name = outputs['data_out'].split('_', 1)[0]\n    # joblib.dump(treeModelScore, params['pipeline_file']+\"pkl_\" + pipeline_pkl_name, compress=3)\n    # fileObject = pickle.dumps(joblib.load(params['pipeline_file']+\"pkl_\" + pipeline_pkl_name))\n    # os.remove(params['pipeline_file']+\"pkl_\" + pipeline_pkl_name)\n    # '''\n    # 保存pkl的二进制文件到redis中\n    # '''\n    # db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"pkl_\" + pipeline_pkl_name, fileObject)\n    # '''\n    # 保存模型pkl的参数到redis\n    # '''\n    # pkl_params = {}\n    # for i, v in data_in.dtypes.items():\n    #     pkl_params[str(i)]=str(v)\n    # db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"params_\" + pipeline_pkl_name, str(pkl_params))\n    # '''\n    # 构建pipeline\n    # '''\n    # pipe = Pipeline([\n    #     ('TreeModelScore', treeModelScore)\n    # ])\n    # data_out = pipe.transform(data_in)\n    # '''\n    # 构建输出结果的shape\n    # '''\n    # db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"shape_\" + outputs['data_out'], str(data_out.shape[0]) + \",\" + str(data_out.shape[1]))\n    #\n    # change_shape = {\n    #     'data_in': {\n    #         'startAt': 1,\n    #         'endAt': data_in_shape[1]\n    #     },\n    #     'data_out': {\n    #         'startAt': 1,\n    #         'endAt': data_out.shape[1]\n    #     },\n    #     \"change\": {\n    #         'startAt': data_in_shape[1] + 1,\n    #         'endAt': data_out.shape[1]\n    #     }\n    # }\n    # db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"change_shape_\" + pipeline_pkl_name,json.dumps(change_shape))\n    #\n    # '''\n    # 将结果写出\n    # '''\n    # db_utils.write_db_table(db_type=db_type, conn=conn, table_name=outputs['data_out'], data_frame=data_out,\n    #                         client=client, schema=inputs['schema'], hdfs_path=hdfsTmpPath)\n\n# </EXECTUSCRIPT>\n\n# import db_utils\n# db_type = 1\n# if db_type == 1:\n#     conn = db_utils.get_connection(db_type=db_type, host=\"192.168.198.108\", port=\"10000\", dbname=\"yq_yzx\", user=\"yangqing_yzx\", password=\"12qw#$ER\")\n#     client = db_utils.hdfs_client(hadoop_path=\"http://192.168.198.105:50070\")\n# else:\n#     client = None\n#     conn = db_utils.get_connection(db_type=db_type, host='192.168.198.172', port='15434', dbname='mlp', user='postgres', password='pgsql123456',schema='admin')\n# inputs1 = {'data_in':'\"admin\".\"10000690_0_1\"','schema':'admin'}\n# outputs1= {'data_out':'10000171_0_4'}\n# params1 = {'project_id': 'project_5',\n#            'treelabelcolumn': '3',\n#            'treeinputfeaturecolumn': '5',\n#            'treetrainingset': '0.3',\n#            'treetestset': '0.7',\n#            'treen_estimators': '20',\n#            'treemax_depth': '3',\n#            'treemin_samples_split': '2',\n#            'treecriterion': 'gini',\n#            'treeother_params': '{}',\n#            'pipeline_file': '/tmp/pyserve/pipeline/',\n#            \"diyf\": 'def test(x):\\n\\treturn x+6',\n#            \"redis\": \"{\\\"connectInfo\\\":[[\\\"192.168.198.220\\\",\\\"26380\\\"],[\\\"192.168.198.221\\\",\\\"26380\\\"],[\\\"192.168.198.222\\\",\\\"26380\\\"]],\\\"masterName\\\":\\\"mymaster\\\",\\\"password\\\":\\\"123456\\\",\\\"db\\\":0}\"\n#            }\n# execute(conn=conn,inputs=inputs1,outputs=outputs1,params=params1,reportFileName=\"comb.html\")"
                            },
                            "supportPmml": false,
                            "children": null,
                            "parameters": {
                                "treemin_samples_split": "3",
                                "treecriterion": "gini",
                                "treemax_depth": "3",
                                "treelabelcolumn": "",
                                "treeinputfeaturecolumn": "",
                                "treen_estimators": "100",
                                "treeother_params": ""
                            }
                        },
                        {
                            "id": 10057,
                            "createTime": "2022-05-24T09:09:19.608+0000",
                            "creatorId": 100,
                            "creatorName": "admin",
                            "name": "重要性汇总",
                            "targetAlgorithm": "com.yzx.mlp.scheduling.core.alog.unparallel.engine.pythonengine.PythonCommonAlgorithm",
                            "parentId": 10022,
                            "enabled": true,
                            "paralleled": false,
                            "component": true,
                            "allowViewSource": true,
                            "iconPath": "icontezhenggongcheng-01",
                            "minimumInput": 1,
                            "inBuilt": true,
                            "hasReport": true,
                            "description": "重要性汇总",
                            "tabs": [
                                {
                                    "id": 7524,
                                    "createTime": "2022-05-24T09:09:19.609+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "tabName": "字段设置",
                                    "elements": [
                                        {
                                            "id": 20553,
                                            "createTime": "2022-05-24T09:09:19.609+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "treeinputfeaturecolumn",
                                            "label": "输入特征列",
                                            "defaultValue": null,
                                            "value": null,
                                            "options": "",
                                            "rexp": "/^[0-9A-Za-z,\\-_]{1,10000}$/",
                                            "placeholder": "请输入特征所在列序号或者列名称",
                                            "toolTip": "表示需处理的特征所在列序号或者列名称，如“1-3,10,column1”,表示取特征在表中的1到3列，10列 和字段名称为column1的列，列序号从1开始计数，不包含序号列。\n",
                                            "sequence": 0,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        },
                                        {
                                            "id": 20554,
                                            "createTime": "2022-05-24T09:09:19.609+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "treelabelcolumn",
                                            "label": "标签列",
                                            "defaultValue": null,
                                            "value": null,
                                            "options": "",
                                            "rexp": "/^[0-9A-Za-z,\\-_]{1,10000}$/",
                                            "placeholder": "请输入标签所在列序号或者列名称",
                                            "toolTip": "标签列所在列序号或者列名称。",
                                            "sequence": 1,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        }
                                    ]
                                },
                                {
                                    "id": 7525,
                                    "createTime": "2022-05-24T09:09:19.609+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "tabName": "超参数设置",
                                    "elements": [
                                        {
                                            "id": 20555,
                                            "createTime": "2022-05-24T09:09:19.609+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "treen_estimators",
                                            "label": "n_estimators",
                                            "defaultValue": null,
                                            "value": "100",
                                            "options": "",
                                            "rexp": "/^[0-9]+$/",
                                            "placeholder": "",
                                            "toolTip": "基评估器的数量 取值范围正整数",
                                            "sequence": 0,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        },
                                        {
                                            "id": 20556,
                                            "createTime": "2022-05-24T09:09:19.609+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "treemax_depth",
                                            "label": "max_depth",
                                            "defaultValue": null,
                                            "value": "3",
                                            "options": "",
                                            "rexp": "/^[0-9]+$/",
                                            "placeholder": "",
                                            "toolTip": "决策树的最大深度 \n 取值范围:正整数常用[3,8]",
                                            "sequence": 1,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        },
                                        {
                                            "id": 20557,
                                            "createTime": "2022-05-24T09:09:19.609+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "treemin_samples_split",
                                            "label": "min_samples_split",
                                            "defaultValue": null,
                                            "value": "3",
                                            "options": "",
                                            "rexp": "/^[0-9]+$/",
                                            "placeholder": "",
                                            "toolTip": "节点再划分所需的最小样本数 \n 取值范围正整数",
                                            "sequence": 2,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        },
                                        {
                                            "id": 20558,
                                            "createTime": "2022-05-24T09:09:19.609+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "treecriterion",
                                            "label": "criterion",
                                            "defaultValue": null,
                                            "value": "gini",
                                            "options": "gini(基尼系数):gini;info Gain(信息增益):entropy",
                                            "rexp": "/\\S/",
                                            "placeholder": "",
                                            "toolTip": "选择基尼系数或者信息增益 \n 取值范围 gini或info gain",
                                            "sequence": 3,
                                            "elementType": 3,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        },
                                        {
                                            "id": 20559,
                                            "createTime": "2022-05-24T09:09:19.609+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "treeother_params",
                                            "label": "其他超参数设置",
                                            "defaultValue": null,
                                            "value": null,
                                            "options": "",
                                            "rexp": "/\\S/",
                                            "placeholder": "",
                                            "toolTip": "请输入配置的超参数。参数1=值1,参数2=值2",
                                            "sequence": 3,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": false
                                        }
                                    ]
                                }
                            ],
                            "inputs": [
                                {
                                    "id": 10398,
                                    "createTime": "2022-05-24T09:09:19.609+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "key": "data_in",
                                    "type": "INPUT",
                                    "cat": "DATA",
                                    "canPreview": true,
                                    "preViewMode": "ONLY100",
                                    "description": "输入",
                                    "model": false
                                }
                            ],
                            "outputs": [],
                            "updateTime": "2022-05-24T09:09:19.608+0000",
                            "sequence": 5,
                            "extra": {
                                "type": "NORMAL",
                                "value": null,
                                "mainClass": null,
                                "engine": "PYTHON"
                            },
                            "script": {
                                "MAIN": "# <ALOGCLASSNAME>\n# ImportanceSummary\n# </ALOGCLASSNAME>\n\n# <EXECTUSCRIPT>\ndef execute(conn, inputs, params, outputs, reportFileName):\n\n    '''\n    载入模块\n    '''\n    from sklearn.pipeline import Pipeline\n    import os\n    import pickle\n    import db_utils\n    import joblib\n    import sys\n    import json\n    import warnings\n    from common import get_db_column\n    from common import get_feature\n    from common import get_label\n    from SourceCodeImporter import SourceCodeImporter\n    from common import get_db_column_with_type\n    from common import keep_dot_after\n\n    warnings.filterwarnings(\"ignore\")\n    '''\n    载入redis连接信息\n    '''\n    redisParam = json.loads(params['redis'])\n    redisConn = db_utils.getRedisMasterConnection(redisParam['connectInfo'], redisParam['masterName'],\n                                                  redisParam['password'], redisParam['db'])\n    '''\n    远程模块载入\n    '''\n    name = \"ImportanceSummary\"\n    code = db_utils.redisReadHsetFile(redisConn, \"alogclass\", \"ImportanceSummary\")\n    sys.meta_path.append(SourceCodeImporter(code.decode(), name))\n    from ImportanceSummary import ImportanceSummary\n    # from pipeline.alogclass.ImportanceSummary import ImportanceSummary\n\n    '''\n    获取输入数据\n    '''\n    keep_dot_after(db_type, inputs)\n    data_in = db_utils.query(conn, 'select * from ' + inputs['data_in'], db_type)\n\n    data_in_shape = data_in.shape\n\n    '''\n    转换后的参数\n    '''\n    db_columns = get_db_column_with_type(db_type, inputs, conn)\n    label_column = get_label(db_columns, params['treelabelcolumn'])\n    columns_values = get_feature(db_columns, params['treeinputfeaturecolumn'])\n\n    '''\n    管道处理\n    '''\n    importanceSummary = ImportanceSummary(params, columns_values, label_column)\n    importanceSummary.fit()\n    # data_out = treeModelScore.transform(data_in)\n\n\n    data_report_out = importanceSummary.transform(data_in)\n\n    data_report_out.sort_values(\"IV\", ascending=False)\n\n    graph_dict = {\"x\":data_report_out['feature'].tolist(), \"y\": {\n        \"IV\": data_report_out['IV'].tolist(),\n        \"chi2_score\": data_report_out['chi2_score'].tolist(),\n        \"chi2_p_value\": data_report_out['chi2_p_value'].tolist(),\n        \"lasso\": data_report_out['lasso'].tolist(),\n        \"gini\": data_report_out['gini'].tolist(),\n        \"tree_score\": data_report_out['tree_score'].tolist()\n    }}\n    data_report_out_json = json.loads(data_report_out.to_json(orient=\"table\"))\n    data_report_out_json[\"graph\"] = graph_dict\n\n    redisParam = json.loads(params['redis'])\n    redisConn = db_utils.getRedisMasterConnection(redisParam['connectInfo'], redisParam['masterName'],\n                                                  redisParam['password'], redisParam['db'])\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"report_json_\" + reportFileName,\n                                json.dumps(data_report_out_json))\n\n    # '''\n    # 保存文件到redis\n    # '''\n    # pipeline_pkl_name = outputs['data_out'].split('_', 1)[0]\n    # joblib.dump(importanceSummary, params['pipeline_file']+\"pkl_\" + pipeline_pkl_name, compress=3)\n    # fileObject = pickle.dumps(joblib.load(params['pipeline_file']+\"pkl_\" + pipeline_pkl_name))\n    # os.remove(params['pipeline_file']+\"pkl_\" + pipeline_pkl_name)\n    # '''\n    # 保存pkl的二进制文件到redis中\n    # '''\n    # db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"pkl_\" + pipeline_pkl_name, fileObject)\n    # '''\n    # 保存模型pkl的参数到redis\n    # '''\n    # pkl_params = {}\n    # for i, v in data_in.dtypes.items():\n    #     pkl_params[str(i)]=str(v)\n    # db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"params_\" + pipeline_pkl_name, str(pkl_params))\n    # '''\n    # 构建pipeline\n    # '''\n    # pipe = Pipeline([\n    #     ('ImportanceSummary', importanceSummary)\n    # ])\n    # data_out = pipe.transform(data_in)\n    # '''\n    # 构建输出结果的shape\n    # '''\n    # db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"shape_\" + outputs['data_out'], str(data_out.shape[0]) + \",\" + str(data_out.shape[1]))\n    #\n    # change_shape = {\n    #     'data_in': {\n    #         'startAt': 1,\n    #         'endAt': data_in_shape[1]\n    #     },\n    #     'data_out': {\n    #         'startAt': 1,\n    #         'endAt': data_out.shape[1]\n    #     },\n    #     \"change\": {\n    #         'startAt': data_in_shape[1] + 1,\n    #         'endAt': data_out.shape[1]\n    #     }\n    # }\n    # db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"change_shape_\" + pipeline_pkl_name,json.dumps(change_shape))\n    #\n    # '''\n    # 将结果写出\n    # '''\n    # db_utils.write_db_table(db_type=db_type, conn=conn, table_name=outputs['data_out'], data_frame=data_out,\n    #                         client=client, schema=inputs['schema'], hdfs_path=hdfsTmpPath)\n\n# </EXECTUSCRIPT>\n\n# import db_utils\n# db_type = 1\n# if db_type == 1:\n#     conn = db_utils.get_connection(db_type=db_type, host=\"192.168.198.108\", port=\"10000\", dbname=\"yq_yzx\", user=\"yangqing_yzx\", password=\"12qw#$ER\")\n#     client = db_utils.hdfs_client(hadoop_path=\"http://192.168.198.105:50070\")\n# else:\n#     client = None\n#     conn = db_utils.get_connection(db_type=db_type, host='192.168.198.172', port='15434', dbname='mlp', user='postgres', password='pgsql123456',schema='admin')\n# inputs1 = {'data_in':'\"admin\".\"10000690_0_1\"','schema':'admin'}\n# outputs1= {'data_out':'10000171_0_4'}\n# params1 = {'project_id': 'project_5',\n#            'treelabelcolumn': '3',\n#            'treeinputfeaturecolumn': '5',\n#            'treetrainingset': '0.3',\n#            'treetestset': '0.7',\n#            'treen_estimators': '20',\n#            'treemax_depth': '3',\n#            'treemin_samples_split': '2',\n#            'treecriterion': 'gini',\n#            'treeother_params': '{}',\n#            'pipeline_file': '/tmp/pyserve/pipeline/',\n#            \"diyf\": 'def test(x):\\n\\treturn x+6',\n#            \"redis\": \"{\\\"connectInfo\\\":[[\\\"192.168.198.220\\\",\\\"26380\\\"],[\\\"192.168.198.221\\\",\\\"26380\\\"],[\\\"192.168.198.222\\\",\\\"26380\\\"]],\\\"masterName\\\":\\\"mymaster\\\",\\\"password\\\":\\\"123456\\\",\\\"db\\\":0}\"\n#            }\n# execute(conn=conn,inputs=inputs1,outputs=outputs1,params=params1,reportFileName=\"comb.html\")"
                            },
                            "supportPmml": false,
                            "children": null,
                            "parameters": {
                                "treemin_samples_split": "3",
                                "treecriterion": "gini",
                                "treemax_depth": "3",
                                "treelabelcolumn": "",
                                "treeinputfeaturecolumn": "",
                                "treen_estimators": "100",
                                "treeother_params": ""
                            }
                        }
                    ],
                    "parameters": {}
                }
            ],
            "parameters": {}
        },
        {
            "id": 10046,
            "createTime": "2022-05-24T09:09:20.179+0000",
            "creatorId": 100,
            "creatorName": "admin",
            "name": "机器学习",
            "targetAlgorithm": null,
            "parentId": 0,
            "enabled": true,
            "paralleled": false,
            "component": false,
            "allowViewSource": true,
            "iconPath": "icontezhenggongcheng-01",
            "minimumInput": 0,
            "inBuilt": true,
            "hasReport": false,
            "description": null,
            "tabs": [],
            "inputs": [],
            "outputs": [],
            "updateTime": "2022-05-24T09:09:20.179+0000",
            "sequence": 4,
            "extra": {
                "type": "NORMAL",
                "value": null,
                "mainClass": null,
                "engine": "PYTHON"
            },
            "script": {},
            "supportPmml": false,
            "children": [
                {
                    "id": 10047,
                    "createTime": "2022-05-24T09:09:20.482+0000",
                    "creatorId": 100,
                    "creatorName": "admin",
                    "name": "机器学习",
                    "targetAlgorithm": null,
                    "parentId": 10046,
                    "enabled": true,
                    "paralleled": false,
                    "component": false,
                    "allowViewSource": true,
                    "iconPath": "icontezhenggongcheng-01",
                    "minimumInput": 0,
                    "inBuilt": true,
                    "hasReport": false,
                    "description": null,
                    "tabs": [],
                    "inputs": [],
                    "outputs": [],
                    "updateTime": "2022-05-24T09:09:20.482+0000",
                    "sequence": 1,
                    "extra": {
                        "type": "NORMAL",
                        "value": null,
                        "mainClass": null,
                        "engine": "PYTHON"
                    },
                    "script": {},
                    "supportPmml": false,
                    "children": [
                        {
                            "id": 10048,
                            "createTime": "2022-05-24T09:09:20.581+0000",
                            "creatorId": 100,
                            "creatorName": "admin",
                            "name": "LR",
                            "targetAlgorithm": "com.yzx.mlp.scheduling.core.alog.unparallel.engine.pythonengine.PythonCommonAlgorithm",
                            "parentId": 10047,
                            "enabled": true,
                            "paralleled": false,
                            "component": true,
                            "allowViewSource": true,
                            "iconPath": "icontezhenggongcheng-01",
                            "minimumInput": 1,
                            "inBuilt": true,
                            "hasReport": true,
                            "description": "LR-超参数说明\npenalty：正则化参数系数\n1）降低模型的泛化错误率，避免模型过拟合\n    i.L1 正则化公式，直接在原来的损失函数基础上加上权重参数的绝对值\n    ii.L2 正则化公式，直接在原来的损失函数基础上加上权重参数的平方和\n2）默认值：L2\n3）取值范围：L1或L2\n\nc：正则化系数\n1）正则化强度的导数，必须是一个正数，值越大，正则化强度越大，即防止过拟合的程度更大。\n2）默认值：1.0\n3）取值范围：0.0~正无穷 浮点数",
                            "tabs": [
                                {
                                    "id": 7526,
                                    "createTime": "2022-05-24T09:09:20.583+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "tabName": "字段设置",
                                    "elements": [
                                        {
                                            "id": 20560,
                                            "createTime": "2022-05-24T09:09:20.583+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "lrinputfeaturecolumn",
                                            "label": "输入特征列",
                                            "defaultValue": null,
                                            "value": null,
                                            "options": "",
                                            "rexp": "/^[0-9A-Za-z,\\-_]{1,10000}$/",
                                            "placeholder": "请输入特征所在列序号或者列名称",
                                            "toolTip": "表示需处理的特征所在列序号或者列名称，如“1-3,10,column1”,表示取特征在表中的1到3列，10列 和字段名称为column1的列，列序号从1开始计数，不包含序号列。",
                                            "sequence": 0,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        },
                                        {
                                            "id": 20561,
                                            "createTime": "2022-05-24T09:09:20.583+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "lrlabelcolumn",
                                            "label": "标签列",
                                            "defaultValue": null,
                                            "value": null,
                                            "options": "",
                                            "rexp": "/^[0-9A-Za-z,\\-_]{1,10000}$/",
                                            "placeholder": "请输入标签所在列，如：1",
                                            "toolTip": "标签列所在的列号，从1开始计数，不包含序号列。",
                                            "sequence": 1,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        }
                                    ]
                                },
                                {
                                    "id": 7527,
                                    "createTime": "2022-05-24T09:09:20.583+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "tabName": "超参数设置",
                                    "elements": [
                                        {
                                            "id": 20562,
                                            "createTime": "2022-05-24T09:09:20.583+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "lrpenalty",
                                            "label": "penalty",
                                            "defaultValue": null,
                                            "value": "l2",
                                            "options": "L1:l1;L2:l2",
                                            "rexp": "/\\S/",
                                            "placeholder": "",
                                            "toolTip": "正则化参数系数 取值范围L1或L2",
                                            "sequence": 0,
                                            "elementType": 3,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        },
                                        {
                                            "id": 20563,
                                            "createTime": "2022-05-24T09:09:20.583+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "lrc",
                                            "label": "c",
                                            "defaultValue": null,
                                            "value": "1.0",
                                            "options": "",
                                            "rexp": "/^[0-9.]+$/",
                                            "placeholder": "",
                                            "toolTip": "正则化参数系数 取值范围0.0~正无穷 浮点数",
                                            "sequence": 1,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        },
                                        {
                                            "id": 20564,
                                            "createTime": "2022-05-24T09:09:20.583+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "other_params",
                                            "label": "其他超参数设置",
                                            "defaultValue": null,
                                            "value": null,
                                            "options": "",
                                            "rexp": "/\\S/",
                                            "placeholder": "",
                                            "toolTip": "请输入配置的超参数。参数1=值1;参数2=值2",
                                            "sequence": 2,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": false
                                        }
                                    ]
                                }
                            ],
                            "inputs": [
                                {
                                    "id": 10399,
                                    "createTime": "2022-05-24T09:09:20.583+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "key": "data_in",
                                    "type": "INPUT",
                                    "cat": "DATA",
                                    "canPreview": true,
                                    "preViewMode": "ONLY100",
                                    "description": "输入",
                                    "model": false
                                }
                            ],
                            "outputs": [
                                {
                                    "id": 10400,
                                    "createTime": "2022-05-24T09:09:20.583+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "key": "model",
                                    "type": "OUTPUT",
                                    "cat": "MODEL",
                                    "canPreview": false,
                                    "preViewMode": "ONLY100",
                                    "description": "模型",
                                    "access": "SAME",
                                    "columns": "[]",
                                    "model": true
                                }
                            ],
                            "updateTime": "2022-05-24T09:09:20.581+0000",
                            "sequence": 0,
                            "extra": {
                                "type": "NORMAL",
                                "value": null,
                                "mainClass": null,
                                "engine": "PYTHON"
                            },
                            "script": {
                                "MAIN": "# <ALOGCLASSNAME>\n# MLPR\n# </ALOGCLASSNAME>\n\n# <EXECTUSCRIPT>\ndef execute(conn, inputs, params, outputs, reportFileName):\n\n    '''\n    载入模块\n    '''\n    from sklearn.pipeline import Pipeline\n    import os\n    import pickle\n    import db_utils\n    import joblib\n    import sys\n    import json\n    import warnings\n    import pandas as pd\n    from SourceCodeImporter import SourceCodeImporter\n    from sklearn.model_selection import train_test_split\n    from sklearn2pmml import PMMLPipeline, sklearn2pmml\n    from common import get_db_column\n    from common import get_feature\n    from common import get_label\n    from common import str_to_dict\n    from common import get_alog_info\n    from report_utils import ALogReport\n    from common import get_db_column_with_type\n    from common import keep_dot_after\n    warnings.filterwarnings(\"ignore\")\n    '''\n    载入redis连接信息\n    '''\n    redisParam = json.loads(params['redis'])\n    redisConn = db_utils.getRedisMasterConnection(redisParam['connectInfo'], redisParam['masterName'],\n                                                  redisParam['password'], redisParam['db'])\n    '''\n    远程模块载入\n    '''\n    alog_names = get_alog_info(redisConn)\n    s = SourceCodeImporter()\n    for name in alog_names:\n        code = db_utils.redisReadHsetFile(redisConn, \"alogclass\", name)\n        s.add(name, code.decode())\n    sys.meta_path.append(s)\n    from MLPR import MLPR\n    '''\n    获取输入数据\n    '''\n    keep_dot_after(db_type, inputs)\n    data_in = db_utils.query(conn, 'select * from ' + inputs['data_in'], db_type)\n\n    data_in_shape = data_in.shape\n    '''\n    转换后的参数\n    '''\n    db_columns = get_db_column_with_type(db_type, inputs, conn)\n    columns_values = get_feature(db_columns, params['lrinputfeaturecolumn'])\n    label_column = get_label(db_columns, params['lrlabelcolumn'])\n    '''\n       存放临时超时参数\n       '''\n    params['other_params_dict'] = str_to_dict(params['other_params'])\n    '''\n    管道处理\n    '''\n    mlpr = MLPR(params, columns_values,label_column)\n    # x_train, x_test, y_train, y_test = train_test_split(data_in[columns_values],\n    #                                                     data_in[label_column],\n    #                                                     train_size=float(params['lrtrainingset']),\n    #                                                     test_size=float(params['lrtestset']))\n\n    mlpr.fit(data_in[columns_values], data_in[label_column])\n\n    '''\n    保存文件到redis\n    '''\n    pipeline_pkl_name = outputs['model'].split('_', 1)[0]\n    joblib.dump(mlpr.clf, params['pipeline_file']+\"pkl_\" + pipeline_pkl_name, compress=3)\n    fileObject = pickle.dumps(joblib.load(params['pipeline_file']+\"pkl_\" + pipeline_pkl_name))\n    os.remove(params['pipeline_file']+\"pkl_\" + pipeline_pkl_name)\n    '''\n    保存pkl的二进制文件到redis中\n    '''\n    import json\n    redisParam = json.loads(params['redis'])\n    redisConn = db_utils.getRedisMasterConnection(redisParam['connectInfo'], redisParam['masterName'],\n                                                  redisParam['password'], redisParam['db'])\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"pkl_\" + pipeline_pkl_name, fileObject)\n    '''\n    模型输出\n    '''\n    joblib.dump(mlpr, params['pipeline_file'] + \"model_\" + pipeline_pkl_name, compress=3)\n    fileObject = pickle.dumps(joblib.load(params['pipeline_file'] + \"model_\" + pipeline_pkl_name))\n    os.remove(params['pipeline_file'] + \"model_\" + pipeline_pkl_name)\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"model_\" + pipeline_pkl_name, fileObject)\n    '''\n    获取当前节点的前置节点\n    '''\n    pipeline_list = []\n    redisConn_slave = db_utils.getRedisSlaveConnection(redisParam['connectInfo'], redisParam['masterName'],\n                                                       redisParam['password'], redisParam['db'])\n    for pkl_file in json.loads(params['pipelines']):\n        pkl_obj = db_utils.redisReadHsetFile(redisConn_slave, params['project_id'], \"pkl_\" + str(pkl_file))\n        if pkl_obj == None:\n            continue\n        pipeline_list.append((str(pkl_file), pickle.loads(pkl_obj)))\n    pipeline_list.append(('classifier',mlpr))\n\n    '''\n    pipeline模型输出\n    '''\n    pipeline = Pipeline(pipeline_list)\n    joblib.dump(pipeline, params['pipeline_file'] + \"pipeline_\" + pipeline_pkl_name, compress=3)\n    fileObject = pickle.dumps(joblib.load(params['pipeline_file'] + \"pipeline_\" + pipeline_pkl_name))\n    os.remove(params['pipeline_file'] + \"pipeline_\" + pipeline_pkl_name)\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"pipeline_\" + pipeline_pkl_name, fileObject)\n\n    '''\n    模型文件导出\n    '''\n    try:\n        pipeline = PMMLPipeline([(\"classifier\", mlpr.clf)])\n        pipeline.fit(data_in[columns_values], data_in[label_column])\n        sklearn2pmml(pipeline, \"test_lr.pmml\", debug=False)\n        with open(\"test_lr.pmml\", \"r\") as f:\n            pmml_str = f.read()\n            db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"sp_model_pmml_\" + pipeline_pkl_name, pmml_str)\n        os.remove(\"test_lr.pmml\")\n    except Exception as e:\n        print(\"pmml模型导出失败:{}\\n\".format(e))\n\n\n    '''\n    保存模型pkl的参数到redis\n    '''\n    pkl_params = {}\n    for i, v in data_in.dtypes.items():\n        pkl_params[str(i)]=str(v)\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"params_\" + pipeline_pkl_name, str(pkl_params))\n    '''\n    报表输出\n    '''\n\n    model_params = {}\n    model_params['训练标签'] = ','.join(columns_values)\n    model_params['标记标签'] = label_column\n    model_params['惩罚项'] = params['lrpenalty']\n    model_params['罚项系数'] = params['lrc']\n    model_params['其他超参数'] = params['other_params']\n\n    report=ALogReport().report_train('LR 评估报告',model_params)\n\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"report_json_\" + reportFileName, json.dumps(report, ensure_ascii=False))\n\n    # '''\n    # 数据输出\n    # '''\n    # data_out=mlpr.transform(data_in)\n\n    # '''\n    # 构建输出结果的shape\n    # '''\n    # db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"shape_\" + outputs['data_out'], str(data_out.shape[0]) + \",\" + str(data_out.shape[1]))\n    #\n    # change_shape = {\n    #     'data_in': {\n    #         'startAt': 1,\n    #         'endAt': data_in_shape[1]\n    #     },\n    #     'data_out': {\n    #         'startAt': 1,\n    #         'endAt': data_out.shape[1]\n    #     },\n    #     \"change\": {\n    #         'startAt': data_in_shape[1] + 1,\n    #         'endAt': data_out.shape[1]\n    #     }\n    # }\n    # db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"change_shape_\" + pipeline_pkl_name,json.dumps(change_shape))\n    #\n    # '''\n    # 将结果写出\n    # '''\n    # db_utils.write_db_table(db_type=db_type, conn=conn, table_name=outputs['data_out'], data_frame=data_out,\n    #                         client=client, schema=inputs['schema'], hdfs_path=hdfsTmpPath)\n\n# </EXECTUSCRIPT>\n\n# import  db_utils\n# db_type = 1\n# if db_type == 1:\n#     conn = db_utils.get_connection(db_type=db_type, host=\"192.168.198.108\", port=\"10000\", dbname=\"yq_yzx\", user=\"yangqing_yzx\", password=\"12qw#$ER\")\n#     client = db_utils.hdfs_client(hadoop_path=\"http://192.168.198.105:50070\")\n# else:\n#     client = None\n#     conn = db_utils.get_connection(db_type=db_type, host='192.168.198.172', port='15434', dbname='mlp', user='postgres', password='pgsql123456',schema='admin')\n# inputs1 = {'data_in':'\"admin\".\"10001425_0_1\"','schema':'admin'}\n# outputs1= {'data_out':'10000398_0_2'}\n# params1 = {'project_id':'project_13','lrinputfeaturecolumn':'1-3','lrlabelcolumn':'4','lrtrainingset':'0.8','lrtestset':'0.2','lrpenalty':'l1','lrc':'0.5',\n# 'other_params': \"n_jobs=-1;max_iter=90\",\n#            'pipeline_file':'/tmp/pyserve/pipeline/'\n#     ,\"redis\":\"{\\\"connectInfo\\\":[[\\\"192.168.198.220\\\",\\\"26380\\\"],[\\\"192.168.198.221\\\",\\\"26380\\\"],[\\\"192.168.198.222\\\",\\\"26380\\\"]],\\\"masterName\\\":\\\"mymaster\\\",\\\"password\\\":\\\"123456\\\",\\\"db\\\":0}\"\n#     ,\"pipelines\":\"[10000426]\"}\n# execute(conn=conn,inputs=inputs1,outputs=outputs1,params=params1,reportFileName='1000000.html')\n"
                            },
                            "supportPmml": true,
                            "children": null,
                            "parameters": {
                                "lrinputfeaturecolumn": "",
                                "lrpenalty": "l2",
                                "other_params": "",
                                "lrc": "1.0",
                                "lrlabelcolumn": ""
                            }
                        },
                        {
                            "id": 10049,
                            "createTime": "2022-05-24T09:09:21.142+0000",
                            "creatorId": 100,
                            "creatorName": "admin",
                            "name": "RF",
                            "targetAlgorithm": "com.yzx.mlp.scheduling.core.alog.unparallel.engine.pythonengine.PythonCommonAlgorithm",
                            "parentId": 10047,
                            "enabled": true,
                            "paralleled": false,
                            "component": true,
                            "allowViewSource": true,
                            "iconPath": "icontezhenggongcheng-01",
                            "minimumInput": 1,
                            "inBuilt": true,
                            "hasReport": true,
                            "description": "RF-超参数说明\nn_estimators：基评估器的数量（弱学习器的数量）\n1）可理解为决策树的个数。\n2）一般来说n_estimators太小，容易欠拟合，n_estimators太大，又容易过拟合，一般选择一个适中的数值。\n3）在实际调参的过程中，我们常常将基评估器数量和步长一起考虑\n4）默认值：100\n5）取值范围：正整数\n\nmax_depth：决策树的最大深度\n1）具体指决策树走到最终结果过程中的节点个数。\n2）一般来说，数据少或者特征少的时候可以不管这个值。如果模型样本量多，特征也多的情况下，推荐限制这个最大深度。\n3）默认值：空值\n4）取值范围：正整数\n常用：[3,8]\n\nmin_samples_split：节点再划分所需最小样本数\n1）每个节点上使用的最小样本数。\n2）这个值限制了子树继续划分的条件，如果某节点的样本数少于min_samples_split，则不会继续再尝试选择最优特征来进行划分。\n3）默认值：2\n4）取值范围：正整数\n\ncriterion：选择基尼系数或信息增益\n1）决策树做节点划分时对特征的评价标准。\n2）基尼系数：gini；信息增益：info gain\n3）默认值：gini 基尼系数 \n4）取值范围：gini 或 info gain",
                            "tabs": [
                                {
                                    "id": 7528,
                                    "createTime": "2022-05-24T09:09:21.143+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "tabName": "字段设置",
                                    "elements": [
                                        {
                                            "id": 20565,
                                            "createTime": "2022-05-24T09:09:21.143+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "rfinputfeaturecolumn",
                                            "label": "输入特征列",
                                            "defaultValue": null,
                                            "value": null,
                                            "options": "",
                                            "rexp": "/^[0-9A-Za-z,\\-_]{1,10000}$/",
                                            "placeholder": "请输入特征所在列序号或者列名称",
                                            "toolTip": "表示需处理的特征所在列序号或者列名称，如“1-3,10,column1”,表示取特征在表中的1到3列，10列 和字段名称为column1的列，列序号从1开始计数，不包含序号列。\n",
                                            "sequence": 0,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        },
                                        {
                                            "id": 20566,
                                            "createTime": "2022-05-24T09:09:21.143+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "rflabelcolumn",
                                            "label": "标签列",
                                            "defaultValue": null,
                                            "value": null,
                                            "options": "",
                                            "rexp": "/^[0-9A-Za-z,\\-_]{1,10000}$/",
                                            "placeholder": "请输入标签所在列序号或者列名称",
                                            "toolTip": "标签列所在列序号或者列名称。",
                                            "sequence": 1,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        }
                                    ]
                                },
                                {
                                    "id": 7529,
                                    "createTime": "2022-05-24T09:09:21.143+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "tabName": "超参数设置",
                                    "elements": [
                                        {
                                            "id": 20567,
                                            "createTime": "2022-05-24T09:09:21.143+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "rfn_estimators",
                                            "label": "n_estimators",
                                            "defaultValue": null,
                                            "value": "100",
                                            "options": "",
                                            "rexp": "/^[0-9]+$/",
                                            "placeholder": "",
                                            "toolTip": "基评估器的数量 取值范围正整数",
                                            "sequence": 0,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        },
                                        {
                                            "id": 20568,
                                            "createTime": "2022-05-24T09:09:21.143+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "rfmax_depth",
                                            "label": "max_depth",
                                            "defaultValue": null,
                                            "value": "3",
                                            "options": "",
                                            "rexp": "/^[0-9]+$/",
                                            "placeholder": "",
                                            "toolTip": "决策树的最大深度 \n 取值范围:正整数常用[3,8]",
                                            "sequence": 1,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        },
                                        {
                                            "id": 20569,
                                            "createTime": "2022-05-24T09:09:21.143+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "rfmin_samples_split",
                                            "label": "min_samples_split",
                                            "defaultValue": null,
                                            "value": "3",
                                            "options": "",
                                            "rexp": "/^[0-9]+$/",
                                            "placeholder": "",
                                            "toolTip": "节点再划分所需的最小样本数 \n 取值范围正整数",
                                            "sequence": 2,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        },
                                        {
                                            "id": 20570,
                                            "createTime": "2022-05-24T09:09:21.143+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "rfcriterion",
                                            "label": "criterion",
                                            "defaultValue": null,
                                            "value": "gini",
                                            "options": "gini(基尼系数):gini;info Gain(信息增益):entropy",
                                            "rexp": "/\\S/",
                                            "placeholder": "",
                                            "toolTip": "选择基尼系数或者信息增益 \n 取值范围 gini或info gain",
                                            "sequence": 3,
                                            "elementType": 3,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        },
                                        {
                                            "id": 20571,
                                            "createTime": "2022-05-24T09:09:21.143+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "other_params",
                                            "label": "其他超参数设置",
                                            "defaultValue": null,
                                            "value": null,
                                            "options": "",
                                            "rexp": "/\\S/",
                                            "placeholder": "",
                                            "toolTip": "请输入配置的超参数。参数1=值1;参数2=值2",
                                            "sequence": 4,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": false
                                        }
                                    ]
                                }
                            ],
                            "inputs": [
                                {
                                    "id": 10401,
                                    "createTime": "2022-05-24T09:09:21.143+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "key": "data_in",
                                    "type": "INPUT",
                                    "cat": "DATA",
                                    "canPreview": true,
                                    "preViewMode": "ONLY100",
                                    "description": "输入",
                                    "model": false
                                }
                            ],
                            "outputs": [
                                {
                                    "id": 10402,
                                    "createTime": "2022-05-24T09:09:21.143+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "key": "model",
                                    "type": "OUTPUT",
                                    "cat": "MODEL",
                                    "canPreview": false,
                                    "preViewMode": "ONLY100",
                                    "description": "模型",
                                    "access": "SAME",
                                    "columns": "[]",
                                    "model": true
                                }
                            ],
                            "updateTime": "2022-05-24T09:09:21.142+0000",
                            "sequence": 1,
                            "extra": {
                                "type": "NORMAL",
                                "value": null,
                                "mainClass": null,
                                "engine": "PYTHON"
                            },
                            "script": {
                                "MAIN": "# <ALOGCLASSNAME>\n# RF\n# </ALOGCLASSNAME>\n\n# <EXECTUSCRIPT>\ndef execute(conn, inputs, params, outputs, reportFileName):\n\n    '''\n    载入模块\n    '''\n    from sklearn.pipeline import Pipeline\n    import os\n    import pickle\n    import db_utils\n    import joblib\n    import sys\n    import json\n    import warnings\n    import pandas as pd\n    from SourceCodeImporter import SourceCodeImporter\n    from sklearn.model_selection import train_test_split\n    from sklearn2pmml import PMMLPipeline, sklearn2pmml\n    from report_utils import ALogReport\n    from common import get_db_column\n    from common import get_feature\n    from common import get_label\n    from common import str_to_dict\n    from common import get_alog_info\n    from common import get_db_column_with_type\n    from common import keep_dot_after\n    warnings.filterwarnings(\"ignore\")\n    '''\n    载入redis连接信息\n    '''\n    redisParam = json.loads(params['redis'])\n    redisConn = db_utils.getRedisMasterConnection(redisParam['connectInfo'], redisParam['masterName'],\n                                                  redisParam['password'], redisParam['db'])\n    '''\n    远程模块载入\n    '''\n    alog_names = get_alog_info(redisConn)\n    s = SourceCodeImporter()\n    for name in alog_names:\n        code = db_utils.redisReadHsetFile(redisConn, \"alogclass\", name)\n        s.add(name, code.decode())\n    sys.meta_path.append(s)\n    from RF import RF\n    '''\n    获取输入数据\n    '''\n    keep_dot_after(db_type, inputs)\n    data_in = db_utils.query(conn, 'select * from ' + inputs['data_in'], db_type)\n\n    data_in_shape = data_in.shape\n    '''\n    转换后的参数\n    '''\n    db_columns = get_db_column_with_type(db_type, inputs, conn)\n    columns_values = get_feature(db_columns, params['rfinputfeaturecolumn'])\n    label_column = get_label(db_columns, params['rflabelcolumn'])\n    '''\n       存放临时超时参数\n       '''\n    params['other_params_dict'] = str_to_dict(params['other_params'])\n    '''\n    管道处理RF\n    '''\n    rf = RF(params, columns_values, label_column)\n    # x_train, x_test, y_train, y_test = train_test_split(data_in[columns_values], data_in[label_column],\n    #                                                     train_size=float(params['rftrainingset']),\n    #                                                     test_size=float(params['rftestset']))\n    rf.fit(data_in[columns_values], data_in[label_column])\n    # y_predict = pd.DataFrame(rf.clf.predict(x_test), columns=['y_predict'])\n\n    '''\n    保存文件到redis\n    '''\n    pipeline_pkl_name = outputs['model'].split('_', 1)[0]\n    joblib.dump(rf, params['pipeline_file'] + \"pkl_\" + pipeline_pkl_name, compress=3)\n    fileObject = pickle.dumps(joblib.load(params['pipeline_file'] + \"pkl_\" + pipeline_pkl_name))\n    os.remove(params['pipeline_file'] + \"pkl_\" + pipeline_pkl_name)\n    '''\n    保存pkl的二进制文件到redis中\n    '''\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"pkl_\" + pipeline_pkl_name, fileObject)\n    '''\n    模型输出\n    '''\n    joblib.dump(rf, params['pipeline_file'] + \"model_\" + pipeline_pkl_name, compress=3)\n    fileObject = pickle.dumps(joblib.load(params['pipeline_file'] + \"model_\" + pipeline_pkl_name))\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"model_\" + pipeline_pkl_name, fileObject)\n    os.remove(params['pipeline_file'] + \"model_\" + pipeline_pkl_name)\n    '''\n    获取当前节点的前置节点\n    '''\n    pipeline_list = []\n    redisConn_slave = db_utils.getRedisSlaveConnection(redisParam['connectInfo'], redisParam['masterName'],\n                                                       redisParam['password'], redisParam['db'])\n    for pkl_file in json.loads(params['pipelines']):\n        pkl_obj = db_utils.redisReadHsetFile(redisConn_slave, params['project_id'], \"pkl_\" + str(pkl_file))\n        if pkl_obj == None:\n            continue\n        pipeline_list.append((str(pkl_file), pickle.loads(pkl_obj)))\n    pipeline_list.append(('classifier', rf))\n    '''\n    pipeline模型输出\n    '''\n    pipeline = Pipeline(pipeline_list)\n    joblib.dump(pipeline, params['pipeline_file'] + \"pipeline_\" + pipeline_pkl_name, compress=3)\n    fileObject = pickle.dumps(joblib.load(params['pipeline_file'] + \"pipeline_\" + pipeline_pkl_name))\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"pipeline_\" + pipeline_pkl_name, fileObject)\n    os.remove(params['pipeline_file'] + \"pipeline_\" + pipeline_pkl_name)\n\n    '''\n    模型文件导出\n    '''\n    try:\n        pipeline = PMMLPipeline([(\"classifier\", rf.clf)])\n        pipeline.fit(data_in[columns_values], data_in[label_column])\n        sklearn2pmml(pipeline, \"test_rf.pmml\", debug=False)\n        with open(\"test_rf.pmml\", \"r\") as f:\n            pmml_str = f.read()\n            db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"sp_model_pmml_\" + pipeline_pkl_name, pmml_str)\n        os.remove(\"test_rf.pmml\")\n    except Exception as e:\n        print(\"pmml模型导出失败:{}\\n\".format(e))\n\n    '''\n    保存模型pkl的参数到redis\n    '''\n    pkl_params = {}\n    for i, v in data_in.dtypes.items():\n        pkl_params[str(i)] = str(v)\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"params_\" + pipeline_pkl_name, str(pkl_params))\n    '''\n    报表输出\n    '''\n    model_params = {}\n    model_params['训练标签'] = ','.join(columns_values)\n    model_params['标记标签'] = label_column\n    model_params['树的数目'] = params['rfn_estimators']\n    model_params['衡量分裂质量的性能'] = params['rfcriterion']\n    model_params['树的最大深度'] = params['rfmax_depth']\n    model_params['最小分割'] = params['rfmin_samples_split']\n    # y_test = y_test.astype(str)\n\n    report = ALogReport().report_train('RF 评估报告', model_params, rf.df_importances, rf.importances_columns)\n\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"report_json_\" + reportFileName, json.dumps(report, ensure_ascii=False))\n\n    # '''\n    # 数据输出\n    # '''\n    # data_out = rf.transform(data_in)\n    # '''\n    # 构建输出结果的shape\n    # '''\n    # db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"shape_\" + outputs['data_out'],\n    #                             str(data_out.shape[0]) + \",\" + str(data_out.shape[1]))\n    #\n    # change_shape = {\n    #     'data_in': {\n    #         'startAt': 1,\n    #         'endAt': data_in_shape[1]\n    #     },\n    #     'data_out': {\n    #         'startAt': 1,\n    #         'endAt': data_out.shape[1]\n    #     },\n    #     \"change\": {\n    #         'startAt': data_in_shape[1] + 1,\n    #         'endAt': data_out.shape[1]\n    #     }\n    # }\n    # db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"change_shape_\" + pipeline_pkl_name,json.dumps(change_shape))\n    #\n    # '''\n    # 将结果写出\n    # '''\n    # db_utils.write_db_table(db_type=db_type, conn=conn, table_name=outputs['data_out'], data_frame=data_out,\n    #                         client=client, schema=inputs['schema'], hdfs_path=hdfsTmpPath)\n\n# </EXECTUSCRIPT>\n\n#\n# import  db_utils\n# db_type = 1\n# if db_type == 1:\n#     conn = db_utils.get_connection(db_type=db_type, host=\"192.168.198.108\", port=\"10000\", dbname=\"yq_yzx\", user=\"yangqing_yzx\", password=\"12qw#$ER\")\n#     client = db_utils.hdfs_client(hadoop_path=\"http://192.168.198.105:50070\")\n# else:\n#     client = None\n#     conn = db_utils.get_connection(db_type=db_type, host='192.168.198.172', port='15434', dbname='mlp', user='postgres', password='pgsql123456',schema='admin')\n# inputs = {'data_in':'\"admin\".\"10001425_0_1\"','schema':'admin'}\n# outputs= {'data_out':'10000399_0_2'}\n# params = {'project_id':'project_15','rfinputfeaturecolumn':'1-3','rflabelcolumn':'4','rftrainingset':'0.4','rftestset':'0.6','rfn_estimators':'10','rfmax_depth':'2',\"rfmin_samples_split\":\"4\",\"rfcriterion\":\"gini\"\n#     ,'other_params':'','pipeline_file': '/tmp/pyserve/pipeline/'\n#     ,\"redis\": \"{\\\"connectInfo\\\":[[\\\"192.168.198.220\\\",\\\"26380\\\"],[\\\"192.168.198.221\\\",\\\"26380\\\"],[\\\"192.168.198.222\\\",\\\"26380\\\"]],\\\"masterName\\\":\\\"mymaster\\\",\\\"password\\\":\\\"123456\\\",\\\"db\\\":0}\"\n#     ,\"pipelines\": \"[10000426]\"\n#           }\n# execute(conn=conn,inputs=inputs,outputs=outputs,params=params,reportFileName='1000002.html')"
                            },
                            "supportPmml": true,
                            "children": null,
                            "parameters": {
                                "rfcriterion": "gini",
                                "rfmin_samples_split": "3",
                                "other_params": "",
                                "rfinputfeaturecolumn": "",
                                "rfmax_depth": "3",
                                "rflabelcolumn": "",
                                "rfn_estimators": "100"
                            }
                        },
                        {
                            "id": 10051,
                            "createTime": "2022-05-24T09:09:22.570+0000",
                            "creatorId": 100,
                            "creatorName": "admin",
                            "name": "XGBOOST",
                            "targetAlgorithm": "com.yzx.mlp.scheduling.core.alog.unparallel.engine.pythonengine.PythonCommonAlgorithm",
                            "parentId": 10047,
                            "enabled": true,
                            "paralleled": false,
                            "component": true,
                            "allowViewSource": true,
                            "iconPath": "icontezhenggongcheng-01",
                            "minimumInput": 1,
                            "inBuilt": true,
                            "hasReport": true,
                            "description": "模型参数    \n  n_estimatores\n    含义：总共迭代的次数，即决策树的个数\n  early_stopping_rounds\n    含义：在验证集上，当连续n次迭代，分数没有提高后，提前终止训练。\n    调参：防止overfitting。\n  max_depth\n    含义：树的深度，默认值为6，典型值3-10。\n    调参：值越大，越容易过拟合；值越小，越容易欠拟合。\n  min_child_weight\n    含义：默认值为1,。\n    调参：值越大，越容易欠拟合；值越小，越容易过拟合（值较大时，避免模型学习到局部的特殊样本）。\n  subsample\n    含义：训练每棵树时，使用的数据占全部训练集的比例。默认值为1，典型值为0.5-1。\n    调参：防止overfitting。\n  colsample_bytree\n    含义：训练每棵树时，使用的特征占全部特征的比例。默认值为1，典型值为0.5-1。\n    调参：防止overfitting。    \n学习任务参数    \n  learning_rate\n    含义：学习率，控制每次迭代更新权重时的步长，默认0.3。\n    调参：值越小，训练越慢。\n    典型值为0.01-0.2。\n  objective 目标函数\n    回归任务\n        reg:linear (默认)\n        reg:logistic\n    二分类\n        binary:logistic     概率 \n        binary：logitraw   类别\n    多分类\n        multi：softmax  num_class=n   返回类别\n        multi：softprob   num_class=n  返回概率\n    rank:pairwise\n  eval_metric\n    回归任务(默认rmse)\n        rmse--均方根误差\n        mae--平均绝对误差\n    分类任务(默认error)\n        auc--roc曲线下面积\n        error--错误率（二分类）\n        merror--错误率（多分类）\n        logloss--负对数似然函数（二分类）\n        mlogloss--负对数似然函数（多分类）\n  gamma\n    惩罚项系数，指定节点分裂所需的最小损失函数下降值。",
                            "tabs": [
                                {
                                    "id": 7532,
                                    "createTime": "2022-05-24T09:09:22.571+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "tabName": "字段设置",
                                    "elements": [
                                        {
                                            "id": 20580,
                                            "createTime": "2022-05-24T09:09:22.571+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "xgb_inputfeaturecolumn",
                                            "label": "输入特征列",
                                            "defaultValue": null,
                                            "value": null,
                                            "options": "",
                                            "rexp": "/^[0-9A-Za-z,\\-_]{1,10000}$/",
                                            "placeholder": "请输入特征所在列序号或者列名称",
                                            "toolTip": "表示需处理的特征所在列序号或者列名称，如“1-3,10,column1”,表示取特征在表中的1到3列，10列 和字段名称为column1的列，列序号从1开始计数，不包含序号列。",
                                            "sequence": 0,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        },
                                        {
                                            "id": 20581,
                                            "createTime": "2022-05-24T09:09:22.571+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "xgb_labelcolumn",
                                            "label": "标签列",
                                            "defaultValue": null,
                                            "value": null,
                                            "options": "",
                                            "rexp": "/^[0-9A-Za-z,\\-_]{1,10000}$/",
                                            "placeholder": "请输入标签所在列序号或者列名称，如：1",
                                            "toolTip": "标签列所在的所在列序号或者列名称，如“1-3,10,column1”,表示取特征在表中的1到3列，10列 和字段名称为column1的列，列序号从1开始计数，不包含序号列。",
                                            "sequence": 1,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        }
                                    ]
                                },
                                {
                                    "id": 7533,
                                    "createTime": "2022-05-24T09:09:22.571+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "tabName": "超参数设置",
                                    "elements": [
                                        {
                                            "id": 20582,
                                            "createTime": "2022-05-24T09:09:22.571+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "xgb_subsample",
                                            "label": "subsample",
                                            "defaultValue": null,
                                            "value": "1.0",
                                            "options": "",
                                            "rexp": "/^0\\.\\d*[1-9]\\d*$|^[1-9]\\.\\d*[1-9]\\d*e-[1-9]+$|^1\\.[0]*$/",
                                            "placeholder": "",
                                            "toolTip": "采样比例\n取值范围：（0,1]",
                                            "sequence": 0,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        },
                                        {
                                            "id": 20583,
                                            "createTime": "2022-05-24T09:09:22.571+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "xgb_learning_rate",
                                            "label": "learning_rate",
                                            "defaultValue": null,
                                            "value": "0.1",
                                            "options": "",
                                            "rexp": "/^0\\.\\d*[1-9]\\d*$|^[1-9]\\.\\d*[1-9]\\d*e-[1-9]+$|^1\\.[0]*$/",
                                            "placeholder": "",
                                            "toolTip": "步长\n取值范围：（0,1]",
                                            "sequence": 1,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        },
                                        {
                                            "id": 20584,
                                            "createTime": "2022-05-24T09:09:22.571+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "xgb_n_estimators",
                                            "label": "n_estimators",
                                            "defaultValue": null,
                                            "value": "100",
                                            "options": "",
                                            "rexp": "/^[0-9]+$/",
                                            "placeholder": "",
                                            "toolTip": "最大的弱学习器数量\n取值范围：正整数",
                                            "sequence": 2,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        },
                                        {
                                            "id": 20585,
                                            "createTime": "2022-05-24T09:09:22.571+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "xgb_max_depth",
                                            "label": "max_depth",
                                            "defaultValue": null,
                                            "value": "3",
                                            "options": "",
                                            "rexp": "/^[3-8]{1}$/",
                                            "placeholder": "",
                                            "toolTip": "决策树的最大深度\n取值范围：正整数常用 [3,8]",
                                            "sequence": 3,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        },
                                        {
                                            "id": 20586,
                                            "createTime": "2022-05-24T09:09:22.571+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "xgb_min_child_weight",
                                            "label": "min_child_weight",
                                            "defaultValue": null,
                                            "value": "3",
                                            "options": "",
                                            "rexp": "/\\S/",
                                            "placeholder": "",
                                            "toolTip": "最小叶子节点样本权重和\n取值范围：浮点类型",
                                            "sequence": 4,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        },
                                        {
                                            "id": 20587,
                                            "createTime": "2022-05-24T09:09:22.571+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "xgb_objective",
                                            "label": "objective",
                                            "defaultValue": "reg-linear",
                                            "value": "reg-linear",
                                            "options": "reg-linear:reg-linear;reg-logistic:reg-logistic;binary-logistic:binary-logistic;binary-logitraw:binary-logitraw;multi-softmax:multi-softmax;multi-softprob:multi-softprob;rank-pairwise:rank-pairwise",
                                            "rexp": "/\\S/",
                                            "placeholder": "",
                                            "toolTip": "目标函数",
                                            "sequence": 6,
                                            "elementType": 3,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        },
                                        {
                                            "id": 20588,
                                            "createTime": "2022-05-24T09:09:22.571+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "xgb_gamma",
                                            "label": "gamma",
                                            "defaultValue": "",
                                            "value": "1",
                                            "options": "",
                                            "rexp": "/^[0-9.]+$/",
                                            "placeholder": "惩罚项系数",
                                            "toolTip": "惩罚项系数，指定节点分裂所需的最小损失函数下降值。",
                                            "sequence": 8,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": false
                                        },
                                        {
                                            "id": 20589,
                                            "createTime": "2022-05-24T09:09:22.571+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "xgb_booster",
                                            "label": "booster",
                                            "defaultValue": "gbtree",
                                            "value": "gbtree",
                                            "options": "gbtree:gbtree;gbliner:gbliner",
                                            "rexp": "/\\S/",
                                            "placeholder": "",
                                            "toolTip": " booster\n    gbtree 树模型做为基分类器（默认）\n    gbliner 线性模型做为基分类器",
                                            "sequence": 8,
                                            "elementType": 3,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        },
                                        {
                                            "id": 20590,
                                            "createTime": "2022-05-24T09:09:22.571+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "xgb_colsample_bytree",
                                            "label": "colsample_bytree",
                                            "defaultValue": null,
                                            "value": "1",
                                            "options": "",
                                            "rexp": "/(^0\\.\\d*[1-9]\\d*$|^[1-9]\\.\\d*[1-9]\\d*e-[1-9]+$)|(^1[.]{0,1}[0]*$)/",
                                            "placeholder": "",
                                            "toolTip": "训练每棵树时，使用的特征占全部特征的比例。默认值为1，典型值为0.5-1。",
                                            "sequence": 12,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        },
                                        {
                                            "id": 20591,
                                            "createTime": "2022-05-24T09:09:22.571+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "other_params",
                                            "label": "其他超参数设置",
                                            "defaultValue": null,
                                            "value": null,
                                            "options": "",
                                            "rexp": "/\\S/",
                                            "placeholder": "",
                                            "toolTip": "请输入配置的超参数。参数1=值1;参数2=值2",
                                            "sequence": 13,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": false
                                        }
                                    ]
                                }
                            ],
                            "inputs": [
                                {
                                    "id": 10405,
                                    "createTime": "2022-05-24T09:09:22.571+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "key": "data_in",
                                    "type": "INPUT",
                                    "cat": "DATA",
                                    "canPreview": true,
                                    "preViewMode": "ONLY100",
                                    "description": "输入",
                                    "model": false
                                }
                            ],
                            "outputs": [
                                {
                                    "id": 10406,
                                    "createTime": "2022-05-24T09:09:22.571+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "key": "model",
                                    "type": "OUTPUT",
                                    "cat": "MODEL",
                                    "canPreview": false,
                                    "preViewMode": "ONLY100",
                                    "description": "模型",
                                    "access": "SAME",
                                    "columns": "[]",
                                    "model": true
                                }
                            ],
                            "updateTime": "2022-05-24T09:09:22.570+0000",
                            "sequence": 2,
                            "extra": {
                                "type": "NORMAL",
                                "value": null,
                                "mainClass": null,
                                "engine": "PYTHON"
                            },
                            "script": {
                                "MAIN": "# <ALOGCLASSNAME>\n# XGBOOST\n# </ALOGCLASSNAME>\n\n# <EXECTUSCRIPT>\ndef execute(conn, inputs, params, outputs, reportFileName):\n    '''\n    载入模块\n    '''\n    from sklearn.pipeline import Pipeline\n    import os\n    import pickle\n    import db_utils\n    import joblib\n    import sys\n    import json\n    import warnings\n    import pandas as pd\n    from SourceCodeImporter import SourceCodeImporter\n    from sklearn.model_selection import train_test_split\n    from sklearn2pmml import PMMLPipeline, sklearn2pmml\n    from report_utils import ALogReport\n    from common import get_db_column\n    from common import get_feature\n    from common import get_label\n    from common import str_to_dict\n    from common import get_alog_info\n    from common import get_db_column_with_type\n    from common import keep_dot_after\n    warnings.filterwarnings(\"ignore\")\n    '''\n    载入redis连接信息\n    '''\n    redisParam = json.loads(params['redis'])\n    redisConn = db_utils.getRedisMasterConnection(redisParam['connectInfo'], redisParam['masterName'],\n                                                  redisParam['password'], redisParam['db'])\n    '''\n    远程模块载入\n    '''\n    alog_names = get_alog_info(redisConn)\n    s = SourceCodeImporter()\n    for name in alog_names:\n        code = db_utils.redisReadHsetFile(redisConn, \"alogclass\", name)\n        s.add(name, code.decode())\n    sys.meta_path.append(s)\n    from XGBOOST import XGBOOST\n    '''\n    获取输入数据\n    '''\n    keep_dot_after(db_type, inputs)\n    data_in = db_utils.query(conn, 'select * from ' + inputs['data_in'], db_type)\n\n    data_in_shape = data_in.shape\n    '''\n    转换后的参数\n    '''\n    db_columns = get_db_column_with_type(db_type, inputs, conn)\n    columns_values = get_feature(db_columns, params['xgb_inputfeaturecolumn'])\n    label_column = get_label(db_columns, params['xgb_labelcolumn'])\n    '''\n       存放临时超时参数\n       '''\n    params['other_params_dict'] = str_to_dict(params['other_params'])\n    '''\n    管道处理XGBOOST\n    '''\n    xgboost = XGBOOST(params, columns_values, label_column)\n    # x_train, x_test, y_train, y_test = train_test_split(data_in[columns_values], data_in[label_column],\n    #                                                     train_size=float(params['xgb_trainingset']),\n    #                                                     test_size=float(params['xgb_testset']))\n    xgboost.fit(data_in[columns_values], data_in[label_column])\n    # y_predict = pd.DataFrame(xgboost.clf.predict(x_test), columns=['y_predict'])\n\n    '''\n    保存文件到redis\n    '''\n    pipeline_pkl_name = outputs['model'].split('_', 1)[0]\n    joblib.dump(xgboost, params['pipeline_file'] + \"pkl_\" + pipeline_pkl_name, compress=3)\n    fileObject = pickle.dumps(joblib.load(params['pipeline_file'] + \"pkl_\" + pipeline_pkl_name))\n    os.remove(params['pipeline_file'] + \"pkl_\" + pipeline_pkl_name)\n    '''\n    保存pkl的二进制文件到redis中\n    '''\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"pkl_\" + pipeline_pkl_name, fileObject)\n    '''\n    模型输出\n    '''\n    joblib.dump(xgboost, params['pipeline_file'] + \"model_\" + pipeline_pkl_name, compress=3)\n    fileObject = pickle.dumps(joblib.load(params['pipeline_file'] + \"model_\" + pipeline_pkl_name))\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"model_\" + pipeline_pkl_name, fileObject)\n    os.remove(params['pipeline_file'] + \"model_\" + pipeline_pkl_name)\n    '''\n    获取当前节点的前置节点\n    '''\n    pipeline_list = []\n    redisConn_slave = db_utils.getRedisSlaveConnection(redisParam['connectInfo'], redisParam['masterName'],\n                                                       redisParam['password'], redisParam['db'])\n    for pkl_file in json.loads(params['pipelines']):\n        pkl_obj = db_utils.redisReadHsetFile(redisConn_slave, params['project_id'], \"pkl_\" + str(pkl_file))\n        if pkl_obj == None:\n            continue\n        pipeline_list.append((str(pkl_file), pickle.loads(pkl_obj)))\n    pipeline_list.append(('classifier', xgboost))\n    '''\n    pipeline模型输出\n    '''\n    pipeline = Pipeline(pipeline_list)\n    joblib.dump(pipeline, params['pipeline_file'] + \"pipeline_\" + pipeline_pkl_name, compress=3)\n    fileObject = pickle.dumps(joblib.load(params['pipeline_file'] + \"pipeline_\" + pipeline_pkl_name))\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"pipeline_\" + pipeline_pkl_name, fileObject)\n    os.remove(params['pipeline_file'] + \"pipeline_\" + pipeline_pkl_name)\n\n    '''\n    模型文件导出\n    '''\n    try:\n        pipeline = PMMLPipeline([(\"classifier\", xgboost.clf)])\n        fit_params = {\n            # \"classifier__eval_set\": [(x_test, y_test)],\n            # \"classifier__early_stopping_rounds\": int(params['xgb_early_stopping_rounds']) if 'xgb_early_stopping_rounds' in params else None,\n            # \"classifier__eval_metric\": params['eval_metric'] if 'eval_metric' in params else None\n        }\n        pipeline.fit(data_in[columns_values], data_in[label_column],**fit_params)\n        sklearn2pmml(pipeline, \"test_xgboost.pmml\", debug=False)\n        with open(\"test_xgboost.pmml\", \"r\") as f:\n            pmml_str = f.read()\n            db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"sp_model_pmml_\" + pipeline_pkl_name, pmml_str)\n        os.remove(\"test_xgboost.pmml\")\n    except Exception as e:\n        print(\"pmml模型导出失败:{}\\n\".format(e))\n\n    '''\n    保存模型pkl的参数到redis\n    '''\n    pkl_params = {}\n    for i, v in data_in.dtypes.items():\n        pkl_params[str(i)]=str(v)\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"params_\" + pipeline_pkl_name, str(pkl_params))\n    '''\n    报表输出\n    '''\n    model_params = {}\n    model_params['训练标签'] = ','.join(columns_values)\n    model_params['标记标签'] = label_column\n    # model_params['训练比例'] = params['xgb_trainingset']\n    # model_params['验证比例'] = params['xgb_testset']\n    model_params['基分类器(booster)'] = params['xgb_booster']\n    model_params['树的数目(n_estimators)'] = params['xgb_n_estimators']\n    model_params['树的最大深度(max_depth)'] = params['xgb_max_depth']\n    model_params['学习率(learning_rate)'] = params['xgb_learning_rate']\n    model_params['惩罚项系数(gamma)'] = params['xgb_gamma']\n    model_params['训练树时特征比例(colsample_bytree)'] = params['xgb_colsample_bytree']\n    model_params['训练树时数据比例(subsample)'] = params['xgb_subsample']\n    # model_params['提前终止训练次数(early_stopping_rounds)'] = params['xgb_early_stopping_rounds']\n    model_params['决定最小叶子节点样本权重和(min_child_weight)'] = params['xgb_min_child_weight']\n    model_params['目标函数(objective)'] = params['xgb_objective']\n    # model_params['评价函数(eval_metric)'] = params['xgb_eval_metric']\n    model_params['其他超参数'] = params['other_params']\n\n    # y_test = y_test.astype(str)\n\n    report = ALogReport().report_train('XGBOOST 评估报告', model_params, xgboost.df_importances, xgboost.importances_columns)\n\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"report_json_\" + reportFileName, json.dumps(report, ensure_ascii=False))\n\n    # '''\n    # 数据输出\n    # '''\n    # data_out = xgboost.transform(data_in)\n    # '''\n    # 构建输出结果的shape\n    # '''\n    # db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"shape_\" + outputs['data_out'], str(data_out.shape[0]) + \",\" + str(data_out.shape[1]))\n    #\n    # change_shape = {\n    #     'data_in': {\n    #         'startAt': 1,\n    #         'endAt': data_in_shape[1]\n    #     },\n    #     'data_out': {\n    #         'startAt': 1,\n    #         'endAt': data_out.shape[1]\n    #     },\n    #     \"change\": {\n    #         'startAt': data_in_shape[1] + 1,\n    #         'endAt': data_out.shape[1]\n    #     }\n    # }\n    # db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"change_shape_\" + pipeline_pkl_name,json.dumps(change_shape))\n    #\n    # '''\n    # 将结果写出\n    # '''\n    # # db_utils.dbWriteTable(conn, outputs['data_out'], data_out, inputs['schema'])\n    # db_utils.write_db_table(db_type=db_type, conn=conn, table_name=outputs['data_out'], data_frame=data_out, client=client, schema=inputs['schema'], hdfs_path=hdfsTmpPath)\n\n# </EXECTUSCRIPT>\n\n\n# import  db_utils\n# db_type = 1\n# if db_type == 1:\n#     conn = db_utils.get_connection(db_type=db_type, host=\"192.168.198.108\", port=\"10000\", dbname=\"yq_yzx\", user=\"yangqing_yzx\", password=\"12qw#$ER\")\n#     client = db_utils.hdfs_client(hadoop_path=\"http://192.168.198.105:50070\")\n# else:\n#     client = None\n#     conn = db_utils.get_connection(db_type=db_type, host='192.168.198.172', port='15434', dbname='mlp', user='postgres', password='pgsql123456',schema='admin')\n# # inputs = {'data_in':'\"admin\".\"10001425_0_1\"','schema':'admin'}\n# inputs = {'data_in': '10001425_0_1','schema':'admin'}\n# outputs= {'data_out':'10000399_0_2'}\n# params = {'project_id':'project_22',\n#           'xgb_inputfeaturecolumn':'1-3','xgb_labelcolumn':'4','xgb_trainingset':'0.4','xgb_testset':'0.6',\n#           'xgb_n_estimators':'10','xgb_max_depth':'6',\"xgb_scale_pos_weight\":\"1\",\"xgb_booster\":\"gbtree\",\n#           \"xgb_early_stopping_rounds\":\"7\",\"xgb_min_child_weight\":\"1\",\"xgb_subsample\":\"0.7\",\"xgb_colsample_bytree\":\"1\",\n#           \"xgb_learning_rate\":\"0.3\",\"xgb_objective\":\"binary:logistic\",\"xgb_eval_metric\":\"mlogloss\",\"xgb_gamma\":\"1\",\n#           'other_params': \"n_jobs=-1\",\n#     'pipeline_file': '/tmp/pyserve/pipeline/'\n#     ,\"redis\": \"{\\\"connectInfo\\\":[[\\\"192.168.198.220\\\",\\\"26380\\\"],[\\\"192.168.198.221\\\",\\\"26380\\\"],[\\\"192.168.198.222\\\",\\\"26380\\\"]],\\\"masterName\\\":\\\"mymaster\\\",\\\"password\\\":\\\"123456\\\",\\\"db\\\":0}\"\n#     ,\"pipelines\": \"[10000426]\"\n#           }\n# execute(conn=conn,inputs=inputs,outputs=outputs,params=params,reportFileName='1000002.html')\n"
                            },
                            "supportPmml": true,
                            "children": null,
                            "parameters": {
                                "xgb_inputfeaturecolumn": "",
                                "xgb_colsample_bytree": "1",
                                "xgb_objective": "reg-linear",
                                "xgb_booster": "gbtree",
                                "xgb_min_child_weight": "3",
                                "other_params": "",
                                "xgb_learning_rate": "0.1",
                                "xgb_max_depth": "3",
                                "xgb_labelcolumn": "",
                                "xgb_subsample": "1.0",
                                "xgb_n_estimators": "100",
                                "xgb_gamma": "1"
                            }
                        },
                        {
                            "id": 10054,
                            "createTime": "2022-05-24T09:09:24.407+0000",
                            "creatorId": 100,
                            "creatorName": "admin",
                            "name": "网格搜索",
                            "targetAlgorithm": "com.yzx.mlp.scheduling.core.alog.unparallel.engine.pythonengine.PythonCommonAlgorithm",
                            "parentId": 10047,
                            "enabled": true,
                            "paralleled": false,
                            "component": true,
                            "allowViewSource": true,
                            "iconPath": "icontezhenggongcheng-01",
                            "minimumInput": 1,
                            "inBuilt": true,
                            "hasReport": true,
                            "description": "模型参数    \nlearning_rate：学习率，初始状态建议选择较大的学习率，设置为0.1.\niterations ：最大树数。默认1000。\ndepth：每棵树的最大深度，防止过拟合。初始状态设置3~8。\n",
                            "tabs": [
                                {
                                    "id": 7538,
                                    "createTime": "2022-05-24T09:09:24.408+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "tabName": "选择算法",
                                    "elements": [
                                        {
                                            "id": 20611,
                                            "createTime": "2022-05-24T09:09:24.408+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "algorithm",
                                            "label": "选择算法",
                                            "defaultValue": null,
                                            "value": "[\"lr\"]",
                                            "options": "[\n    {\"value\": \"lr\", \"label\": \"LR\", \"invisible\": [\"num_leaves\",\"iterations\",\"learning_rate\",\"n_estimators\",\"max_depth\",\"min_samples_split\"]},\n    {\"value\": \"rf\", \"label\": \"RF\", \"invisible\": [\"num_leaves\",\"iterations\",\"penalty\",\"C\",\"learning_rate\"]},\n    {\"value\": \"xgboost\", \"label\": \"XGBOOST\", \"invisible\": [\"num_leaves\",\"iterations\",\"penalty\",\"C\",\"min_samples_split\"]},\n    {\"value\": \"gbdt\", \"label\": \"GBDT\", \"invisible\": [\"num_leaves\",\"iterations\",\"penalty\",\"C\"]},\n    {\"value\": \"lightgbm\", \"label\": \"LIGHTGBM\", \"invisible\": [\"iterations\", \"penalty\",\"C\",\"min_samples_split\"]},\n    {\"value\": \"catboost\", \"label\": \"CATBOOST\", \"invisible\": [\"penalty\",\"C\",\"min_samples_split\",\"n_estimators\",\"num_leaves\"]}\n]",
                                            "rexp": "/\\S/",
                                            "placeholder": "",
                                            "toolTip": "选择算法",
                                            "sequence": 0,
                                            "elementType": 28,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        }
                                    ]
                                },
                                {
                                    "id": 7539,
                                    "createTime": "2022-05-24T09:09:24.408+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "tabName": "字段设置",
                                    "elements": [
                                        {
                                            "id": 20612,
                                            "createTime": "2022-05-24T09:09:24.408+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "input_feature_column",
                                            "label": "输入特征列",
                                            "defaultValue": null,
                                            "value": null,
                                            "options": "",
                                            "rexp": "/\\S/",
                                            "placeholder": "请输入特征所在列序号或者列名称",
                                            "toolTip": "表示需处理的特征所在列序号或者列名称，如“1-3,10,column1”,表示取特征在表中的1到3列，10列 和字段名称为column1的列，列序号从1开始计数，不包含序号列。",
                                            "sequence": 0,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        },
                                        {
                                            "id": 20613,
                                            "createTime": "2022-05-24T09:09:24.408+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "label_column",
                                            "label": "标签列",
                                            "defaultValue": null,
                                            "value": null,
                                            "options": "",
                                            "rexp": "/\\S/",
                                            "placeholder": "请输入标签所在列序号或者列名称，如：1",
                                            "toolTip": "标签列所在列序号或者列名称，从1开始计数，不包含序号列。",
                                            "sequence": 1,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        }
                                    ]
                                },
                                {
                                    "id": 7540,
                                    "createTime": "2022-05-24T09:09:24.408+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "tabName": "超参数设置",
                                    "elements": [
                                        {
                                            "id": 20620,
                                            "createTime": "2022-05-24T09:09:24.408+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "iterations",
                                            "label": "iterations",
                                            "defaultValue": null,
                                            "value": "[800,1000,1200]",
                                            "options": "",
                                            "rexp": "/.*/",
                                            "placeholder": "",
                                            "toolTip": "最大树数。默认1000",
                                            "sequence": 0,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": false,
                                            "required": true
                                        },
                                        {
                                            "id": 20614,
                                            "createTime": "2022-05-24T09:09:24.408+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "learning_rate",
                                            "label": "learning_rate",
                                            "defaultValue": null,
                                            "value": "[0.01,0.02,0.05,0.1,0.15,0.2,0.3]",
                                            "options": "",
                                            "rexp": "/.*/",
                                            "placeholder": "",
                                            "toolTip": "步长\n取值范围：（0,1]",
                                            "sequence": 1,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": false,
                                            "required": true
                                        },
                                        {
                                            "id": 20615,
                                            "createTime": "2022-05-24T09:09:24.408+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "n_estimators",
                                            "label": "n_estimators",
                                            "defaultValue": null,
                                            "value": "[60,80,100,120]",
                                            "options": "",
                                            "rexp": "/.*/",
                                            "placeholder": "",
                                            "toolTip": "最大的弱学习器数量\n取值范围：正整数",
                                            "sequence": 2,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": false,
                                            "required": true
                                        },
                                        {
                                            "id": 20616,
                                            "createTime": "2022-05-24T09:09:24.408+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "max_depth",
                                            "label": "max_depth",
                                            "defaultValue": null,
                                            "value": "[3,4,5,6]",
                                            "options": "",
                                            "rexp": "/.*/",
                                            "placeholder": "",
                                            "toolTip": "决策树的最大深度\n取值范围：正整数常用 [3,8]",
                                            "sequence": 3,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": false,
                                            "required": true
                                        },
                                        {
                                            "id": 20617,
                                            "createTime": "2022-05-24T09:09:24.408+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "penalty",
                                            "label": "penalty",
                                            "defaultValue": null,
                                            "value": "[\"l1\", \"l2\"]",
                                            "options": "",
                                            "rexp": "/.*/",
                                            "placeholder": "",
                                            "toolTip": "",
                                            "sequence": 4,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        },
                                        {
                                            "id": 20618,
                                            "createTime": "2022-05-24T09:09:24.408+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "C",
                                            "label": "C",
                                            "defaultValue": null,
                                            "value": "[1,2,3,4,5]",
                                            "options": "",
                                            "rexp": "/.*/",
                                            "placeholder": "",
                                            "toolTip": "正则化参数系数 取值范围0.0~正无穷 浮点数",
                                            "sequence": 5,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        },
                                        {
                                            "id": 20619,
                                            "createTime": "2022-05-24T09:09:24.408+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "min_samples_split",
                                            "label": "min_samples_split",
                                            "defaultValue": null,
                                            "value": "[2,3,4]",
                                            "options": "",
                                            "rexp": "/.*/",
                                            "placeholder": "",
                                            "toolTip": "min_samples_split",
                                            "sequence": 6,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": false,
                                            "required": true
                                        },
                                        {
                                            "id": 20621,
                                            "createTime": "2022-05-24T09:09:24.408+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "other_params",
                                            "label": "其他超参数设置",
                                            "defaultValue": null,
                                            "value": null,
                                            "options": "",
                                            "rexp": "/.*/",
                                            "placeholder": "请输入字典，例如{'a': (2,4,1), 'b': {2,6,1}}，1为步长或{'a': [1,2,3], 'b': [2,4,5]}",
                                            "toolTip": "请输入字典，例如{'a': (2,4,1), 'b': {2,6,1}}，1为步长或{'a': [1,2,3], 'b': [2,4,5]}",
                                            "sequence": 8,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": false
                                        }
                                    ]
                                }
                            ],
                            "inputs": [
                                {
                                    "id": 10411,
                                    "createTime": "2022-05-24T09:09:24.408+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "key": "data_in",
                                    "type": "INPUT",
                                    "cat": "DATA",
                                    "canPreview": true,
                                    "preViewMode": "ONLY100",
                                    "description": "输入",
                                    "model": false
                                }
                            ],
                            "outputs": [
                                {
                                    "id": 10412,
                                    "createTime": "2022-05-24T09:09:24.408+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "key": "model",
                                    "type": "OUTPUT",
                                    "cat": "MODEL",
                                    "canPreview": false,
                                    "preViewMode": "ONLY100",
                                    "description": "模型",
                                    "access": "SAME",
                                    "columns": "[]",
                                    "model": true
                                }
                            ],
                            "updateTime": "2022-05-24T09:09:24.407+0000",
                            "sequence": 2,
                            "extra": {
                                "type": "NORMAL",
                                "value": null,
                                "mainClass": null,
                                "engine": "PYTHON"
                            },
                            "script": {
                                "MAIN": "# <ALOGCLASSNAME>\n# GRIDSEARCH\n# </ALOGCLASSNAME>\n\n# <EXECTUSCRIPT>\ndef execute(conn, inputs, params, outputs, reportFileName):\n\n    '''\n    载入模块\n    '''\n    from sklearn.pipeline import Pipeline\n    import os\n    import ast\n    import pickle\n    import db_utils\n    import joblib\n    import sys\n    import json\n    import warnings\n    import pandas as pd\n    import numpy as np\n    from SourceCodeImporter import SourceCodeImporter\n    from sklearn.model_selection import train_test_split\n    from sklearn2pmml import PMMLPipeline, sklearn2pmml\n    from report_utils import Report\n    from common import get_db_column\n    from common import get_feature\n    from common import get_label\n    from common import get_alog_info\n    from common import dict_value_transform_list\n    from common import get_db_column_with_type\n    from common import keep_dot_after\n    warnings.filterwarnings(\"ignore\")\n    '''\n        载入redis连接信息\n        '''\n    redisParam = json.loads(params['redis'])\n    redisConn = db_utils.getRedisMasterConnection(redisParam['connectInfo'], redisParam['masterName'],\n                                                  redisParam['password'], redisParam['db'])\n    '''\n    远程模块载入\n    '''\n    alog_names = get_alog_info(redisConn)\n    s = SourceCodeImporter()\n    for name in alog_names:\n        code = db_utils.redisReadHsetFile(redisConn, \"alogclass\", name)\n        s.add(name, code.decode())\n    sys.meta_path.append(s)\n    from GRIDSEARCH import GRIDSEARCH\n    '''\n    获取输入数据\n    '''\n    keep_dot_after(db_type, inputs)\n    data_in = db_utils.query(conn, 'select * from ' + inputs['data_in'], db_type)\n\n    data_in_shape = data_in.shape\n    '''\n    转换后的参数\n    '''\n    db_columns = get_db_column_with_type(db_type, inputs, conn)\n    columns_values = get_feature(db_columns, params['input_feature_column'])\n    label_column = get_label(db_columns, params['label_column'])\n\n    '''\n    处理参数\n    '''\n    tmp_params = {}\n    if params['other_params'] != '':\n        tmp_params = ast.literal_eval(params['other_params'])\n    alog_params = {'[\"lr\"]': ['penalty', 'C'],\n                  '[\"rf\"]': ['n_estimators', 'max_depth', 'min_samples_split'],\n                  '[\"xgboost\"]': ['learning_rate','max_depth', 'n_estimators'],\n                  '[\"gbdt\"]': ['learning_rate','max_depth', 'n_estimators', 'min_samples_split'],\n                  '[\"lightgbm\"]': ['learning_rate','max_depth', 'n_estimators'],\n                  '[\"catboost\"]': ['learning_rate','max_depth', 'n_estimators']}\n    tmp_params.update({key: params[key] for key in alog_params[params['algorithm']]})\n    params['other_params_dict'] = tmp_params\n    dict_value_transform_list(params['other_params_dict'])\n\n    '''\n    管道处理GridSearch\n    '''\n    grid_search = GRIDSEARCH(params, columns_values, label_column)\n    # x_train, x_test, y_train, y_test = train_test_split(data_in[columns_values], data_in[label_column],\n    #                                                     train_size=float(params['training_set']),\n    #                                                     test_size=float(params['test_set']))\n    grid_search.fit(data_in[columns_values], data_in[label_column])\n    # y_predict = pd.DataFrame(grid_search.clf.predict(x_test), columns=['y_predict'])\n\n    '''\n    保存文件到redis\n    '''\n    pipeline_pkl_name = outputs['model'].split('_', 1)[0]\n    joblib.dump(grid_search, params['pipeline_file'] + \"pkl_\" + pipeline_pkl_name, compress=3)\n    fileObject = pickle.dumps(joblib.load(params['pipeline_file'] + \"pkl_\" + pipeline_pkl_name))\n    os.remove(params['pipeline_file'] + \"pkl_\" + pipeline_pkl_name)\n    '''\n    保存pkl的二进制文件到redis中\n    '''\n    import json\n    redisParam = json.loads(params['redis'])\n    redisConn = db_utils.getRedisMasterConnection(redisParam['connectInfo'], redisParam['masterName'],\n                                                  redisParam['password'], redisParam['db'])\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"pkl_\" + pipeline_pkl_name, fileObject)\n    '''\n    模型输出\n    '''\n    joblib.dump(grid_search, params['pipeline_file'] + \"model_\" + pipeline_pkl_name, compress=3)\n    fileObject = pickle.dumps(joblib.load(params['pipeline_file'] + \"model_\" + pipeline_pkl_name))\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"model_\" + pipeline_pkl_name, fileObject)\n    os.remove(params['pipeline_file'] + \"model_\" + pipeline_pkl_name)\n    '''\n    获取当前节点的前置节点\n    '''\n    pipeline_list = []\n    redisConn_slave = db_utils.getRedisSlaveConnection(redisParam['connectInfo'], redisParam['masterName'],\n                                                       redisParam['password'], redisParam['db'])\n    for pkl_file in json.loads(params['pipelines']):\n        pkl_obj = db_utils.redisReadHsetFile(redisConn_slave, params['project_id'], \"pkl_\" + str(pkl_file))\n        if pkl_obj == None:\n            continue\n        pipeline_list.append((str(pkl_file), pickle.loads(pkl_obj)))\n    pipeline_list.append(('classifier', grid_search))\n    '''\n    pipeline模型输出\n    '''\n    pipeline = Pipeline(pipeline_list)\n    joblib.dump(pipeline, params['pipeline_file'] + \"pipeline_\" + pipeline_pkl_name, compress=3)\n    fileObject = pickle.dumps(joblib.load(params['pipeline_file'] + \"pipeline_\" + pipeline_pkl_name))\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"pipeline_\" + pipeline_pkl_name, fileObject)\n    os.remove(params['pipeline_file'] + \"pipeline_\" + pipeline_pkl_name)\n\n    '''\n    模型文件导出\n    '''\n    try:\n        pipeline = PMMLPipeline([(\"classifier\", grid_search.clf)])\n        pipeline.fit(data_in[columns_values], data_in[label_column])\n        sklearn2pmml(pipeline, \"test_grid.pmml\", debug=False)\n        with open(\"test_grid.pmml\", \"r\") as f:\n            pmml_str = f.read()\n            db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"sp_model_pmml_\" + pipeline_pkl_name, pmml_str)\n        os.remove(\"test_grid.pmml\")\n    except Exception as e:\n        print(\"pmml模型导出失败:{}\\n\".format(e))\n\n    '''\n    保存模型pkl的参数到redis\n    '''\n    pkl_params = {}\n    for i, v in data_in.dtypes.items():\n        pkl_params[str(i)]=str(v)\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"params_\" + pipeline_pkl_name, str(pkl_params))\n    '''\n    报表输出\n    '''\n    report = {}\n    param_result = grid_search.df_params_result\n    param_result.columns = ['name', 'value']\n    param_result = param_result.to_dict(\"reports\")\n    temp_result = {}\n    for item in param_result:\n        temp_result[item['name']] = item['value']\n    report['model_params'] = temp_result\n    report['evaluation'] = {\n        'accuracy': '',\n        'precision': \"\",\n        'recall': \"\",\n        'f1': '',\n        'ks': '',\n        'auc': '',\n    }\n    report['featureImportance'] = []\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"report_json_\" + reportFileName, json.dumps(report, ensure_ascii=False))\n\n    # '''\n    # 数据输出\n    # '''\n    # data_out = grid_search.transform(data_in)\n    # '''\n    # 构建输出结果的shape\n    # '''\n    # db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"shape_\" + outputs['data_out'], str(data_out.shape[0]) + \",\" + str(data_out.shape[1]))\n    #\n    # change_shape = {\n    #     'data_in': {\n    #         'startAt': 1,\n    #         'endAt': data_in_shape[1]\n    #     },\n    #     'data_out': {\n    #         'startAt': 1,\n    #         'endAt': data_out.shape[1]\n    #     },\n    #     \"change\": {\n    #         'startAt': data_in_shape[1] + 1,\n    #         'endAt': data_out.shape[1]\n    #     }\n    # }\n    # db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"change_shape_\" + pipeline_pkl_name,json.dumps(change_shape))\n    #\n    # '''\n    # 将结果写出\n    # '''\n    # db_utils.write_db_table(db_type=db_type, conn=conn, table_name=outputs['data_out'], data_frame=data_out,\n    #                         client=client, schema=inputs['schema'], hdfs_path=hdfsTmpPath)\n\n# </EXECTUSCRIPT>\n\n\n'''\nalgorithm: 算法名(lr, rf, gbdt, xgboost, lightgbm, catboost)\nother_params: 和算法关联的其他超参数，需要进行网格搜索。示例: 参数名1=(开始值,结束值, 步长),参数名2=[值1,值2,值3]\n'''\n# import  db_utils\n# db_type = 0\n# if db_type == 1:\n#     conn = db_utils.get_connection(db_type=db_type, host=\"192.168.198.108\", port=\"10000\", dbname=\"yq_yzx\", user=\"yangqing_yzx\", password=\"12qw#$ER\")\n#     client = db_utils.hdfs_client(hadoop_path=\"http://192.168.198.105:50070\")\n# else:\n#     client = None\n#     conn = db_utils.get_connection(db_type=db_type, host='192.168.198.172', port='15434', dbname='mlp', user='postgres', password='pgsql123456',schema='admin')\n# inputs = {'data_in':'\"10000171_0_4\"','schema':'admin'}\n# outputs= {'data_out':'10001425_0_2'}\n# params = {'project_id':'project_15','input_feature_column':'2-3','label_column':'4',\n#           'training_set':'0.4','test_set':'0.6',\n#           'algorithm': '[\"lr\"]',\n#           'learning_rate': '(0.1, 0.6, 0.1)',\n#           'n_estimators': '(4,8,2)',\n#           'max_depth': '[2, 4, 8, 12, 16]',\n#           'C': '(0.6, 0.8, 0.1)',\n#           'penalty': '[\"l1\", \"l2\"]',\n#           'other_params': ''\n#     ,'pipeline_file': '/tmp/pyserve/pipeline/'\n#     ,\"redis\": \"{\\\"connectInfo\\\":[[\\\"192.168.198.220\\\",\\\"26380\\\"],[\\\"192.168.198.221\\\",\\\"26380\\\"],[\\\"192.168.198.222\\\",\\\"26380\\\"]],\\\"masterName\\\":\\\"mymaster\\\",\\\"password\\\":\\\"123456\\\",\\\"db\\\":0}\"\n#     ,\"pipelines\": \"[10000426]\"\n#           }\n# execute(conn=conn,inputs=inputs,outputs=outputs,params=params,reportFileName='1000002.html')\n#"
                            },
                            "supportPmml": true,
                            "children": null,
                            "parameters": {
                                "C": "[1,2,3,4,5]",
                                "input_feature_column": "",
                                "label_column": "",
                                "max_depth": "[3,4,5,6]",
                                "penalty": "[\"l1\", \"l2\"]",
                                "min_samples_split": "[2,3,4]",
                                "n_estimators": "[60,80,100,120]",
                                "other_params": "",
                                "learning_rate": "[0.01,0.02,0.05,0.1,0.15,0.2,0.3]",
                                "iterations": "[800,1000,1200]",
                                "algorithm": "[\"lr\"]"
                            }
                        },
                        {
                            "id": 10052,
                            "createTime": "2022-05-24T09:09:23.276+0000",
                            "creatorId": 100,
                            "creatorName": "admin",
                            "name": "LIGHTGBM",
                            "targetAlgorithm": "com.yzx.mlp.scheduling.core.alog.unparallel.engine.pythonengine.PythonCommonAlgorithm",
                            "parentId": 10047,
                            "enabled": true,
                            "paralleled": false,
                            "component": true,
                            "allowViewSource": true,
                            "iconPath": "icontezhenggongcheng-01",
                            "minimumInput": 1,
                            "inBuilt": true,
                            "hasReport": true,
                            "description": "模型参数    \nlightgbm\nboosting_type ：‘gbdt’,‘rf’\n----------------------------上面三个参数是要在开始前就确定的-------------------------\nlearning_rate：学习率，初始状态建议选择较大的学习率，设置为0.1.\nn_estimators ：树的数量，初始状态适配lr = 0.1\nmax_depth：每棵树的最大深度，防止过拟合。初始状态设置3~8。\nnum_leaves :每棵树的最多叶子数，因为CART是二叉树，所以叶子数量最大值为2 **depth，所以num_leaves要小于该值才有意义。\nmin_child_samples：又称为min_data_in_leaf，指要想建立一个叶子所需要的的最少样本数，增大它可以降低过拟合。\nmin_child_weight：又称为min_sum_hessian_in_leaf，指要想建立一个叶子，该叶子需要提供的最小hessian值。这两个参数都是对新建叶子设置了门槛，可以降低叶子数量，减小过拟合。\nfeature_fraction：每次新建一棵树时，随机使用多少比例的特征。\nbagging_fraction：每次进行bagging时，随机使用多少比例的样本。\nbagging_freq:每建立多少棵树，就进行一次bagging。",
                            "tabs": [
                                {
                                    "id": 7534,
                                    "createTime": "2022-05-24T09:09:23.278+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "tabName": "字段设置",
                                    "elements": [
                                        {
                                            "id": 20592,
                                            "createTime": "2022-05-24T09:09:23.278+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "gbm_inputfeaturecolumn",
                                            "label": "输入特征列",
                                            "defaultValue": null,
                                            "value": null,
                                            "options": "",
                                            "rexp": "/^[0-9A-Za-z,\\-_]{1,10000}$/",
                                            "placeholder": "请输入特征所在列序号或者列名称",
                                            "toolTip": "表示需处理的特征所在列序号或者列名称，如“1-3,10,column1”,表示取特征在表中的1到3列，10列 和字段名称为column1的列，列序号从1开始计数，不包含序号列。",
                                            "sequence": 0,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        },
                                        {
                                            "id": 20593,
                                            "createTime": "2022-05-24T09:09:23.278+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "gbm_labelcolumn",
                                            "label": "标签列",
                                            "defaultValue": null,
                                            "value": null,
                                            "options": "",
                                            "rexp": "/^[0-9A-Za-z,\\-_]{1,10000}$/",
                                            "placeholder": "请输入标签所在列序号或者列名称，如：1",
                                            "toolTip": "标签列所在列序号或者列名称，从1开始计数，不包含序号列。",
                                            "sequence": 1,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        }
                                    ]
                                },
                                {
                                    "id": 7535,
                                    "createTime": "2022-05-24T09:09:23.278+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "tabName": "超参数设置",
                                    "elements": [
                                        {
                                            "id": 20594,
                                            "createTime": "2022-05-24T09:09:23.278+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "gbm_boosting_type",
                                            "label": "boosting_type",
                                            "defaultValue": "gbdt",
                                            "value": "gbdt",
                                            "options": "gbdt:gbdt;rf:rf",
                                            "rexp": "/\\S/",
                                            "placeholder": "",
                                            "toolTip": "基分类器类型",
                                            "sequence": 0,
                                            "elementType": 3,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        },
                                        {
                                            "id": 20595,
                                            "createTime": "2022-05-24T09:09:23.278+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "gbm_learning_rate",
                                            "label": "learning_rate",
                                            "defaultValue": null,
                                            "value": "0.1",
                                            "options": "",
                                            "rexp": "/^0\\.\\d*[1-9]\\d*$|^[1-9]\\.\\d*[1-9]\\d*e-[1-9]+$|^1\\.[0]*$/",
                                            "placeholder": "",
                                            "toolTip": "步长\n取值范围：（0,1]",
                                            "sequence": 1,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        },
                                        {
                                            "id": 20596,
                                            "createTime": "2022-05-24T09:09:23.278+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "gbm_n_estimators",
                                            "label": "n_estimators",
                                            "defaultValue": null,
                                            "value": "100",
                                            "options": "",
                                            "rexp": "/^[0-9]+$/",
                                            "placeholder": "",
                                            "toolTip": "最大的弱学习器数量\n取值范围：正整数",
                                            "sequence": 2,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        },
                                        {
                                            "id": 20597,
                                            "createTime": "2022-05-24T09:09:23.278+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "gbm_max_depth",
                                            "label": "max_depth",
                                            "defaultValue": null,
                                            "value": "3",
                                            "options": "",
                                            "rexp": "/^[0-9]+$/",
                                            "placeholder": "",
                                            "toolTip": "决策树的最大深度\n取值范围：正整数常用 [3,8]",
                                            "sequence": 3,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        },
                                        {
                                            "id": 20598,
                                            "createTime": "2022-05-24T09:09:23.278+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "gbm_min_child_weight",
                                            "label": "min_child_weight",
                                            "defaultValue": null,
                                            "value": "3",
                                            "options": "",
                                            "rexp": "/\\S/",
                                            "placeholder": "",
                                            "toolTip": "最小叶子节点样本权重和\n取值范围：浮点类型",
                                            "sequence": 4,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        },
                                        {
                                            "id": 20599,
                                            "createTime": "2022-05-24T09:09:23.278+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "gbm_num_leaves",
                                            "label": "num_leaves",
                                            "defaultValue": null,
                                            "value": "3",
                                            "options": "",
                                            "rexp": "/^[0-9]+$/",
                                            "placeholder": "",
                                            "toolTip": "每棵树的最多叶子数",
                                            "sequence": 5,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        },
                                        {
                                            "id": 20600,
                                            "createTime": "2022-05-24T09:09:23.278+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "gbm_min_child_samples",
                                            "label": "min_child_samples",
                                            "defaultValue": "",
                                            "value": "2",
                                            "options": "",
                                            "rexp": "/^[0-9]+$/",
                                            "placeholder": "",
                                            "toolTip": "建立一个叶子所需要的的最少样本数，增大它可以降低过拟合\n取值范围：正整数",
                                            "sequence": 6,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        },
                                        {
                                            "id": 20602,
                                            "createTime": "2022-05-24T09:09:23.278+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "gbm_bagging_fraction",
                                            "label": "bagging_fraction",
                                            "defaultValue": "",
                                            "value": "1",
                                            "options": "",
                                            "rexp": "/(^0\\.\\d*[1-9]\\d*$|^[1-9]\\.\\d*[1-9]\\d*e-[1-9]+$)|(^1[.]{0,1}[0]*$)/",
                                            "placeholder": "",
                                            "toolTip": "每次进行bagging时，随机使用多少比例的样本。\n取值范围：0-1",
                                            "sequence": 7,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        },
                                        {
                                            "id": 20601,
                                            "createTime": "2022-05-24T09:09:23.278+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "gbm_feature_fraction",
                                            "label": "feature_fraction",
                                            "defaultValue": "",
                                            "value": "1",
                                            "options": "",
                                            "rexp": "/(^0\\.\\d*[1-9]\\d*$|^[1-9]\\.\\d*[1-9]\\d*e-[1-9]+$)|(^1[.]{0,1}[0]*$)/",
                                            "placeholder": "",
                                            "toolTip": "每次新建一棵树时，随机使用多少比例的特征。\n取值范围：0-1",
                                            "sequence": 7,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        },
                                        {
                                            "id": 20603,
                                            "createTime": "2022-05-24T09:09:23.278+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "gbm_bagging_freq",
                                            "label": "bagging_freq",
                                            "defaultValue": "rmse",
                                            "value": "1",
                                            "options": "",
                                            "rexp": "/^[0-9]+$/",
                                            "placeholder": "",
                                            "toolTip": "每建立多少棵树，就进行一次bagging。",
                                            "sequence": 8,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        },
                                        {
                                            "id": 20604,
                                            "createTime": "2022-05-24T09:09:23.278+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "other_params",
                                            "label": "其他超参数设置",
                                            "defaultValue": null,
                                            "value": null,
                                            "options": "",
                                            "rexp": "/\\S/",
                                            "placeholder": "",
                                            "toolTip": "请输入配置的超参数。参数1=值1;参数2=值2",
                                            "sequence": 9,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": false
                                        }
                                    ]
                                }
                            ],
                            "inputs": [
                                {
                                    "id": 10407,
                                    "createTime": "2022-05-24T09:09:23.278+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "key": "data_in",
                                    "type": "INPUT",
                                    "cat": "DATA",
                                    "canPreview": true,
                                    "preViewMode": "ONLY100",
                                    "description": "输入",
                                    "model": false
                                }
                            ],
                            "outputs": [
                                {
                                    "id": 10408,
                                    "createTime": "2022-05-24T09:09:23.278+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "key": "model",
                                    "type": "OUTPUT",
                                    "cat": "MODEL",
                                    "canPreview": false,
                                    "preViewMode": "ONLY100",
                                    "description": "模型",
                                    "access": "SAME",
                                    "columns": "[]",
                                    "model": true
                                }
                            ],
                            "updateTime": "2022-05-24T09:09:23.276+0000",
                            "sequence": 2,
                            "extra": {
                                "type": "NORMAL",
                                "value": null,
                                "mainClass": null,
                                "engine": "PYTHON"
                            },
                            "script": {
                                "MAIN": "# <ALOGCLASSNAME>\n# LIGHTGBM\n# </ALOGCLASSNAME>\n\n# <EXECTUSCRIPT>\ndef execute(conn, inputs, params, outputs, reportFileName):\n\n    '''\n    载入模块\n    '''\n    from sklearn.pipeline import Pipeline\n    import os\n    import pickle\n    import db_utils\n    import joblib\n    import sys\n    import json\n    import warnings\n    import pandas as pd\n    import numpy as np\n    from SourceCodeImporter import SourceCodeImporter\n    from sklearn.model_selection import train_test_split\n    from sklearn2pmml import PMMLPipeline, sklearn2pmml\n    from report_utils import ALogReport\n    from common import get_db_column\n    from common import get_feature\n    from common import get_label\n    from common import str_to_dict\n    from common import get_alog_info\n    from common import get_db_column_with_type\n    from common import keep_dot_after\n\n    warnings.filterwarnings(\"ignore\")\n    '''\n    载入redis连接信息\n    '''\n    redisParam = json.loads(params['redis'])\n    redisConn = db_utils.getRedisMasterConnection(redisParam['connectInfo'], redisParam['masterName'],\n                                                  redisParam['password'], redisParam['db'])\n    '''\n    远程模块载入\n    '''\n    alog_names = get_alog_info(redisConn)\n    s = SourceCodeImporter()\n    for name in alog_names:\n        code = db_utils.redisReadHsetFile(redisConn, \"alogclass\", name)\n        s.add(name, code.decode())\n    sys.meta_path.append(s)\n    from LIGHTGBM import LIGHTGBM\n    '''\n    获取输入数据\n    '''\n    keep_dot_after(db_type, inputs)\n    data_in = db_utils.query(conn, 'select * from ' + inputs['data_in'], db_type)\n\n    data_in_shape = data_in.shape\n    '''\n    转换后的参数\n    '''\n    db_columns = get_db_column_with_type(db_type, inputs, conn)\n    columns_values = get_feature(db_columns, params['gbm_inputfeaturecolumn'])\n    label_column = get_label(db_columns, params['gbm_labelcolumn'])\n    '''\n       存放临时超时参数\n       '''\n    params['other_params_dict'] = str_to_dict(params['other_params'])\n    '''\n    管道处理XGBOOST\n    '''\n    gbm = LIGHTGBM(params, columns_values, label_column)\n    # x_train, x_test, y_train, y_test = train_test_split(data_in[columns_values], data_in[label_column],\n    #                                                     train_size=float(params['gbm_trainingset']),\n    #                                                     test_size=float(params['gbm_testset']))\n    gbm.fit(data_in[columns_values], data_in[label_column])\n    # y_predict = pd.DataFrame(gbm.clf.predict(x_test), columns=['y_predict'])\n\n    '''\n    保存文件到redis\n    '''\n    pipeline_pkl_name = outputs['model'].split('_', 1)[0]\n    joblib.dump(gbm, params['pipeline_file'] + \"pkl_\" + pipeline_pkl_name, compress=3)\n    fileObject = pickle.dumps(joblib.load(params['pipeline_file'] + \"pkl_\" + pipeline_pkl_name))\n    os.remove(params['pipeline_file'] + \"pkl_\" + pipeline_pkl_name)\n    '''\n    保存pkl的二进制文件到redis中\n    '''\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"pkl_\" + pipeline_pkl_name, fileObject)\n    '''\n    模型输出\n    '''\n    joblib.dump(gbm, params['pipeline_file'] + \"model_\" + pipeline_pkl_name, compress=3)\n    fileObject = pickle.dumps(joblib.load(params['pipeline_file'] + \"model_\" + pipeline_pkl_name))\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"model_\" + pipeline_pkl_name, fileObject)\n    os.remove(params['pipeline_file'] + \"model_\" + pipeline_pkl_name)\n    '''\n    获取当前节点的前置节点\n    '''\n    pipeline_list = []\n    redisConn_slave = db_utils.getRedisSlaveConnection(redisParam['connectInfo'], redisParam['masterName'],\n                                                       redisParam['password'], redisParam['db'])\n    for pkl_file in json.loads(params['pipelines']):\n        pkl_obj = db_utils.redisReadHsetFile(redisConn_slave, params['project_id'], \"pkl_\" + str(pkl_file))\n        if pkl_obj == None:\n            continue\n        pipeline_list.append((str(pkl_file), pickle.loads(pkl_obj)))\n    pipeline_list.append(('classifier', gbm))\n    '''\n    pipeline模型输出\n    '''\n    pipeline = Pipeline(pipeline_list)\n    joblib.dump(pipeline, params['pipeline_file'] + \"pipeline_\" + pipeline_pkl_name, compress=3)\n    fileObject = pickle.dumps(joblib.load(params['pipeline_file'] + \"pipeline_\" + pipeline_pkl_name))\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"pipeline_\" + pipeline_pkl_name, fileObject)\n    os.remove(params['pipeline_file'] + \"pipeline_\" + pipeline_pkl_name)\n\n    '''\n    模型文件导出\n    '''\n    try:\n        pipeline = PMMLPipeline([(\"classifier\", gbm.clf)])\n        pipeline.fit(data_in[columns_values], data_in[label_column])\n        sklearn2pmml(pipeline, \"test_lightgbm.pmml\", debug=False)\n        with open(\"test_lightgbm.pmml\", \"r\") as f:\n            pmml_str = f.read()\n            db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"sp_model_pmml_\" + pipeline_pkl_name, pmml_str)\n        os.remove(\"test_lightgbm.pmml\")\n    except Exception as e:\n        print(\"pmml模型导出失败:{}\\n\".format(e))\n\n    '''\n    保存模型pkl的参数到redis\n    '''\n    pkl_params = {}\n    for i, v in data_in.dtypes.items():\n        pkl_params[str(i)]=str(v)\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"params_\" + pipeline_pkl_name, str(pkl_params))\n    '''\n    报表输出\n    '''\n    model_params = {}\n    model_params['训练标签'] = ','.join(columns_values)\n    model_params['标记标签'] = label_column\n    model_params['树的数目'] = params['gbm_n_estimators']\n    model_params['树的最大深度'] = params['gbm_max_depth']\n    model_params['学习速率'] = params['gbm_learning_rate']\n    model_params['每棵树的最多叶子数'] = params['gbm_num_leaves']\n    model_params['建立一个叶子所需要的的最少样本数'] = params['gbm_min_child_samples']\n    model_params['建立一个叶子的最小hessian值'] = params['gbm_min_child_weight']\n    model_params['每次新建一棵树时，随机使用多少的特征'] = params['gbm_feature_fraction']\n    model_params['每次进行bagging时，随机使用多少的样本'] = params['gbm_min_child_weight']\n    model_params['每建立多少棵树，就进行一次bagging'] = params['gbm_bagging_freq']\n\n\n    # report = ALogReport().report_train(y_test.astype(str), pd.DataFrame(np.where(y_predict<0.5, 0, 1)).astype(str(y_test.dtype)), 'LIGHTGBM 评估报告', model_params, gbm.df_importances, gbm.importances_columns)\n    report = ALogReport().report_train('LIGHTGBM 评估报告', model_params, gbm.df_importances, gbm.importances_columns)\n\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"report_json_\" + reportFileName, json.dumps(report, ensure_ascii=False))\n\n    # '''\n    # 数据输出\n    # '''\n    # data_out = gbm.transform(data_in)\n    # '''\n    # 构建输出结果的shape\n    # '''\n    # db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"shape_\" + outputs['data_out'], str(data_out.shape[0]) + \",\" + str(data_out.shape[1]))\n    #\n    # change_shape = {\n    #     'data_in': {\n    #         'startAt': 1,\n    #         'endAt': data_in_shape[1]\n    #     },\n    #     'data_out': {\n    #         'startAt': 1,\n    #         'endAt': data_out.shape[1]\n    #     },\n    #     \"change\": {\n    #         'startAt': data_in_shape[1] + 1,\n    #         'endAt': data_out.shape[1]\n    #     }\n    # }\n    # db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"change_shape_\" + pipeline_pkl_name,json.dumps(change_shape))\n    #\n    # '''\n    # 将结果写出\n    # '''\n    # db_utils.write_db_table(db_type=db_type, conn=conn, table_name=outputs['data_out'], data_frame=data_out,\n    #                         client=client, schema=inputs['schema'], hdfs_path=hdfsTmpPath)\n\n# </EXECTUSCRIPT>\n\n\n# import  db_utils\n# db_type = 0\n# if db_type == 1:\n#     conn = db_utils.get_connection(db_type=db_type, host=\"192.168.198.108\", port=\"10000\", dbname=\"yq_yzx\", user=\"yangqing_yzx\", password=\"12qw#$ER\")\n#     client = db_utils.hdfs_client(hadoop_path=\"http://192.168.198.105:50070\")\n# else:\n#     client = None\n#     conn = db_utils.get_connection(db_type=db_type, host='192.168.198.172', port='15434', dbname='mlp', user='postgres', password='pgsql123456',schema='admin')\n# inputs = {'data_in':'\"admin\".\"10000289_0_1\"','schema':'admin'}\n# outputs= {'data_out':'10000399_0_2'}\n# params = {'project_id':'project_23','gbm_inputfeaturecolumn':'4-8','gbm_labelcolumn':'9','gbm_trainingset':'0.5','gbm_testset':'0.5',\n#           'gbm_boosting_type':'gbdt','gbm_learning_rate':'0.3','gbm_n_estimators':'7','gbm_max_depth':'5','gbm_num_leaves':'7','gbm_min_child_samples':'20',\n#           'gbm_min_child_weight':'0.8','gbm_feature_fraction':'0.9','gbm_bagging_fraction':'0.9','gbm_bagging_freq':'4'\n#     ,'other_params' : '','pipeline_file': '/tmp/pyserve/pipeline/'\n#     ,\"redis\": \"{\\\"connectInfo\\\":[[\\\"192.168.198.220\\\",\\\"26380\\\"],[\\\"192.168.198.221\\\",\\\"26380\\\"],[\\\"192.168.198.222\\\",\\\"26380\\\"]],\\\"masterName\\\":\\\"mymaster\\\",\\\"password\\\":\\\"123456\\\",\\\"db\\\":0}\"\n#     ,\"pipelines\": \"[10000426]\"\n#           }\n# execute(conn=conn,inputs=inputs,outputs=outputs,params=params,reportFileName='1000002.html')\n\nimport db_utils\nimport report_utils\nconn = None\nreport = report_utils.Report()\nmodel = None\ndb_type=1\nhdfsTmpPath='/tmp/mlp/'\ntry:\n    if db_type==1:\n        conn=db_utils.get_connection(db_type=db_type, host=\"192.168.198.108\", port=\"10000\", dbname=\"yq_yzx\", user=\"yangqing_yzx\", password=\"12qw#$ERx\")\n        client = db_utils.hdfs_client(hadoop_path='http://192.168.198.105:50070/', user='yangqing_yzx')\n    else:\n        client = None\n        conn=db_utils.get_connection(db_type=db_type, host='192.168.198.108', port='10000', dbname='yq_yzx', user='yangqing_yzx', password='12qw#$ERx',schema='yangqing_yzx')\n    inputs = {}\n    inputs['data_in'] = '\"10002603_0_1\"'\n    inputs['schema'] = 'yangqing_yzx'\n    outputs = {}\n    outputs['model'] = '10002599_0_2'\n    outputs['data_out'] = '10002599_0_1'\n    params = {}\n    params['gbm_labelcolumn'] = '1'\n    params['gbm_min_child_weight'] = '3'\n    params['gbm_trainingset'] = '0.8'\n    params['gbm_bagging_fraction'] = '1'\n    params['gbm_testset'] = '0.2'\n    params['gbm_inputfeaturecolumn'] = '3'\n    params['other_params'] = ''\n    params['redis'] = '{\"connectInfo\":[[\"192.168.198.138\",\"16580\"],[\"192.168.198.138\",\"16581\"],[\"192.168.198.138\",\"16582\"]],\"db\":0,\"masterName\":\"machine\",\"password\":\"123456\"}'\n    params['gbm_min_child_samples'] = '2'\n    params['gbm_feature_fraction'] = '1'\n    params['gbm_boosting_type'] = 'gbdt'\n    params['gbm_learning_rate'] = '0.1'\n    params['gbm_max_depth'] = '3'\n    params['gbm_bagging_freq'] = '1'\n    params['pipelines'] = '[\"10002557\",\"10002603\"]'\n    params['project_id'] = 'project_3726'\n    params['gbm_num_leaves'] = '3'\n    params['pipeline_file'] = '/tmp/pyserve/pipeline/'\n    params['gbm_n_estimators'] = '100'\n    reportFileName = \"10002599.html\"\n    model = execute(conn, inputs, params, outputs, reportFileName)\nfinally:\n    if model != None:\n        sklearn2pmml(model,  '/tmp/pyserve/model/10002599_0_2', with_repr=True, debug=False)\n    db_utils.closeConnection(conn)"
                            },
                            "supportPmml": true,
                            "children": null,
                            "parameters": {
                                "gbm_labelcolumn": "",
                                "gbm_min_child_weight": "3",
                                "gbm_bagging_fraction": "1",
                                "gbm_inputfeaturecolumn": "",
                                "other_params": "",
                                "gbm_min_child_samples": "2",
                                "gbm_feature_fraction": "1",
                                "gbm_boosting_type": "gbdt",
                                "gbm_learning_rate": "0.1",
                                "gbm_max_depth": "3",
                                "gbm_bagging_freq": "1",
                                "gbm_num_leaves": "3",
                                "gbm_n_estimators": "100"
                            }
                        },
                        {
                            "id": 10053,
                            "createTime": "2022-05-24T09:09:24.190+0000",
                            "creatorId": 100,
                            "creatorName": "admin",
                            "name": "CATBOOST",
                            "targetAlgorithm": "com.yzx.mlp.scheduling.core.alog.unparallel.engine.pythonengine.PythonCommonAlgorithm",
                            "parentId": 10047,
                            "enabled": true,
                            "paralleled": false,
                            "component": true,
                            "allowViewSource": true,
                            "iconPath": "icontezhenggongcheng-01",
                            "minimumInput": 1,
                            "inBuilt": true,
                            "hasReport": true,
                            "description": "catboost-超参数说明\n\n\niterations：最大树数。默认1000。\n\nlearning_rate: 学习率，初始状态建议选择较大的学习率，设置为0.1.\n\ndepth: 决策树的深度\n\n1）具体指决策树走到最终结果过程中的节点个数。\n2）一般来说，数据少或者特征少的时候可以不管这个值。如果模型样本量多，特征也多的情况下，推荐限制这个最大深度。\n3）默认值：空值\n4）取值范围：正整数\n常用：[3,8]",
                            "tabs": [
                                {
                                    "id": 7536,
                                    "createTime": "2022-05-24T09:09:24.191+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "tabName": "字段设置",
                                    "elements": [
                                        {
                                            "id": 20605,
                                            "createTime": "2022-05-24T09:09:24.191+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "catboost_input_feature_column",
                                            "label": "输入特征列",
                                            "defaultValue": null,
                                            "value": null,
                                            "options": "",
                                            "rexp": "/^[0-9A-Za-z,\\-_]{1,10000}$/",
                                            "placeholder": "请输入特征所在列序号或者列名称",
                                            "toolTip": "表示需处理的特征所在列序号或者列名称，如“1-3,10,column1”,表示取特征在表中的1到3列，10列 和字段名称为column1的列，列序号从1开始计数，不包含序号列。",
                                            "sequence": 0,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        },
                                        {
                                            "id": 20606,
                                            "createTime": "2022-05-24T09:09:24.191+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "catboost_label_column",
                                            "label": "标签列",
                                            "defaultValue": null,
                                            "value": null,
                                            "options": "",
                                            "rexp": "/^[0-9A-Za-z,\\-_]{1,10000}$/",
                                            "placeholder": "请输入标签所在列序号或者列名称，如：1",
                                            "toolTip": "标签列所在列序号或者列名称，从1开始计数，不包含序号列。",
                                            "sequence": 1,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        }
                                    ]
                                },
                                {
                                    "id": 7537,
                                    "createTime": "2022-05-24T09:09:24.191+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "tabName": "超参数设置",
                                    "elements": [
                                        {
                                            "id": 20607,
                                            "createTime": "2022-05-24T09:09:24.191+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "catboost_iterations",
                                            "label": "iterations",
                                            "defaultValue": null,
                                            "value": "1000",
                                            "options": "",
                                            "rexp": "/\\S/",
                                            "placeholder": "",
                                            "toolTip": "最大树数。默认1000",
                                            "sequence": 0,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        },
                                        {
                                            "id": 20608,
                                            "createTime": "2022-05-24T09:09:24.191+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "catboost_learning_rate",
                                            "label": "learning_rate",
                                            "defaultValue": null,
                                            "value": "0.03",
                                            "options": "",
                                            "rexp": "/^0\\.\\d*[1-9]\\d*$|^[1-9]\\.\\d*[1-9]\\d*e-[1-9]+$|^1\\.[0]*$/",
                                            "placeholder": "",
                                            "toolTip": "学习率。默认0.03。",
                                            "sequence": 1,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        },
                                        {
                                            "id": 20609,
                                            "createTime": "2022-05-24T09:09:24.191+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "catboost_max_depth",
                                            "label": "depth",
                                            "defaultValue": null,
                                            "value": "6",
                                            "options": "",
                                            "rexp": "/^[0-9]+$/",
                                            "placeholder": "",
                                            "toolTip": "树深，最大16，建议在1到10之间。默认6。",
                                            "sequence": 2,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        },
                                        {
                                            "id": 20610,
                                            "createTime": "2022-05-24T09:09:24.191+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "other_params",
                                            "label": "其他超参数设置",
                                            "defaultValue": null,
                                            "value": null,
                                            "options": "",
                                            "rexp": "/\\S/",
                                            "placeholder": "",
                                            "toolTip": "请输入配置的超参数。参数1=值1;参数2=值2",
                                            "sequence": 3,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": false
                                        }
                                    ]
                                }
                            ],
                            "inputs": [
                                {
                                    "id": 10409,
                                    "createTime": "2022-05-24T09:09:24.191+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "key": "data_in",
                                    "type": "INPUT",
                                    "cat": "DATA",
                                    "canPreview": true,
                                    "preViewMode": "ONLY100",
                                    "description": "输入",
                                    "model": false
                                }
                            ],
                            "outputs": [
                                {
                                    "id": 10410,
                                    "createTime": "2022-05-24T09:09:24.191+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "key": "model",
                                    "type": "OUTPUT",
                                    "cat": "MODEL",
                                    "canPreview": false,
                                    "preViewMode": "ONLY100",
                                    "description": "模型",
                                    "access": "SAME",
                                    "columns": "[]",
                                    "model": true
                                }
                            ],
                            "updateTime": "2022-05-24T09:09:24.190+0000",
                            "sequence": 2,
                            "extra": {
                                "type": "NORMAL",
                                "value": null,
                                "mainClass": null,
                                "engine": "PYTHON"
                            },
                            "script": {
                                "MAIN": "# <ALOGCLASSNAME>\n# CATBOOST\n# </ALOGCLASSNAME>\n\n# <EXECTUSCRIPT>\ndef execute(conn, inputs, params, outputs, reportFileName):\n\n    '''\n    载入模块\n    '''\n    from sklearn.pipeline import Pipeline\n    import os\n    import pickle\n    import db_utils\n    import joblib\n    import sys\n    import json\n    import warnings\n    import pandas as pd\n    from SourceCodeImporter import SourceCodeImporter\n    from sklearn.model_selection import train_test_split\n    from report_utils import ALogReport\n    from common import get_db_column\n    from common import get_feature\n    from common import get_label\n    from common import str_to_dict\n    from common import get_alog_info\n    from common import get_db_column_with_type\n    from common import keep_dot_after\n    warnings.filterwarnings(\"ignore\")\n    '''\n    载入redis连接信息\n    '''\n    redisParam = json.loads(params['redis'])\n    redisConn = db_utils.getRedisMasterConnection(redisParam['connectInfo'], redisParam['masterName'],\n                                                  redisParam['password'], redisParam['db'])\n    '''\n    远程模块载入\n    '''\n    alog_names = get_alog_info(redisConn)\n    s = SourceCodeImporter()\n    for name in alog_names:\n        code = db_utils.redisReadHsetFile(redisConn, \"alogclass\", name)\n        s.add(name, code.decode())\n    sys.meta_path.append(s)\n    from CATBOOST import CATBOOST\n\n    '''\n    获取输入数据\n    '''\n    keep_dot_after(db_type, inputs)\n    data_in = db_utils.query(conn, 'select * from ' + inputs['data_in'], db_type)\n\n    data_in_shape = data_in.shape\n    '''\n    转换后的参数\n    '''\n    db_columns = get_db_column_with_type(db_type, inputs, conn)\n    columns_values = get_feature(db_columns, params['catboost_input_feature_column'])\n    label_column = get_label(db_columns, params['catboost_label_column'])\n\n    '''\n    存放临时超时参数\n    '''\n    params['other_params_dict'] = str_to_dict(params['other_params'], \";\")\n\n    '''\n    管道处理CATBOOST\n    '''\n    catboost = CATBOOST(params, columns_values, label_column)\n    # x_train, x_test, y_train, y_test = train_test_split(data_in[columns_values], data_in[label_column],\n    #                                                     train_size=float(params['catboost_training_set']),\n    #                                                     test_size=float(params['catboost_test_set']))\n    catboost.fit(data_in[columns_values], data_in[label_column])\n    # y_predict = pd.DataFrame(catboost.clf.predict(x_test), columns=['y_predict'])\n\n    '''\n    保存文件到redis\n    '''\n    pipeline_pkl_name = outputs['model'].split('_', 1)[0]\n    joblib.dump(catboost, params['pipeline_file'] + \"pkl_\" + pipeline_pkl_name, compress=3)\n    fileObject = pickle.dumps(joblib.load(params['pipeline_file'] + \"pkl_\" + pipeline_pkl_name))\n    os.remove(params['pipeline_file'] + \"pkl_\" + pipeline_pkl_name)\n    '''\n    保存pkl的二进制文件到redis中\n    '''\n    import json\n    redisParam = json.loads(params['redis'])\n    redisConn = db_utils.getRedisMasterConnection(redisParam['connectInfo'], redisParam['masterName'],\n                                                  redisParam['password'], redisParam['db'])\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"pkl_\" + pipeline_pkl_name, fileObject)\n    '''\n    模型输出\n    '''\n    joblib.dump(catboost, params['pipeline_file'] + \"model_\" + pipeline_pkl_name, compress=3)\n    fileObject = pickle.dumps(joblib.load(params['pipeline_file'] + \"model_\" + pipeline_pkl_name))\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"model_\" + pipeline_pkl_name, fileObject)\n    os.remove(params['pipeline_file'] + \"model_\" + pipeline_pkl_name)\n    '''\n    获取当前节点的前置节点\n    '''\n    pipeline_list = []\n    redisConn_slave = db_utils.getRedisSlaveConnection(redisParam['connectInfo'], redisParam['masterName'],\n                                                       redisParam['password'], redisParam['db'])\n    for pkl_file in json.loads(params['pipelines']):\n        pkl_obj = db_utils.redisReadHsetFile(redisConn_slave, params['project_id'], \"pkl_\" + str(pkl_file))\n        if pkl_obj == None:\n            continue\n        pipeline_list.append((str(pkl_file), pickle.loads(pkl_obj)))\n    pipeline_list.append(('classifier', catboost))\n    '''\n    pipeline模型输出\n    '''\n    pipeline = Pipeline(pipeline_list)\n    joblib.dump(pipeline, params['pipeline_file'] + \"pipeline_\" + pipeline_pkl_name, compress=3)\n    fileObject = pickle.dumps(joblib.load(params['pipeline_file'] + \"pipeline_\" + pipeline_pkl_name))\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"pipeline_\" + pipeline_pkl_name, fileObject)\n    os.remove(params['pipeline_file'] + \"pipeline_\" + pipeline_pkl_name)\n\n    # pipeline = PMMLPipeline([(\"classifier\", catboost.clf)])\n    # pipeline.fit(x_train, y_train)\n    # sklearn2pmml(pipeline, \"test_catboost.pmml\")\n\n    '''\n    模型文件导出\n    '''\n    try:\n        catboost.clf.save_model(\"test_catboost.pmml\", format=\"pmml\")\n        with open(\"test_catboost.pmml\", \"r\") as f:\n            pmml_str = f.read()\n            db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"sp_model_pmml_\" + pipeline_pkl_name, pmml_str)\n        os.remove(\"test_catboost.pmml\")\n    except Exception as e:\n        print(\"pmml模型导出失败:{}\\n\".format(e))\n\n    '''\n    保存模型pkl的参数到redis\n    '''\n    pkl_params = {}\n    for i, v in data_in.dtypes.items():\n        pkl_params[str(i)]=str(v)\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"params_\" + pipeline_pkl_name, str(pkl_params))\n    '''\n    报表输出\n    '''\n    model_params = {}\n    model_params['训练标签'] = ','.join(columns_values)\n    model_params['标记标签'] = label_column\n    model_params['最大树数'] = params['catboost_iterations']\n    model_params['树的最大深度'] = params['catboost_max_depth']\n    model_params['学习率'] = params['catboost_learning_rate']\n    model_params['其他超参数'] = params['other_params']\n\n    # y_test = y_test.astype(str)\n\n    report = ALogReport().report_train('CatBoost 评估报告', model_params, catboost.df_importances, catboost.importances_columns)\n\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"report_json_\" + reportFileName, json.dumps(report, ensure_ascii=False))\n\n    # '''\n    # 数据输出\n    # '''\n    # data_out = catboost.transform(data_in)\n    # '''\n    # 构建输出结果的shape\n    # '''\n    # db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"shape_\" + outputs['data_out'], str(data_out.shape[0]) + \",\" + str(data_out.shape[1]))\n    #\n    # change_shape = {\n    #     'data_in': {\n    #         'startAt': 1,\n    #         'endAt': data_in_shape[1]\n    #     },\n    #     'data_out': {\n    #         'startAt': 1,\n    #         'endAt': data_out.shape[1]\n    #     },\n    #     \"change\": {\n    #         'startAt': data_in_shape[1] + 1,\n    #         'endAt': data_out.shape[1]\n    #     }\n    # }\n    # db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"change_shape_\" + pipeline_pkl_name,json.dumps(change_shape))\n    # '''\n    # 将结果写出\n    # '''\n    # db_utils.write_db_table(db_type=db_type, conn=conn, table_name=outputs['data_out'], data_frame=data_out,\n    #                         client=client, schema=inputs['schema'], hdfs_path=hdfsTmpPath)\n\n# </EXECTUSCRIPT>\n\n# import  db_utils\n# db_type = 1\n# if db_type == 1:\n#     conn = db_utils.get_connection(db_type=db_type, host=\"192.168.198.108\", port=\"10000\", dbname=\"yq_yzx\", user=\"yangqing_yzx\", password=\"12qw#$ER\")\n#     client = db_utils.hdfs_client(hadoop_path=\"http://192.168.198.105:50070\")\n# else:\n#     client = None\n#     conn = db_utils.get_connection(db_type=db_type, host='192.168.198.172', port='15434', dbname='mlp', user='postgres', password='pgsql123456',schema='admin')\n# inputs = {'data_in':'\"admin\".\"10001425_0_1\"','schema':'admin'}\n# outputs= {'data_out':'10001425_0_3'}\n# params = {'project_id':'project_15','catboost_input_feature_column':'1-3','catboost_label_column':'4',\n#           'catboost_training_set':'0.4','catboost_test_set':'0.6','catboost_iterations':'10','catboost_max_depth':'2',\n#           \"catboost_learning_rate\":\"0.1\",\"other_params\":\"max_leaves=31;model_shrink_rate=0;thread_count=1;cat_features=[1,2]\"\n#     ,'pipeline_file': '/tmp/pyserve/pipeline/'\n#     ,\"redis\": \"{\\\"connectInfo\\\":[[\\\"192.168.198.220\\\",\\\"26380\\\"],[\\\"192.168.198.221\\\",\\\"26380\\\"],[\\\"192.168.198.222\\\",\\\"26380\\\"]],\\\"masterName\\\":\\\"mymaster\\\",\\\"password\\\":\\\"123456\\\",\\\"db\\\":0}\"\n#     ,\"pipelines\": \"[10000426]\"\n#           }\n# execute(conn=conn,inputs=inputs,outputs=outputs,params=params,reportFileName='/tmp/pycharm_yq/1000002.html')\n"
                            },
                            "supportPmml": true,
                            "children": null,
                            "parameters": {
                                "catboost_max_depth": "6",
                                "catboost_iterations": "1000",
                                "catboost_label_column": "",
                                "other_params": "",
                                "catboost_input_feature_column": "",
                                "catboost_learning_rate": "0.03"
                            }
                        },
                        {
                            "id": 10050,
                            "createTime": "2022-05-24T09:09:21.711+0000",
                            "creatorId": 100,
                            "creatorName": "admin",
                            "name": "GBDT",
                            "targetAlgorithm": "com.yzx.mlp.scheduling.core.alog.unparallel.engine.pythonengine.PythonCommonAlgorithm",
                            "parentId": 10047,
                            "enabled": true,
                            "paralleled": false,
                            "component": true,
                            "allowViewSource": true,
                            "iconPath": "icontezhenggongcheng-01",
                            "minimumInput": 1,
                            "inBuilt": true,
                            "hasReport": true,
                            "description": "GBDT-超参数说明\nsubsample：采样比例\n1）每棵决策树的采样比例。\n2）选择小于1的比例可减少方差，即防止过拟合，但会增加样本拟合的偏差，因此取值不能太低，推荐在[0.5, 0.8]之间。\n3）注意这里的子采样和随机森林不一样，随机森林使用的是放回抽样，而这里是不放回抽样。\n4）默认值：1.0\n5）取值范围：(0,1] \n\nn_estimators：最大的弱学习器数量\n1）可理解为决策树的个数。\n2）一般来说n_estimators太小，容易欠拟合，n_estimators太大，又容易过拟合，一般选择一个适中的数值。\n3）在实际调参的过程中，我们常常将弱学习个数和步长一起考虑\n4）默认值：100\n5）取值范围：正整数\n\nlearning_rate：步长\n1）决定了权值更新的速度，设置得太大会使结果超过最优值，太小会使下降速度过慢。\n2）对于同样的训练集拟合效果，较小的步长意味着我们需要更多的弱学习器个数。通常我们用步长和弱学习器个数一起来决定算法的拟合效果。\n3）默认值：0.1\n4）取值范围：(0,1]\n\nmax_depth：决策树的最大深度\n1）具体指决策树走到最终结果过程中的节点个数。\n2）一般来说，数据少或者特征少的时候可以不管这个值。如果模型样本量多，特征也多的情况下，推荐限制这个最大深度。\n3）默认值：3\n4）取值范围：正整数\n常用：[3,8]\n\nmin_samples_split：节点再划分所需最小样本数\n1）每个节点上使用的最小样本数。\n2）这个值限制了子树继续划分的条件，如果某节点的样本数少于min_samples_split，则不会继续再尝试选择最优特征来进行划分。\n3）默认值：2\n4）取值范围：正整数",
                            "tabs": [
                                {
                                    "id": 7530,
                                    "createTime": "2022-05-24T09:09:21.714+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "tabName": "字段设置",
                                    "elements": [
                                        {
                                            "id": 20572,
                                            "createTime": "2022-05-24T09:09:21.714+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "gbdtinputfeaturecolumn",
                                            "label": "输入特征列",
                                            "defaultValue": null,
                                            "value": null,
                                            "options": "",
                                            "rexp": "/^[0-9A-Za-z,\\-_]{1,10000}$/",
                                            "placeholder": "请输入特征所在列序号或者列名称",
                                            "toolTip": "表示需处理的特征所在列序号或者列名称，如“1-3,10,column1”,表示取特征在表中的1到3列，10列 和字段名称为column1的列，列序号从1开始计数，不包含序号列。",
                                            "sequence": 0,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        },
                                        {
                                            "id": 20573,
                                            "createTime": "2022-05-24T09:09:21.714+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "gbdtlabelcolumn",
                                            "label": "标签列",
                                            "defaultValue": null,
                                            "value": null,
                                            "options": "",
                                            "rexp": "/^[0-9A-Za-z,\\-_]{1,10000}$/",
                                            "placeholder": "请输入标签所在列序号或者列名称",
                                            "toolTip": "标签列所在列序号或者列名称，列序号从1开始计数，不包含序号列。",
                                            "sequence": 1,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        }
                                    ]
                                },
                                {
                                    "id": 7531,
                                    "createTime": "2022-05-24T09:09:21.714+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "tabName": "超参数设置",
                                    "elements": [
                                        {
                                            "id": 20574,
                                            "createTime": "2022-05-24T09:09:21.714+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "gbdtsubsample",
                                            "label": "subsample",
                                            "defaultValue": null,
                                            "value": "1.0",
                                            "options": "",
                                            "rexp": "/^0\\.\\d*[1-9]\\d*$|^[1-9]\\.\\d*[1-9]\\d*e-[1-9]+$|^1\\.[0]*$/",
                                            "placeholder": "",
                                            "toolTip": "采样比例\n取值范围：（0,1]",
                                            "sequence": 0,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        },
                                        {
                                            "id": 20575,
                                            "createTime": "2022-05-24T09:09:21.714+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "gbdtlearning_rate",
                                            "label": "learning_rate",
                                            "defaultValue": null,
                                            "value": "0.1",
                                            "options": "",
                                            "rexp": "/^0\\.\\d*[1-9]\\d*$|^[1-9]\\.\\d*[1-9]\\d*e-[1-9]+$|^1\\.[0]*$/",
                                            "placeholder": "",
                                            "toolTip": "步长\n取值范围：（0,1]",
                                            "sequence": 1,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        },
                                        {
                                            "id": 20576,
                                            "createTime": "2022-05-24T09:09:21.714+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "gbdtn_estimators",
                                            "label": "n_estimators",
                                            "defaultValue": null,
                                            "value": "100",
                                            "options": "",
                                            "rexp": "/^[0-9]+$/",
                                            "placeholder": "",
                                            "toolTip": "最大的弱学习器数量\n取值范围：正整数",
                                            "sequence": 2,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        },
                                        {
                                            "id": 20577,
                                            "createTime": "2022-05-24T09:09:21.714+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "gbdtmax_depth",
                                            "label": "max_depth",
                                            "defaultValue": null,
                                            "value": "3",
                                            "options": "",
                                            "rexp": "/^[3-8]{1}$/",
                                            "placeholder": "",
                                            "toolTip": "决策树的最大深度\n取值范围：正整数常用 [3,8]",
                                            "sequence": 3,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        },
                                        {
                                            "id": 20578,
                                            "createTime": "2022-05-24T09:09:21.714+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "gbdtmin_samples_split",
                                            "label": "min_samples_split",
                                            "defaultValue": null,
                                            "value": "3",
                                            "options": "",
                                            "rexp": "/^[0-9]+$/",
                                            "placeholder": "",
                                            "toolTip": "节点再划分所需最小样本数\n取值范围：正整数",
                                            "sequence": 4,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        },
                                        {
                                            "id": 20579,
                                            "createTime": "2022-05-24T09:09:21.714+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "other_params",
                                            "label": "其他超参数设置",
                                            "defaultValue": null,
                                            "value": null,
                                            "options": "",
                                            "rexp": "/\\S/",
                                            "placeholder": "",
                                            "toolTip": "请输入配置的超参数。参数1=值1;参数2=值2",
                                            "sequence": 5,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": false
                                        }
                                    ]
                                }
                            ],
                            "inputs": [
                                {
                                    "id": 10403,
                                    "createTime": "2022-05-24T09:09:21.714+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "key": "data_in",
                                    "type": "INPUT",
                                    "cat": "DATA",
                                    "canPreview": true,
                                    "preViewMode": "ONLY100",
                                    "description": "输入",
                                    "model": false
                                }
                            ],
                            "outputs": [
                                {
                                    "id": 10404,
                                    "createTime": "2022-05-24T09:09:21.714+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "key": "model",
                                    "type": "OUTPUT",
                                    "cat": "MODEL",
                                    "canPreview": false,
                                    "preViewMode": "ONLY100",
                                    "description": "模型",
                                    "access": "SAME",
                                    "columns": "[]",
                                    "model": true
                                }
                            ],
                            "updateTime": "2022-05-24T09:09:21.711+0000",
                            "sequence": 2,
                            "extra": {
                                "type": "NORMAL",
                                "value": null,
                                "mainClass": null,
                                "engine": "PYTHON"
                            },
                            "script": {
                                "MAIN": "# <ALOGCLASSNAME>\n# GBDT\n# </ALOGCLASSNAME>\n\n# <EXECTUSCRIPT>\ndef execute(conn, inputs, params, outputs, reportFileName):\n\n    '''\n    载入模块\n    '''\n    from sklearn.pipeline import Pipeline\n    import os\n    import pickle\n    import db_utils\n    import joblib\n    import sys\n    import json\n    import warnings\n    import pandas as pd\n    from SourceCodeImporter import SourceCodeImporter\n    from sklearn.model_selection import train_test_split\n    from sklearn2pmml import PMMLPipeline, sklearn2pmml\n    from report_utils import ALogReport\n    from common import get_db_column\n    from common import get_feature\n    from common import get_label\n    from common import str_to_dict\n    from common import get_alog_info\n    from common import get_db_column_with_type\n    from common import keep_dot_after\n    warnings.filterwarnings(\"ignore\")\n    '''\n    载入redis连接信息\n    '''\n    redisParam = json.loads(params['redis'])\n    redisConn = db_utils.getRedisMasterConnection(redisParam['connectInfo'], redisParam['masterName'],\n                                                  redisParam['password'], redisParam['db'])\n    '''\n    远程模块载入\n    '''\n    alog_names = get_alog_info(redisConn)\n    s = SourceCodeImporter()\n    for name in alog_names:\n        code = db_utils.redisReadHsetFile(redisConn, \"alogclass\", name)\n        s.add(name, code.decode())\n    sys.meta_path.append(s)\n    from GBDT import GBDT\n    '''\n    获取输入数据\n    '''\n    keep_dot_after(db_type, inputs)\n    data_in = db_utils.query(conn, 'select * from ' + inputs['data_in'], db_type)\n\n    data_in_shape = data_in.shape\n    '''\n    转换后的参数\n    '''\n    db_columns = get_db_column_with_type(db_type, inputs, conn)\n    columns_values = get_feature(db_columns, params['gbdtinputfeaturecolumn'])\n    label_column = get_label(db_columns, params['gbdtlabelcolumn'])\n    '''\n       存放临时超时参数\n       '''\n    params['other_params_dict'] = str_to_dict(params['other_params'])\n    '''\n    管道处理\n    '''\n    gbdt = GBDT(params, columns_values, label_column)\n    # x_train, x_test, y_train, y_test = train_test_split(data_in[columns_values],\n    #                                                     data_in[label_column],\n    #                                                     train_size=float(params['gbdttrainingset']),\n    #                                                     test_size=float(params['gbdttestset']))\n\n    gbdt.fit(data_in[columns_values], data_in[label_column])\n    # y_predict = pd.DataFrame(gbdt.clf.predict(x_test), columns=['y_predict'])\n    '''\n    保存文件到redis\n    '''\n    pipeline_pkl_name = outputs['model'].split('_', 1)[0]\n    joblib.dump(gbdt, params['pipeline_file'] + \"pkl_\" + pipeline_pkl_name, compress=3)\n    fileObject = pickle.dumps(joblib.load(params['pipeline_file'] + \"pkl_\" + pipeline_pkl_name))\n    os.remove(params['pipeline_file'] + \"pkl_\" + pipeline_pkl_name)\n    '''\n    保存pkl的二进制文件到redis中\n    '''\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"pkl_\" + pipeline_pkl_name, fileObject)\n    '''\n    模型输出\n    '''\n    joblib.dump(gbdt, params['pipeline_file'] + \"model_\" + pipeline_pkl_name, compress=3)\n    fileObject = pickle.dumps(joblib.load(params['pipeline_file'] + \"model_\" + pipeline_pkl_name))\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"model_\" + pipeline_pkl_name, fileObject)\n    os.remove(params['pipeline_file'] + \"model_\" + pipeline_pkl_name)\n    '''\n    获取当前节点的前置节点\n    '''\n    pipeline_list = []\n    redisConn_slave = db_utils.getRedisSlaveConnection(redisParam['connectInfo'], redisParam['masterName'],\n                                                       redisParam['password'], redisParam['db'])\n    for pkl_file in json.loads(params['pipelines']):\n        pkl_obj = db_utils.redisReadHsetFile(redisConn_slave, params['project_id'], \"pkl_\" + str(pkl_file))\n        if pkl_obj == None:\n            continue\n        pipeline_list.append((str(pkl_file), pickle.loads(pkl_obj)))\n\n    pipeline_list.append(('classifier', gbdt))\n    '''\n    pipeline模型输出\n    '''\n    pipeline = Pipeline(pipeline_list)\n    joblib.dump(pipeline, params['pipeline_file'] + \"pipeline_\" + pipeline_pkl_name, compress=3)\n    fileObject = pickle.dumps(joblib.load(params['pipeline_file'] + \"pipeline_\" + pipeline_pkl_name))\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"pipeline_\" + pipeline_pkl_name, fileObject)\n    os.remove(params['pipeline_file'] + \"pipeline_\" + pipeline_pkl_name)\n\n    '''\n    模型文件导出\n    '''\n    try:\n        pipeline = PMMLPipeline([(\"classifier\", gbdt.clf)])\n        pipeline.fit(data_in[columns_values], data_in[label_column])\n        sklearn2pmml(pipeline, \"test_gbdt.pmml\", debug=False)\n        with open(\"test_gbdt.pmml\", \"r\") as f:\n            pmml_str = f.read()\n            db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"sp_model_pmml_\" + pipeline_pkl_name, pmml_str)\n        os.remove(\"test_gbdt.pmml\")\n    except Exception as e:\n        print(\"pmml模型导出失败:{}\\n\".format(e))\n\n    '''\n    保存模型pkl的参数到redis\n    '''\n    pkl_params = {}\n    for i, v in data_in.dtypes.items():\n        pkl_params[str(i)]=str(v)\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"params_\" + pipeline_pkl_name, str(pkl_params))\n    '''\n    报表输出\n    '''\n    model_params = {}\n    model_params['训练标签'] = ','.join(columns_values)\n    model_params['标记标签'] = label_column\n    # model_params['测试集'] = params['gbdttrainingset']\n    # model_params['训练'] = params['gbdttestset']\n    model_params['n_estimators'] = params['gbdtn_estimators']\n    model_params['max_depth'] = params['gbdtmax_depth']\n    model_params['min_samples_split'] = params['gbdtmin_samples_split']\n    model_params['learning_rate '] = params['gbdtlearning_rate']\n    model_params['subsample'] = params['gbdtsubsample']\n\n    report = ALogReport().report_train('GBDT 评估报告', model_params)\n\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"report_json_\" + reportFileName, json.dumps(report, ensure_ascii=False))\n\n    # '''\n    # 数据输出\n    # '''\n    # data_out = gbdt.transform(data_in)\n    # '''\n    # 构建输出结果的shape\n    # '''\n    # db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"shape_\" + outputs['data_out'], str(data_out.shape[0]) + \",\" + str(data_out.shape[1]))\n    #\n    # change_shape = {\n    #     'data_in': {\n    #         'startAt': 1,\n    #         'endAt': data_in_shape[1]\n    #     },\n    #     'data_out': {\n    #         'startAt': 1,\n    #         'endAt': data_out.shape[1]\n    #     },\n    #     \"change\": {\n    #         'startAt': data_in_shape[1] + 1,\n    #         'endAt': data_out.shape[1]\n    #     }\n    # }\n    # db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"change_shape_\" + pipeline_pkl_name,json.dumps(change_shape))\n    #\n    # '''\n    # 将结果写出\n    # '''\n    # db_utils.write_db_table(db_type=db_type, conn=conn, table_name=outputs['data_out'], data_frame=data_out,\n    #                         client=client, schema=inputs['schema'], hdfs_path=hdfsTmpPath)\n\n# </EXECTUSCRIPT>\n\n# import  db_utils\n# db_type = 1\n# if db_type == 1:\n#     conn = db_utils.get_connection(db_type=db_type, host=\"192.168.198.108\", port=\"10000\", dbname=\"yq_yzx\", user=\"yangqing_yzx\", password=\"12qw#$ER\")\n#     client = db_utils.hdfs_client(hadoop_path=\"http://192.168.198.105:50070\")\n# else:\n#     client = None\n#     conn = db_utils.get_connection(db_type=db_type, host='192.168.198.172', port='15434', dbname='mlp', user='postgres', password='pgsql123456',schema='admin')\n# inputs = {'data_in':'\"admin\".\"10001425_0_1\"','schema':'admin'}\n# outputs= {'data_out':'10000399_0_2'}\n# params = {'project_id':'project_14','gbdtinputfeaturecolumn': '1-3', 'gbdtlabelcolumn': '4', 'gbdttrainingset': '0.5', 'gbdttestset': '0.5',\n#           'gbdtn_estimators': '1', 'gbdtmax_depth': '1','gbdtmin_samples_split':'2','gbdtsubsample':'0.6','gbdtlearning_rate':'3',\n#           'other_params': '',\n#          'pipeline_file': '/tmp/pyserve/pipeline/'\n#     , \"redis\": \"{\\\"connectInfo\\\":[[\\\"192.168.198.220\\\",\\\"26380\\\"],[\\\"192.168.198.221\\\",\\\"26380\\\"],[\\\"192.168.198.222\\\",\\\"26380\\\"]],\\\"masterName\\\":\\\"mymaster\\\",\\\"password\\\":\\\"123456\\\",\\\"db\\\":0}\"\n#     , \"pipelines\": \"[10000426]\"\n#           }\n# execute(conn=conn, inputs=inputs, outputs=outputs, params=params, reportFileName='1000001.html')"
                            },
                            "supportPmml": true,
                            "children": null,
                            "parameters": {
                                "gbdtinputfeaturecolumn": "",
                                "gbdtn_estimators": "100",
                                "gbdtmin_samples_split": "3",
                                "gbdtlearning_rate": "0.1",
                                "gbdtsubsample": "1.0",
                                "gbdtmax_depth": "3",
                                "gbdtlabelcolumn": "",
                                "other_params": ""
                            }
                        },
                        {
                            "id": 54,
                            "createTime": "2022-04-28T12:14:04.577+0000",
                            "creatorId": 104,
                            "creatorName": "ct_kuke",
                            "name": "2345",
                            "targetAlgorithm": null,
                            "parentId": 10047,
                            "enabled": true,
                            "paralleled": false,
                            "component": true,
                            "allowViewSource": null,
                            "iconPath": null,
                            "minimumInput": null,
                            "inBuilt": false,
                            "hasReport": null,
                            "description": "11111111",
                            "tabs": [],
                            "inputs": [
                                {
                                    "id": 6739,
                                    "key": "data_in",
                                    "type": "INPUT",
                                    "cat": "DATA",
                                    "canPreview": false,
                                    "preViewMode": "ONLY100",
                                    "model": false
                                }
                            ],
                            "outputs": [
                                {
                                    "id": 6740,
                                    "key": "data_out",
                                    "type": "OUTPUT",
                                    "cat": "DATA",
                                    "canPreview": true,
                                    "preViewMode": "ONLY100",
                                    "access": "SAME",
                                    "columns": "[]",
                                    "model": false
                                }
                            ],
                            "updateTime": "2022-04-28T12:14:42.481+0000",
                            "sequence": null,
                            "extra": {
                                "type": "SCRIPT",
                                "value": null,
                                "mainClass": null,
                                "engine": "PYTHON"
                            },
                            "script": {
                                "MAIN": "  # <ALOGCLASSNAME>  name# </ALOGCLASSNAME> # <EXECTUSCRIPT> resultscript# </EXECTUSCRIPT>\\n\\n\n"
                            },
                            "supportPmml": null,
                            "children": null,
                            "parameters": {}
                        },
                        {
                            "id": 53,
                            "creatorId": 104,
                            "creatorName": "ct_kuke",
                            "name": "213124",
                            "targetAlgorithm": null,
                            "parentId": 10047,
                            "enabled": true,
                            "paralleled": false,
                            "component": true,
                            "allowViewSource": null,
                            "iconPath": null,
                            "minimumInput": null,
                            "inBuilt": null,
                            "hasReport": null,
                            "description": "111",
                            "tabs": [],
                            "inputs": [
                                {
                                    "id": 6735,
                                    "key": "data_in",
                                    "type": "INPUT",
                                    "cat": "DATA",
                                    "canPreview": false,
                                    "preViewMode": "ONLY100",
                                    "model": false
                                }
                            ],
                            "outputs": [
                                {
                                    "id": 6736,
                                    "key": "data_out",
                                    "type": "OUTPUT",
                                    "cat": "DATA",
                                    "canPreview": true,
                                    "preViewMode": "ONLY100",
                                    "access": "SAME",
                                    "columns": "[]",
                                    "model": false
                                }
                            ],
                            "updateTime": "2022-04-28T12:03:07.843+0000",
                            "sequence": null,
                            "extra": {
                                "type": "SCRIPT",
                                "value": null,
                                "mainClass": null,
                                "engine": "PYTHON"
                            },
                            "script": {
                                "MAIN": "  # <ALOGCLASSNAME>  name# </ALOGCLASSNAME> # <EXECTUSCRIPT> resultscript# </EXECTUSCRIPT>\\n\\n\n"
                            },
                            "supportPmml": null,
                            "children": null,
                            "parameters": {}
                        },
                        {
                            "id": 38,
                            "creatorId": 104,
                            "creatorName": "ct_kuke",
                            "name": "3",
                            "targetAlgorithm": null,
                            "parentId": 10047,
                            "enabled": true,
                            "paralleled": false,
                            "component": true,
                            "allowViewSource": null,
                            "iconPath": null,
                            "minimumInput": null,
                            "inBuilt": false,
                            "hasReport": null,
                            "description": "",
                            "tabs": [],
                            "inputs": [
                                {
                                    "id": 6602,
                                    "key": "data_in",
                                    "type": "INPUT",
                                    "cat": "DATA",
                                    "canPreview": false,
                                    "preViewMode": "ONLY100",
                                    "model": false
                                }
                            ],
                            "outputs": [
                                {
                                    "id": 6603,
                                    "key": "data_out",
                                    "type": "OUTPUT",
                                    "cat": "DATA",
                                    "canPreview": true,
                                    "preViewMode": "ONLY100",
                                    "access": "SAME",
                                    "columns": "[]",
                                    "model": false
                                }
                            ],
                            "updateTime": "2022-04-27T08:56:29.918+0000",
                            "sequence": null,
                            "extra": {
                                "type": "SCRIPT",
                                "value": null,
                                "mainClass": null,
                                "engine": "PYTHON"
                            },
                            "script": {
                                "MAIN": "  # <ALOGCLASSNAME>  name# </ALOGCLASSNAME> # <EXECTUSCRIPT> resultscript# </EXECTUSCRIPT>\n"
                            },
                            "supportPmml": null,
                            "children": null,
                            "parameters": {}
                        },
                        {
                            "id": 36,
                            "creatorId": 104,
                            "creatorName": "ct_kuke",
                            "name": "testoc",
                            "targetAlgorithm": null,
                            "parentId": 10047,
                            "enabled": true,
                            "paralleled": false,
                            "component": true,
                            "allowViewSource": null,
                            "iconPath": null,
                            "minimumInput": null,
                            "inBuilt": false,
                            "hasReport": null,
                            "description": "",
                            "tabs": [
                                {
                                    "id": 4897,
                                    "tabName": "参数设置",
                                    "elements": [
                                        {
                                            "id": 13406,
                                            "name": "11",
                                            "label": "22",
                                            "defaultValue": "333",
                                            "value": "333",
                                            "options": "",
                                            "rexp": "",
                                            "placeholder": null,
                                            "toolTip": "444",
                                            "sequence": 1,
                                            "elementType": 1,
                                            "extra": {},
                                            "visible": true,
                                            "required": false
                                        }
                                    ]
                                },
                                {
                                    "id": 4898,
                                    "tabName": "自定义衍生",
                                    "elements": [
                                        {
                                            "id": 13407,
                                            "name": "22",
                                            "label": "22",
                                            "defaultValue": "114",
                                            "value": "114",
                                            "options": "",
                                            "rexp": "",
                                            "placeholder": null,
                                            "toolTip": "",
                                            "sequence": 1,
                                            "elementType": 2,
                                            "extra": {},
                                            "visible": true,
                                            "required": false
                                        }
                                    ]
                                }
                            ],
                            "inputs": [
                                {
                                    "id": 6604,
                                    "key": "data_in",
                                    "type": "INPUT",
                                    "cat": "DATA",
                                    "canPreview": false,
                                    "preViewMode": "ONLY100",
                                    "model": false
                                }
                            ],
                            "outputs": [
                                {
                                    "id": 6605,
                                    "key": "data_out",
                                    "type": "OUTPUT",
                                    "cat": "DATA",
                                    "canPreview": true,
                                    "preViewMode": "ONLY100",
                                    "access": "SAME",
                                    "columns": "[]",
                                    "model": false
                                }
                            ],
                            "updateTime": "2022-04-27T08:56:39.247+0000",
                            "sequence": null,
                            "extra": {
                                "type": "SCRIPT",
                                "value": null,
                                "mainClass": null,
                                "engine": "PYTHON"
                            },
                            "script": {
                                "MAIN": "  # <ALOGCLASSNAME>  name# </ALOGCLASSNAME> # <EXECTUSCRIPT> resultscript# </EXECTUSCRIPT>\n"
                            },
                            "supportPmml": null,
                            "children": null,
                            "parameters": {
                                "11": "333",
                                "22": "114"
                            }
                        },
                        {
                            "id": 52,
                            "creatorId": 104,
                            "creatorName": "ct_kuke",
                            "name": "21111111",
                            "targetAlgorithm": null,
                            "parentId": 10047,
                            "enabled": true,
                            "paralleled": false,
                            "component": true,
                            "allowViewSource": null,
                            "iconPath": null,
                            "minimumInput": null,
                            "inBuilt": false,
                            "hasReport": null,
                            "description": "",
                            "tabs": [],
                            "inputs": [
                                {
                                    "id": 6731,
                                    "key": "data_in",
                                    "type": "INPUT",
                                    "cat": "DATA",
                                    "canPreview": false,
                                    "preViewMode": "ONLY100",
                                    "model": false
                                }
                            ],
                            "outputs": [
                                {
                                    "id": 6732,
                                    "key": "data_out",
                                    "type": "OUTPUT",
                                    "cat": "DATA",
                                    "canPreview": true,
                                    "preViewMode": "ONLY100",
                                    "access": "SAME",
                                    "columns": "[]",
                                    "model": false
                                }
                            ],
                            "updateTime": "2022-04-28T09:45:02.990+0000",
                            "sequence": null,
                            "extra": {
                                "type": "SCRIPT",
                                "value": null,
                                "mainClass": null,
                                "engine": "PYTHON"
                            },
                            "script": {
                                "MAIN": "  # <ALOGCLASSNAME>  name# </ALOGCLASSNAME> # <EXECTUSCRIPT> resultscript# </EXECTUSCRIPT>\\n\\n\n"
                            },
                            "supportPmml": null,
                            "children": null,
                            "parameters": {}
                        }
                    ],
                    "parameters": {}
                },
                {
                    "id": 10062,
                    "createTime": "2022-05-24T09:09:25.088+0000",
                    "creatorId": 100,
                    "creatorName": "admin",
                    "name": "模型预测",
                    "targetAlgorithm": null,
                    "parentId": 10046,
                    "enabled": true,
                    "paralleled": false,
                    "component": false,
                    "allowViewSource": true,
                    "iconPath": "icontezhenggongcheng-01",
                    "minimumInput": 0,
                    "inBuilt": true,
                    "hasReport": false,
                    "description": null,
                    "tabs": [],
                    "inputs": [],
                    "outputs": [],
                    "updateTime": "2022-05-24T09:09:25.088+0000",
                    "sequence": 2,
                    "extra": {
                        "type": "NORMAL",
                        "value": null,
                        "mainClass": null,
                        "engine": "PYTHON"
                    },
                    "script": {},
                    "supportPmml": false,
                    "children": [
                        {
                            "id": 10060,
                            "createTime": "2022-05-24T09:09:25.223+0000",
                            "creatorId": 100,
                            "creatorName": "admin",
                            "name": "预测",
                            "targetAlgorithm": "com.yzx.mlp.scheduling.core.alog.unparallel.engine.pythonengine.PythonCommonAlgorithm",
                            "parentId": 10062,
                            "enabled": true,
                            "paralleled": false,
                            "component": true,
                            "allowViewSource": true,
                            "iconPath": "icontezhenggongcheng-01",
                            "minimumInput": 2,
                            "inBuilt": true,
                            "hasReport": true,
                            "description": "预测",
                            "tabs": [
                                {
                                    "id": 7541,
                                    "createTime": "2022-05-24T09:09:25.224+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "tabName": "字段设置",
                                    "elements": [
                                        {
                                            "id": 20622,
                                            "createTime": "2022-05-24T09:09:25.224+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "predict_input_feature_column",
                                            "label": "输入特征列",
                                            "defaultValue": null,
                                            "value": null,
                                            "options": "",
                                            "rexp": "/^[0-9A-Za-z,\\-_]{1,10000}$/",
                                            "placeholder": "请输入特征所在列序号或者列名称",
                                            "toolTip": "表示需处理的特征所在列序号或者列名称，如“1-3,10,column1”,表示取特征在表中的1到3列，10列 和字段名称为column1的列，列序号从1开始计数，不包含序号列。",
                                            "sequence": 0,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        },
                                        {
                                            "id": 20623,
                                            "createTime": "2022-05-24T09:09:25.224+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "predict_label_column",
                                            "label": "标签列",
                                            "defaultValue": null,
                                            "value": null,
                                            "options": "",
                                            "rexp": "/^[0-9A-Za-z,\\-_]{1,10000}$/",
                                            "placeholder": "请输入标签所在列序号或者列名称，如：1",
                                            "toolTip": "标签列所在列序号或者列名称，从1开始计数，不包含序号列。",
                                            "sequence": 1,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        }
                                    ]
                                },
                                {
                                    "id": 7542,
                                    "createTime": "2022-05-24T09:09:25.224+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "tabName": "参数设置",
                                    "elements": [
                                        {
                                            "id": 20624,
                                            "createTime": "2022-05-24T09:09:25.224+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "predict_result_column_name",
                                            "label": "输出结果列名",
                                            "defaultValue": null,
                                            "value": "predict_result",
                                            "options": "",
                                            "rexp": "/\\S/",
                                            "placeholder": "",
                                            "toolTip": "",
                                            "sequence": 0,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        },
                                        {
                                            "id": 20625,
                                            "createTime": "2022-05-24T09:09:25.224+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "predict_score_column_name",
                                            "label": "输出分数列名",
                                            "defaultValue": null,
                                            "value": "predict_score",
                                            "options": "",
                                            "rexp": "/\\S/",
                                            "placeholder": "",
                                            "toolTip": "",
                                            "sequence": 2,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        },
                                        {
                                            "id": 20626,
                                            "createTime": "2022-05-24T09:09:25.224+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "predict_detail_column_name",
                                            "label": "输出详情列名",
                                            "defaultValue": null,
                                            "value": "predict_detail",
                                            "options": "",
                                            "rexp": "/\\S/",
                                            "placeholder": "",
                                            "toolTip": "",
                                            "sequence": 3,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        }
                                    ]
                                }
                            ],
                            "inputs": [
                                {
                                    "id": 10413,
                                    "createTime": "2022-05-24T09:09:25.224+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "key": "data_in",
                                    "type": "INPUT",
                                    "cat": "DATA",
                                    "canPreview": true,
                                    "preViewMode": "ONLY100",
                                    "description": "输入",
                                    "model": false
                                },
                                {
                                    "id": 10414,
                                    "createTime": "2022-05-24T09:09:25.224+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "key": "model",
                                    "type": "INPUT",
                                    "cat": "MODEL",
                                    "canPreview": false,
                                    "preViewMode": "ONLY100",
                                    "description": "模型",
                                    "model": true
                                }
                            ],
                            "outputs": [
                                {
                                    "id": 10415,
                                    "createTime": "2022-05-24T09:09:25.224+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "key": "data_out",
                                    "type": "OUTPUT",
                                    "cat": "DATA",
                                    "canPreview": true,
                                    "preViewMode": "ONLY100",
                                    "description": "输出",
                                    "access": "SAME",
                                    "columns": "[]",
                                    "model": false
                                }
                            ],
                            "updateTime": "2022-05-24T09:09:25.223+0000",
                            "sequence": 2,
                            "extra": {
                                "type": "NORMAL",
                                "value": null,
                                "mainClass": null,
                                "engine": "PYTHON"
                            },
                            "script": {
                                "MAIN": "# <ALOGCLASSNAME>\n# ModelPredict\n# </ALOGCLASSNAME>\n\n# <EXECTUSCRIPT>\ndef execute(conn, inputs, params, outputs, reportFileName):\n\n    '''\n    载入模块\n    '''\n    from sklearn.pipeline import Pipeline\n    import os\n    import pickle\n    import db_utils\n    import joblib\n    import sys\n    import json\n    import warnings\n    from report_utils import ALogReport\n    from common import get_db_column\n    from common import get_feature\n    from common import get_alog_info\n    from common import get_label\n    from SourceCodeImporter import SourceCodeImporter\n    from common import get_db_column_with_type\n    from common import keep_dot_after\n\n    warnings.filterwarnings(\"ignore\")\n    '''\n    载入redis连接信息\n    '''\n    redisParam = json.loads(params['redis'])\n    redisConn = db_utils.getRedisMasterConnection(redisParam['connectInfo'], redisParam['masterName'],\n                                                  redisParam['password'], redisParam['db'])\n    '''\n    远程模块载入\n    '''\n    '''\n    远程模块载入\n    '''\n    alog_names = get_alog_info(redisConn)\n    s = SourceCodeImporter()\n    for name in alog_names:\n        code = db_utils.redisReadHsetFile(redisConn, \"alogclass\", name)\n        s.add(name, code.decode())\n    sys.meta_path.append(s)\n    from ModelPredict import ModelPredict\n    # from pipeline.alogclass.ModelPredict import ModelPredict\n\n    '''\n    获取输入数据\n    '''\n    keep_dot_after(db_type, inputs)\n    data_in = db_utils.query(conn, 'select * from ' + inputs['data_in'], db_type)\n    data_in_shape = data_in.shape\n\n    model = db_utils.redisReadHsetFile(redisConn, params['project_id'], \"model_\" + inputs['model'].split('_', 1)[0])\n    service_model = pickle.loads(model)\n\n    '''\n    转换后的参数\n    '''\n    db_columns = get_db_column_with_type(db_type, inputs, conn)\n    columns_values = get_feature(db_columns, params['predict_input_feature_column'])\n    label_column = get_label(db_columns, params['predict_label_column'])\n\n    '''\n    管道处理\n    '''\n    model_predict = ModelPredict(params, columns_values,label_column, service_model)\n    model_predict.fit()\n    data_out = model_predict.transform(data_in)\n\n    '''\n    保存文件到redis\n    '''\n    pipeline_pkl_name = outputs['data_out'].split('_', 1)[0]\n    joblib.dump(model_predict, params['pipeline_file']+\"pkl_\" + pipeline_pkl_name, compress=3)\n    fileObject = pickle.dumps(joblib.load(params['pipeline_file']+\"pkl_\" + pipeline_pkl_name))\n    os.remove(params['pipeline_file']+\"pkl_\" + pipeline_pkl_name)\n    '''\n    保存pkl的二进制文件到redis中\n    '''\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"pkl_\" + pipeline_pkl_name, fileObject)\n    '''\n    保存模型pkl的参数到redis\n    '''\n    pkl_params = {}\n    for i, v in data_in.dtypes.items():\n        pkl_params[str(i)]=str(v)\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"params_\" + pipeline_pkl_name, str(pkl_params))\n\n    '''\n    构建pipeline\n    '''\n    pipe = Pipeline([\n        ('ModelPredict', model_predict)\n    ])\n    data_out = pipe.transform(data_in)\n\n    report = ALogReport().report_predict(data_out[label_column], data_out[params[\"predict_result_column_name\"]], 'LIGHTGBM 评估报告')\n\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"report_json_\" + reportFileName, json.dumps(report, ensure_ascii=False))\n\n    '''\n    构建输出结果的shape\n    '''\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"shape_\" + outputs['data_out'], str(data_out.shape[0]) + \",\" + str(data_out.shape[1]))\n\n    change_shape = {\n        'data_in': {\n            'startAt': 1,\n            'endAt': data_in_shape[1]\n        },\n        'data_out': {\n            'startAt': 1,\n            'endAt': data_out.shape[1]\n        },\n        \"change\": {\n            'startAt': data_in_shape[1] + 1,\n            'endAt': data_out.shape[1]\n        }\n    }\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"change_shape_\" + pipeline_pkl_name,json.dumps(change_shape))\n\n    '''\n    将结果写出\n    '''\n    db_utils.write_db_table(db_type=db_type, conn=conn, table_name=outputs['data_out'], data_frame=data_out,\n                            client=client, schema=inputs['schema'], hdfs_path=hdfsTmpPath, delimiter=\";\")\n\n# </EXECTUSCRIPT>\n\n# import db_utils\n# db_type = 1\n# if db_type == 1:\n#     conn = db_utils.get_connection(db_type=db_type, host=\"192.168.198.108\", port=\"10000\", dbname=\"yq_yzx\", user=\"yangqing_yzx\", password=\"12qw#$ER\")\n#     client = db_utils.hdfs_client(hadoop_path=\"http://192.168.198.105:50070\", user='yangqing_yzx')\n# else:\n#     client = None\n#     conn = db_utils.get_connection(db_type=db_type, host='192.168.198.172', port='15434', dbname='mlp', user='postgres', password='pgsql123456',schema='admin')\n# inputs1 = {'data_in':'\"admin\".\"10002082_0_1\"','schema':'admin'}\n# outputs1= {'data_out':'10000171_0_4'}\n# params1 = {'project_id': 'project_5',\n#            'feature_columns': '2-5',\n#            'pipeline_file': '/tmp/pyserve/pipeline/',\n#            \"diyfunctioncontent\": 'def feature_handle_diy(data_in):\\n\\tdata_in+=10\\n\\treturn data_in',\n#            \"redis\": \"{\\\"connectInfo\\\":[[\\\"192.168.198.220\\\",\\\"26380\\\"],[\\\"192.168.198.221\\\",\\\"26380\\\"],[\\\"192.168.198.222\\\",\\\"26380\\\"]],\\\"masterName\\\":\\\"mymaster\\\",\\\"password\\\":\\\"123456\\\",\\\"db\\\":0}\"\n#            }\n# execute(conn=conn,inputs=inputs1,outputs=outputs1,params=params1,reportFileName=\"comb.html\")\n\n# import db_utils\n# import report_utils\n# conn = None\n# report = report_utils.Report()\n# model = None\n# db_type=1\n# hdfsTmpPath='/tmp/mlp/'\n# try:\n#     if db_type==1:\n#         conn=db_utils.get_connection(db_type=db_type, host=\"192.168.198.108\", port=\"10000\", dbname=\"yq_yzx\", user=\"yangqing_yzx\", password=\"12qw#$ERx\")\n#         client = db_utils.hdfs_client(hadoop_path='http://192.168.198.105:50070/', user='yangqing_yzx')\n#     else:\n#         client = None\n#         conn=db_utils.get_connection(db_type=db_type, host='192.168.198.108', port='10000', dbname='yq_yzx', user='yangqing_yzx', password='12qw#$ERx',schema='yangqing_yzx')\n#     inputs = {}\n#     inputs['model'] = '10003196_0_1'\n#     inputs['data_in'] = '\"10003195_0_2\"'\n#     inputs['schema'] = 'yangqing_yzx'\n#     outputs = {}\n#     outputs['data_out'] = '10003198_0_1'\n#     params = {}\n#     params['predict_label_column'] = '1'\n#     params['predict_score_column_name'] = 'predict_score'\n#     params['pipelines'] = '[]'\n#     params['project_id'] = 'project_3782'\n#     params['pipeline_file'] = '/tmp/pyserve/pipeline/'\n#     params['predict_detail_column_name'] = 'predict_detail'\n#     params['predict_input_feature_column'] = '1'\n#     params['predict_result_column_name'] = 'predict_result'\n#     params['redis'] = '{\"connectInfo\":[[\"192.168.198.138\",\"16580\"],[\"192.168.198.138\",\"16581\"],[\"192.168.198.138\",\"16582\"]],\"db\":0,\"masterName\":\"machine\",\"password\":\"123456\"}'\n#     reportFileName = \"10003198.html\"\n#     model = execute(conn, inputs, params, outputs, reportFileName)\n# finally:\n#     if model != None:\n#         sklearn2pmml(model,  '/tmp/pyserve/model/null', with_repr=True, debug=False)\n#     db_utils.closeConnection(conn)"
                            },
                            "supportPmml": false,
                            "children": null,
                            "parameters": {
                                "predict_label_column": "",
                                "predict_score_column_name": "predict_score",
                                "predict_detail_column_name": "predict_detail",
                                "predict_input_feature_column": "",
                                "predict_result_column_name": "predict_result"
                            }
                        }
                    ],
                    "parameters": {}
                }
            ],
            "parameters": {}
        },
        {
            "id": 10033,
            "createTime": "2022-05-24T09:09:25.445+0000",
            "creatorId": 100,
            "creatorName": "admin",
            "name": "输出",
            "targetAlgorithm": null,
            "parentId": 0,
            "enabled": true,
            "paralleled": false,
            "component": false,
            "allowViewSource": true,
            "iconPath": "iconshuchu-01",
            "minimumInput": 0,
            "inBuilt": true,
            "hasReport": false,
            "description": null,
            "tabs": [],
            "inputs": [],
            "outputs": [],
            "updateTime": "2022-05-24T09:09:25.445+0000",
            "sequence": 5,
            "extra": {
                "type": "NORMAL",
                "value": null,
                "mainClass": null,
                "engine": "PYTHON"
            },
            "script": {},
            "supportPmml": false,
            "children": [
                {
                    "id": 10034,
                    "createTime": "2022-05-24T09:09:25.700+0000",
                    "creatorId": 100,
                    "creatorName": "admin",
                    "name": "模型评估",
                    "targetAlgorithm": null,
                    "parentId": 10033,
                    "enabled": true,
                    "paralleled": false,
                    "component": false,
                    "allowViewSource": true,
                    "iconPath": "iconshuchu-01",
                    "minimumInput": 0,
                    "inBuilt": true,
                    "hasReport": false,
                    "description": null,
                    "tabs": [],
                    "inputs": [],
                    "outputs": [],
                    "updateTime": "2022-05-24T09:09:25.700+0000",
                    "sequence": 0,
                    "extra": {
                        "type": "NORMAL",
                        "value": null,
                        "mainClass": null,
                        "engine": "PYTHON"
                    },
                    "script": {},
                    "supportPmml": false,
                    "children": [
                        {
                            "id": 10035,
                            "createTime": "2022-05-24T09:09:25.852+0000",
                            "creatorId": 100,
                            "creatorName": "admin",
                            "name": "PR曲线",
                            "targetAlgorithm": "com.yzx.mlp.scheduling.core.alog.unparallel.engine.pythonengine.PythonCommonAlgorithm",
                            "parentId": 10034,
                            "enabled": true,
                            "paralleled": false,
                            "component": true,
                            "allowViewSource": true,
                            "iconPath": "iconshuchu-01",
                            "minimumInput": 1,
                            "inBuilt": true,
                            "hasReport": true,
                            "description": "描述：PR（precision recall）曲线表现的是 precision 和 recall 之间的关系。其中，横轴是 precision，纵轴是 recall。",
                            "tabs": [
                                {
                                    "id": 7543,
                                    "createTime": "2022-05-24T09:09:25.854+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "tabName": "字段设置",
                                    "elements": []
                                }
                            ],
                            "inputs": [
                                {
                                    "id": 10416,
                                    "createTime": "2022-05-24T09:09:25.854+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "key": "data_in",
                                    "type": "INPUT",
                                    "cat": "DATA",
                                    "canPreview": true,
                                    "preViewMode": "ONLY100",
                                    "description": "输入",
                                    "model": false
                                }
                            ],
                            "outputs": [],
                            "updateTime": "2022-05-24T09:09:25.852+0000",
                            "sequence": 0,
                            "extra": {
                                "type": "NORMAL",
                                "value": null,
                                "mainClass": null,
                                "engine": "PYTHON"
                            },
                            "script": {
                                "MAIN": "# <ALOGCLASSNAME>\n# undefined\n# </ALOGCLASSNAME>\n\n# <EXECTUSCRIPT>\ndef execute(conn, inputs, params, outputs, reportFileName):\n\n    '''\n    载入模块\n    '''\n    import db_utils\n    import warnings\n    import pandas as pd\n    import scikitplot as skplt\n    import json\n    import matplotlib.pyplot as plt\n    from sklearn import metrics\n    from common import get_db_column\n    from common import get_feature\n    from common import get_label\n    from report_utils import Report\n    from common import get_db_column_with_type\n    from common import keep_dot_after\n    import ast\n    warnings.filterwarnings(\"ignore\")\n\n\n    redisParam = json.loads(params['redis'])\n    redisConn = db_utils.getRedisMasterConnection(redisParam['connectInfo'], redisParam['masterName'],\n                                                  redisParam['password'], redisParam['db'])\n\n    '''\n    转换后的参数\n    '''\n    keep_dot_after(db_type, inputs)\n    # db_columns = get_db_column_with_type(db_type, inputs, conn)\n    # columns_values = get_feature(db_columns, params['prforecastcolumn'])\n    # columns_values = ['ml_predict_0', 'ml_predict_1']\n    # label_column = get_label(db_columns, params['prlabelcolumn'])\n\n    '''\n    选择目标数据\n    '''\n    data_in = db_utils.query(conn,\n                             'select * from ' + inputs['data_in'], db_type)\n\n    data_in_shape = data_in.shape\n\n    y_test = data_in.iloc[:, 0]\n\n    '''\n    读取数据\n    '''\n    y_test = y_test.astype(float)\n    y_probas = data_in.iloc[:, -1]\n    y_probas = [ast.literal_eval(i) for i in y_probas.to_list()]\n    y_probas = pd.DataFrame(data= y_probas)\n\n    '''\n       计算指标\n    '''\n    y_predict = data_in.iloc[:, 1]\n    metric1_value = pd.DataFrame(columns=['指标', '数值'])\n    y_metric_predict = y_predict.astype(float)\n    precision, recall, thresholds = metrics.precision_recall_curve(y_test, y_metric_predict, pos_label=1)\n    areaUnderPR_value = metrics.auc(recall, precision)\n    areaUnderPR = pd.DataFrame({'指标': 'areaUnderPR', '数值': areaUnderPR_value}, index=[0]).fillna(value=\"None\")\n    metric1_value = metric1_value.append(areaUnderPR, ignore_index=True)\n\n    '''\n       报告\n    '''\n    report = Report()\n    report.h1('PR 评估报告')\n    report.h3('模型评价指标')\n    report.table(metric1_value)\n    '''\n      绘制RR曲线\n    '''\n    skplt.metrics.plot_precision_recall_curve(y_true=y_test, y_probas=y_probas)\n    plt.xlabel('recall')\n    plt.ylabel('precision')\n    plt.title('PR')\n    plt.legend(loc=\"lower right\")\n    plt.savefig('pr.png')\n    plt.show()\n    report.h3('Precision-Recall图')\n    report.image('pr.png')\n    report.writeToHtml(reportFileName)\n\n    import os\n    with open(reportFileName) as file_obj:\n        report_result = file_obj.read()\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"report_\" + reportFileName, report_result)\n    os.remove(reportFileName)\n\n# </EXECTUSCRIPT>\n\n#  没有通过\n# import db_utils\n# db_type = 0\n# if db_type == 1:\n#     conn = db_utils.get_connection(db_type=db_type, host=\"192.168.198.108\", port=\"10000\", dbname=\"yq_yzx\", user=\"yangqing_yzx\", password=\"12qw#$ER\")\n#     client = db_utils.hdfs_client(hadoop_path=\"http://192.168.198.105:50070\")\n# else:\n#     client = None\n#     conn = db_utils.get_connection(db_type=db_type, host='192.168.198.172', port='15434', dbname='mlp', user='postgres', password='pgsql123456',schema='admin')\n# inputs = {'data_in': '\"shilmtest\".\"10000280_0_1\"', 'schema': 'shilmtest'}\n# outputs = {'data_out': '10000171_0_11'}\n# params = {'project_id':'project_16','prforecastcolumn':'16','prlabelcolumn':'2',\n#             \"redis\":\"{\\\"connectInfo\\\":[[\\\"192.168.198.138\\\",\\\"16580\\\"],[\\\"192.168.198.138\\\",\\\"16581\\\"],[\\\"192.168.198.138\\\",\\\"16582\\\"]],\\\"masterName\\\":\\\"machine\\\",\\\"password\\\":\\\"123456\\\",\\\"db\\\":0}\",\n#                 'masterName': 'mymaster', 'password': '123456', 'db': 0}\n# execute(conn=conn, inputs=inputs, outputs=outputs, params=params, reportFileName='1000003.html')\n\n# import db_utils\n# import report_utils\n#\n# conn = None\n# report = report_utils.Report()\n# model = None\n# db_type=1\n# hdfsTmpPath='/tmp/mlp/'\n# try:\n#     if db_type==1:\n#         conn=db_utils.get_connection(db_type=db_type, host=\"192.168.198.108\", port=\"10000\", dbname=\"yq_yzx\", user=\"yangqing_yzx\", password=\"12qw#$ERx\")\n#         client = db_utils.hdfs_client(hadoop_path='http://192.168.198.105:50070/', user='yangqing_yzx')\n#     else:\n#         client = None\n#         conn=db_utils.get_connection(db_type=db_type, host='192.168.198.108', port='10000', dbname='yq_yzx', user='yangqing_yzx', password='12qw#$ERx',schema='yangqing_yzx')\n#     inputs = {}\n#     inputs['data_in'] = '\"10003209_0_1\"'\n#     inputs['schema'] = 'yangqing_yzx'\n#     outputs = {}\n#     params = {}\n#     params['pipelines'] = '[]'\n#     params['project_id'] = 'project_3782'\n#     params['roclabelcolumn'] = '1'\n#     params['pipeline_file'] = '/tmp/pyserve/pipeline/'\n#     params['redis'] = '{\"connectInfo\":[[\"192.168.198.138\",\"16580\"],[\"192.168.198.138\",\"16581\"],[\"192.168.198.138\",\"16582\"]],\"db\":0,\"masterName\":\"machine\",\"password\":\"123456\"}'\n#     reportFileName = \"10003216.html\"\n#     model = execute(conn, inputs, params, outputs, reportFileName)\n# finally:\n#     if model != None:\n#         sklearn2pmml(model,  '/tmp/pyserve/model/null', with_repr=True, debug=False)\n#     db_utils.closeConnection(conn)"
                            },
                            "supportPmml": false,
                            "children": null,
                            "parameters": {}
                        },
                        {
                            "id": 10036,
                            "createTime": "2022-05-24T09:09:25.934+0000",
                            "creatorId": 100,
                            "creatorName": "admin",
                            "name": "ROC曲线",
                            "targetAlgorithm": "com.yzx.mlp.scheduling.core.alog.unparallel.engine.pythonengine.PythonCommonAlgorithm",
                            "parentId": 10034,
                            "enabled": true,
                            "paralleled": false,
                            "component": true,
                            "allowViewSource": true,
                            "iconPath": "iconshuchu-01",
                            "minimumInput": 0,
                            "inBuilt": true,
                            "hasReport": true,
                            "description": "描述：ROC曲线描绘的是不同的截断点时，并以FPR（负例分错的概率）和TPR（正例分对的概率）为横纵坐标轴，描述随着截断点的变小，TPR随着FPR的变化。判定方法：ROC曲线离参照线越远，模型预测效果越好。AUC（ROC与横轴的面积）越大，模型预测效果越好。",
                            "tabs": [
                                {
                                    "id": 7544,
                                    "createTime": "2022-05-24T09:09:25.936+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "tabName": "字段设置",
                                    "elements": []
                                }
                            ],
                            "inputs": [
                                {
                                    "id": 10417,
                                    "createTime": "2022-05-24T09:09:25.936+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "key": "data_in",
                                    "type": "INPUT",
                                    "cat": "DATA",
                                    "canPreview": true,
                                    "preViewMode": "ONLY100",
                                    "description": "输入",
                                    "model": false
                                }
                            ],
                            "outputs": [],
                            "updateTime": "2022-05-24T09:09:25.934+0000",
                            "sequence": 1,
                            "extra": {
                                "type": "NORMAL",
                                "value": null,
                                "mainClass": null,
                                "engine": "PYTHON"
                            },
                            "script": {
                                "MAIN": "# <ALOGCLASSNAME>\n# undefined\n# </ALOGCLASSNAME>\n\n# <EXECTUSCRIPT>\ndef execute(conn, inputs, params, outputs, reportFileName):\n\n    '''\n    载入模块\n    '''\n    import report_utils\n    import db_utils\n    import scikitplot as skplt\n    import matplotlib.pyplot as plt\n    from sklearn import metrics\n    from common import get_db_column, get_feature, get_label\n    import warnings\n    import json\n    import pandas as pd\n    from common import get_db_column_with_type\n    from common import keep_dot_after\n    import ast\n    warnings.filterwarnings(\"ignore\")\n\n    redisParam = json.loads(params['redis'])\n    redisConn = db_utils.getRedisMasterConnection(redisParam['connectInfo'], redisParam['masterName'],\n                                                  redisParam['password'], redisParam['db'])\n    '''\n    转换后的参数\n    '''\n    keep_dot_after(db_type, inputs)\n    # db_columns = get_db_column_with_type(db_type, inputs, conn)\n    # columns_values = get_feature(db_columns, params['prforecastcolumn'])\n    # columns_values = ['ml_predict_0', 'ml_predict_1']\n    # label_column = get_label(db_columns, params['prlabelcolumn'])\n\n    '''\n    选择目标数据\n    '''\n    data_in = db_utils.query(conn,\n                             'select * from ' + inputs['data_in'], db_type)\n\n    data_in_shape = data_in.shape\n\n    y_test = data_in.iloc[:, 0]\n\n    '''\n    读取数据\n    '''\n    y_test = y_test.astype(float)\n    y_probas = data_in.iloc[:, -1]\n    y_probas = [ast.literal_eval(i) for i in y_probas.to_list()]\n    y_probas = pd.DataFrame(data=y_probas)\n\n    '''\n       计算指标\n    '''\n    y_predict = data_in.iloc[:, 1]\n    metric1_value = pd.DataFrame(columns=['指标', '数值'])\n    y_metric_predict = y_predict.astype(float)\n    fpr, tpr, thresholds = metrics.roc_curve(y_test, y_metric_predict, pos_label=1)\n    auc = metrics.auc(fpr, tpr)\n    auc = pd.DataFrame({'指标': 'auc', '数值': auc}, index=[2]).fillna(value=\"None\")\n    metric1_value = metric1_value.append(auc, ignore_index=True)\n    '''\n       报告\n    '''\n    report = report_utils.Report()\n    report.h1('ROC 评估报告')\n    report.h3('模型评价指标')\n    report.table(metric1_value)\n\n    '''\n     绘制ROC曲线\n    '''\n    skplt.plotters.plot_roc_curve(y_true=y_test, y_probas=y_probas)\n    plt.xlabel('False Positive Rate')\n    plt.ylabel('True Positive Rate')\n    plt.title('ROC and AUC')\n    plt.legend(loc=\"lower right\")\n    plt.savefig('roc.png')\n    plt.show()\n    report.h3('ROC图')\n    # report.p(\"如下图所示：AUC所占的面积是\" + str(np.around(auc, decimals=2)))\n    report.image('roc.png')\n    report.writeToHtml(reportFileName)\n\n    import os\n    with open(reportFileName) as file_obj:\n        report_result = file_obj.read()\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"report_\" + reportFileName, report_result)\n    os.remove(reportFileName)\n\n# </EXECTUSCRIPT>\n\n\n# import db_utils\n# model = None\n# db_type=1\n# try:\n#     if db_type==1:\n#         conn=db_utils.get_connection(db_type=db_type, host=\"192.168.198.108\", port=\"10000\", dbname=\"yq_yzx\", user=\"yangqing_yzx\", password=\"12qw#$ERx\")\n#         client = db_utils.hdfs_client(hadoop_path='http://192.168.198.105:50070')\n#     else:\n#         client = None\n#         conn=db_utils.get_connection(db_type=db_type, host='192.168.198.108', port='10000', dbname='yq_yzx', user='yangqing_yzx', password='12qw#$ERx',schema='yangqing_yzx')\n#     inputs = {}\n#     inputs['data_in'] = '\"10001644_0_1\"'\n#     inputs['schema'] = 'yangqing_yzx'\n#     outputs = {}\n#     params = {}\n#     params['pipelines'] = '[\"10001639\",\"10001645\",\"10001644\"]'\n#     params['project_id'] = 'project_3600'\n#     params['rocforecastcolumn'] = '11'\n#     params['roclabelcolumn'] = '10'\n#     params['pipeline_file'] = '/tmp/pyserve/pipeline/'\n#     params['redis'] = '{\"connectInfo\":[[\"192.168.198.138\",\"16580\"],[\"192.168.198.138\",\"16581\"],[\"192.168.198.138\",\"16582\"]],\"db\":0,\"masterName\":\"machine\",\"password\":\"123456\"}'\n#     reportFileName = \"10001648.html\"\n#     model = execute(conn, inputs, params, outputs, reportFileName)\n# finally:\n#     if model != None:\n#         sklearn2pmml(model,  '/tmp/pyserve/model/null', with_repr=True, debug=False)\n#     db_utils.closeConnection(conn)\n"
                            },
                            "supportPmml": false,
                            "children": null,
                            "parameters": {}
                        },
                        {
                            "id": 10037,
                            "createTime": "2022-05-24T09:09:26.181+0000",
                            "creatorId": 100,
                            "creatorName": "admin",
                            "name": "KS曲线",
                            "targetAlgorithm": "com.yzx.mlp.scheduling.core.alog.unparallel.engine.pythonengine.PythonCommonAlgorithm",
                            "parentId": 10034,
                            "enabled": true,
                            "paralleled": false,
                            "component": true,
                            "allowViewSource": true,
                            "iconPath": "iconshuchu-01",
                            "minimumInput": 0,
                            "inBuilt": true,
                            "hasReport": true,
                            "description": "描述：KS曲线是把TPR（正例分对的概率）和FPR（负例分错的概率）都作为纵坐标，而样本数作为横坐标。\n作用：验证模型对违约对象的区分能力，通常是在模型预测全体样本的信用评分后，将全体样本按违约与非违约分为两部分，然后用KS统计量来检验这两组样本信用评分的分布是否有显著差异。\nKS=TPR-FPR(取最大值）",
                            "tabs": [
                                {
                                    "id": 7545,
                                    "createTime": "2022-05-24T09:09:26.183+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "tabName": "字段设置",
                                    "elements": []
                                }
                            ],
                            "inputs": [
                                {
                                    "id": 10418,
                                    "createTime": "2022-05-24T09:09:26.183+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "key": "data_in",
                                    "type": "INPUT",
                                    "cat": "DATA",
                                    "canPreview": true,
                                    "preViewMode": "ONLY100",
                                    "description": "输入",
                                    "model": false
                                }
                            ],
                            "outputs": [],
                            "updateTime": "2022-05-24T09:09:26.181+0000",
                            "sequence": 2,
                            "extra": {
                                "type": "NORMAL",
                                "value": null,
                                "mainClass": null,
                                "engine": "PYTHON"
                            },
                            "script": {
                                "MAIN": "# <ALOGCLASSNAME>\n# undefined\n# </ALOGCLASSNAME>\n\n# <EXECTUSCRIPT>\ndef execute(conn, inputs, params, outputs, reportFileName):\n\n    '''\n    载入模块\n    '''\n    import report_utils\n    import db_utils\n    import scikitplot as skplt\n    import matplotlib.pyplot as plt\n    from sklearn import metrics\n    from common import get_db_column, get_feature, get_label\n    import warnings\n    import json\n    import pandas as pd\n    from common import get_db_column_with_type\n    from common import keep_dot_after\n    import ast\n    warnings.filterwarnings(\"ignore\")\n\n    redisParam = json.loads(params['redis'])\n    redisConn = db_utils.getRedisMasterConnection(redisParam['connectInfo'], redisParam['masterName'],\n                                                  redisParam['password'], redisParam['db'])\n\n    '''\n       转换后的参数\n       '''\n    keep_dot_after(db_type, inputs)\n    # db_columns = get_db_column_with_type(db_type, inputs, conn)\n    # columns_values = get_feature(db_columns, params['prforecastcolumn'])\n    # columns_values = ['ml_predict_0', 'ml_predict_1']\n    # label_column = get_label(db_columns, params['prlabelcolumn'])\n\n    '''\n    选择目标数据\n    '''\n    data_in = db_utils.query(conn,\n                             'select * from ' + inputs['data_in'], db_type)\n\n    data_in_shape = data_in.shape\n\n    y_test = data_in.iloc[:, 0]\n\n    '''\n    读取数据\n    '''\n    y_test = y_test.astype(float)\n    y_probas = data_in.iloc[:, -1]\n    y_probas = [ast.literal_eval(i) for i in y_probas.to_list()]\n    y_probas = pd.DataFrame(data=y_probas)\n\n    '''\n    计算指标\n    '''\n    y_predict = y_probas['1']\n    metric1_value = pd.DataFrame(columns=['指标', '数值'])\n    y_metric_predict = y_predict.astype(float)\n    fpr, tpr, thresholds = metrics.roc_curve(y_test, y_metric_predict, pos_label=1)\n    ksStatistic_value = max(tpr - fpr)\n    ksStatistic = pd.DataFrame({'指标': 'ksStatistic', '数值': ksStatistic_value}, index=[1]).fillna(value=\"None\")\n    metric1_value = metric1_value.append(ksStatistic, ignore_index=True)\n    '''\n       报告\n    '''\n    report = report_utils.Report()\n    report.h1('KS 评估报告')\n    report.h3('模型评价指标')\n    report.table(metric1_value)\n\n    '''\n    绘制KS曲线  二分类的情况下有ks曲线\n    '''\n    skplt.plotters.plot_ks_statistic(y_true=y_test, y_probas=y_probas)\n    plt.title('KS')\n    plt.savefig('ks.png')\n    plt.show()\n    report.h3('KS图')\n    report.image('ks.png')\n    report.writeToHtml(reportFileName)\n\n    import os\n    with open(reportFileName) as file_obj:\n        report_result = file_obj.read()\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"report_\" + reportFileName, report_result)\n    os.remove(reportFileName)\n\n# </EXECTUSCRIPT>\n\n#\n# import db_utils\n#\n# db_type = 0\n# if db_type == 1:\n#     conn = db_utils.get_connection(db_type=db_type, host=\"192.168.198.108\", port=\"10000\", dbname=\"yq_yzx\", user=\"yangqing_yzx\", password=\"12qw#$ER\")\n#     client = db_utils.hdfs_client(hadoop_path=\"http://192.168.198.105:50070\")\n# else:\n#     client = None\n#     conn = db_utils.get_connection(db_type=db_type, host='192.168.198.172', port='15434', dbname='mlp', user='postgres', password='pgsql123456',schema='admin')\n#\n# inputs = {'data_in': '\"admin\".\"10001425_0_1\"', 'schema': 'admin'}\n# outputs = {'data_out': '10000171_0_11'}\n# params = {'project_id':'project_16', 'ksforecastcolumn':'5-6','kslabelcolumn':'4' , \"redis\": \"{\\\"connectInfo\\\":[[\\\"192.168.198.220\\\",\\\"26380\\\"],[\\\"192.168.198.221\\\",\\\"26380\\\"],[\\\"192.168.198.222\\\",\\\"26380\\\"]],\\\"masterName\\\":\\\"mymaster\\\",\\\"password\\\":\\\"123456\\\",\\\"db\\\":0}\"}\n# execute(conn=conn, inputs=inputs, outputs=outputs, params=params, reportFileName='1000005.html')"
                            },
                            "supportPmml": false,
                            "children": null,
                            "parameters": {}
                        },
                        {
                            "id": 10038,
                            "createTime": "2022-05-24T09:09:26.327+0000",
                            "creatorId": 100,
                            "creatorName": "admin",
                            "name": "LIFT曲线",
                            "targetAlgorithm": "com.yzx.mlp.scheduling.core.alog.unparallel.engine.pythonengine.PythonCommonAlgorithm",
                            "parentId": 10034,
                            "enabled": true,
                            "paralleled": false,
                            "component": true,
                            "allowViewSource": true,
                            "iconPath": "iconshuchu-01",
                            "minimumInput": 0,
                            "inBuilt": true,
                            "hasReport": true,
                            "description": "描述：Lift图衡量的是，与不利用模型相比，模型的预测能力“变好”了多少，lift(提升指数)越大，模型的运行效果越好。\nLift=precision/正例的比例",
                            "tabs": [
                                {
                                    "id": 7546,
                                    "createTime": "2022-05-24T09:09:26.328+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "tabName": "字段设置",
                                    "elements": []
                                }
                            ],
                            "inputs": [
                                {
                                    "id": 10419,
                                    "createTime": "2022-05-24T09:09:26.328+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "key": "data_in",
                                    "type": "INPUT",
                                    "cat": "DATA",
                                    "canPreview": true,
                                    "preViewMode": "ONLY100",
                                    "description": "输入",
                                    "model": false
                                }
                            ],
                            "outputs": [],
                            "updateTime": "2022-05-24T09:09:26.327+0000",
                            "sequence": 3,
                            "extra": {
                                "type": "NORMAL",
                                "value": null,
                                "mainClass": null,
                                "engine": "PYTHON"
                            },
                            "script": {
                                "MAIN": "# <ALOGCLASSNAME>\n# undefined\n# </ALOGCLASSNAME>\n\n# <EXECTUSCRIPT>\ndef execute(conn, inputs, params, outputs, reportFileName):\n    '''\n    载入模块\n    '''\n    import report_utils\n    import db_utils\n    import scikitplot as skplt\n    import matplotlib.pyplot as plt\n    from common import get_db_column, get_feature, get_label\n    import warnings\n    import json\n    from common import get_db_column_with_type\n    from common import keep_dot_after\n    import ast\n    import pandas as pd\n\n    warnings.filterwarnings(\"ignore\")\n\n    redisParam = json.loads(params['redis'])\n    redisConn = db_utils.getRedisMasterConnection(redisParam['connectInfo'], redisParam['masterName'],\n                                                  redisParam['password'], redisParam['db'])\n    '''\n       转换后的参数\n       '''\n    keep_dot_after(db_type, inputs)\n    # db_columns = get_db_column_with_type(db_type, inputs, conn)\n    # columns_values = get_feature(db_columns, params['prforecastcolumn'])\n    # columns_values = ['ml_predict_0', 'ml_predict_1']\n    # label_column = get_label(db_columns, params['prlabelcolumn'])\n\n    '''\n    选择目标数据\n    '''\n    data_in = db_utils.query(conn,\n                             'select * from ' + inputs['data_in'], db_type)\n\n    data_in_shape = data_in.shape\n\n    y_test = data_in.iloc[:, 0]\n\n    '''\n    读取数据\n    '''\n    y_test = y_test.astype(float)\n    y_probas = data_in.iloc[:, -1]\n    y_probas = [ast.literal_eval(i) for i in y_probas.to_list()]\n    y_probas = pd.DataFrame(data=y_probas)\n\n\n    '''\n    计算指标\n    '''\n    '''\n    报告\n    '''\n    report = report_utils.Report()\n    report.h1('LIFT 评估报告')\n    '''\n    绘制LIFT曲线\n    '''\n    skplt.metrics.plot_lift_curve(y_true=y_test, y_probas=y_probas)\n    plt.title('LIFT')\n    plt.savefig('lift.png')\n    plt.gca().invert_xaxis()\n    plt.show()\n    report.h3('lift图')\n    report.image('lift.png')\n    report.writeToHtml(reportFileName)\n\n    import os\n    with open(reportFileName) as file_obj:\n        report_result = file_obj.read()\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"report_\" + reportFileName, report_result)\n    os.remove(reportFileName)\n\n# </EXECTUSCRIPT>\n\n#\n# import db_utils\n#\n# db_type = 0\n# if db_type == 1:\n#     conn = db_utils.get_connection(db_type=db_type, host=\"192.168.198.108\", port=\"10000\", dbname=\"yq_yzx\", user=\"yangqing_yzx\", password=\"12qw#$ER\")\n#     client = db_utils.hdfs_client(hadoop_path=\"http://192.168.198.105:50070\")\n# else:\n#     client = None\n#     conn = db_utils.get_connection(db_type=db_type, host='192.168.198.172', port='15434', dbname='mlp', user='postgres', password='pgsql123456',schema='admin')\n#\n# inputs = {'data_in': '\"admin\".\"10001425_0_1\"', 'schema': 'admin'}\n# outputs = {'data_out': '10000171_0_11'}\n# params = {'project_id':'project_16', 'liftforecastcolumn':'5-6','liftlabelcolumn':'4' , \"redis\": \"{\\\"connectInfo\\\":[[\\\"192.168.198.138\\\",\\\"16580\\\"],[\\\"192.168.198.138\\\",\\\"16581\\\"],[\\\"192.168.198.138\\\",\\\"16582\\\"]],\\\"masterName\\\":\\\"machine\\\",\\\"password\\\":\\\"123456\\\",\\\"db\\\":0}\"}\n# execute(conn=conn, inputs=inputs, outputs=outputs, params=params, reportFileName='1000006.html')"
                            },
                            "supportPmml": false,
                            "children": null,
                            "parameters": {}
                        },
                        {
                            "id": 10039,
                            "createTime": "2022-05-24T09:09:26.437+0000",
                            "creatorId": 100,
                            "creatorName": "admin",
                            "name": "二分类任务评估",
                            "targetAlgorithm": "com.yzx.mlp.scheduling.core.alog.unparallel.engine.pythonengine.PythonCommonAlgorithm",
                            "parentId": 10034,
                            "enabled": true,
                            "paralleled": false,
                            "component": true,
                            "allowViewSource": true,
                            "iconPath": "iconshuchu-01",
                            "minimumInput": 0,
                            "inBuilt": true,
                            "hasReport": true,
                            "description": "描述：用于评估二分类算法的预测结果。评估结果包括混淆矩阵和 precision，recall，f1等指标。",
                            "tabs": [
                                {
                                    "id": 7547,
                                    "createTime": "2022-05-24T09:09:26.438+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "tabName": "字段设置",
                                    "elements": [
                                        {
                                            "id": 20627,
                                            "createTime": "2022-05-24T09:09:26.438+0000",
                                            "creatorId": 100,
                                            "creatorName": "admin",
                                            "name": "twoclassthreshold",
                                            "label": "阈值",
                                            "defaultValue": null,
                                            "value": null,
                                            "options": "",
                                            "rexp": "/^0\\.\\d*[1-9]\\d*$|^[1-9]\\.\\d*[1-9]\\d*e-[1-9]+$/",
                                            "placeholder": "请输入",
                                            "toolTip": "\n范围：0 - 1的值，预测值大于该阈值，则预测为1；否则为0。",
                                            "sequence": 2,
                                            "elementType": 1,
                                            "extra": {
                                                "key": "data_in"
                                            },
                                            "visible": true,
                                            "required": true
                                        }
                                    ]
                                }
                            ],
                            "inputs": [
                                {
                                    "id": 10420,
                                    "createTime": "2022-05-24T09:09:26.438+0000",
                                    "creatorId": 100,
                                    "creatorName": "admin",
                                    "key": "data_in",
                                    "type": "INPUT",
                                    "cat": "DATA",
                                    "canPreview": true,
                                    "preViewMode": "ONLY100",
                                    "description": "输入",
                                    "model": false
                                }
                            ],
                            "outputs": [],
                            "updateTime": "2022-05-24T09:09:26.437+0000",
                            "sequence": 4,
                            "extra": {
                                "type": "NORMAL",
                                "value": null,
                                "mainClass": null,
                                "engine": "PYTHON"
                            },
                            "script": {
                                "MAIN": "# <ALOGCLASSNAME>\n# undefined\n# </ALOGCLASSNAME>\n\n# <EXECTUSCRIPT>\ndef execute(conn, inputs, params, outputs, reportFileName):\n\n    '''\n    载入模块\n    '''\n    import report_utils\n    import db_utils\n    import scikitplot as skplt\n    import matplotlib.pyplot as plt\n    from common import get_db_column, get_feature, get_label\n    import warnings\n    import json\n    import pandas as pd\n    import numpy as np\n    import sklearn.metrics as mt\n    from common import get_db_column_with_type\n    from common import keep_dot_after\n    import ast\n    warnings.filterwarnings(\"ignore\")\n\n    redisParam = json.loads(params['redis'])\n    redisConn = db_utils.getRedisMasterConnection(redisParam['connectInfo'], redisParam['masterName'],\n                                                  redisParam['password'], redisParam['db'])\n    '''\n       转换后的参数\n       '''\n    keep_dot_after(db_type, inputs)\n    # db_columns = get_db_column_with_type(db_type, inputs, conn)\n    # columns_values = get_feature(db_columns, params['prforecastcolumn'])\n    # columns_values = ['ml_predict_0', 'ml_predict_1']\n    # label_column = get_label(db_columns, params['prlabelcolumn'])\n\n    '''\n    选择目标数据\n    '''\n    data_in = db_utils.query(conn,\n                             'select * from ' + inputs['data_in'], db_type)\n\n    data_in_shape = data_in.shape\n\n    y_test = data_in.iloc[:, 0]\n\n    '''\n    读取数据\n    '''\n    y_test = y_test.astype(float)\n    y_probas = data_in.iloc[:, -1]\n    y_probas = [ast.literal_eval(i) for i in y_probas.to_list()]\n    y_probas = pd.DataFrame(data=y_probas)\n    y_probas = y_probas.loc[:, ['1']]\n\n    y_predict = (y_probas > float(params['twoclassthreshold'])).astype(float)\n\n    '''\n          计算指标\n    '''\n    stay_cnt, lost_cnt, accuracy, precision, recall, f1_measure = [], [], [], [], [], []\n    thi = list(np.arange(0, 10) / 10)\n    y_col=y_test.astype(int)\n    for i in thi:\n        pre = np.where(y_probas.values[:,0] > i, 1, 0)\n        stay_cnt.append(sum(pre == 1))\n        lost_cnt.append(sum(pre == 0))\n        all_0 = sum(y_col == 0)\n        accuracy.append(round(mt.accuracy_score(y_col, pre), 2))\n        precision.append(mt.precision_score(y_col, pre))\n        recall.append(round(mt.recall_score(y_col, pre), 2))\n        f1_measure.append(round(mt.f1_score(y_col, pre), 2))\n    true_1_cnt = [int(a * b) for a, b in zip(stay_cnt, precision)]\n    true_0_cnt = [int(a - b) for a, b in zip(stay_cnt, true_1_cnt)]\n    true_0_cnt_0 = [int(all_0 - a) for a in true_0_cnt]\n    true_0_cnt_1 = [int(a - b) for a, b in zip(lost_cnt, true_0_cnt_0)]\n    evalue_result = {'阈值': thi, '预测为1数': stay_cnt, '真正为1数': true_1_cnt, '实际为0数': true_0_cnt, '预测为0数': lost_cnt,\n                     '真正为0数': true_0_cnt_0, '实际为1数': true_0_cnt_1, '准确率(A)': accuracy,\n                     '精确率(P)': list(map(lambda x: round(x, 2), precision)), '召回率(R)': recall, 'F1值': f1_measure}\n    metric_value = pd.DataFrame(evalue_result)\n\n\n    '''\n       报告\n    '''\n    report = report_utils.Report()\n    report.h1('二分类 评估报告')\n    report.h3('模型评价指标')\n    report.table(metric_value)\n    '''\n      绘制混淆矩阵\n    '''\n    skplt.metrics.plot_confusion_matrix(y_test, y_predict)\n    plt.title('CM')\n    plt.savefig('cm.png')\n    plt.show()\n    report.h3('混淆矩阵图')\n    report.image('cm.png')\n    report.writeToHtml(reportFileName)\n\n    import os\n    with open(reportFileName) as file_obj:\n        report_result = file_obj.read()\n    db_utils.redisWriteHsetFile(redisConn, params['project_id'], \"report_\" + reportFileName, report_result)\n    os.remove(reportFileName)\n\n# </EXECTUSCRIPT>\n\n#\n# import db_utils\n#\n# db_type = 0\n# if db_type == 1:\n#     conn = db_utils.get_connection(db_type=db_type, host=\"192.168.198.108\", port=\"10000\", dbname=\"yq_yzx\", user=\"yangqing_yzx\", password=\"12qw#$ER\")\n#     client = db_utils.hdfs_client(hadoop_path=\"http://192.168.198.105:50070\")\n# else:\n#     client = None\n#     conn = db_utils.get_connection(db_type=db_type, host='192.168.198.172', port='15434', dbname='mlp', user='postgres', password='pgsql123456',schema='admin')\n#\n# inputs = {'data_in': '\"admin\".\"10001425_0_1\"', 'schema': 'admin'}\n# outputs = {'data_out': '10000171_0_11'}\n# params = {'project_id':'project_16', 'twoclassforecastcolumn':'6','twoclasslabelcolumn':'4','twoclassthreshold':'0.8' , \"redis\": \"{\\\"connectInfo\\\":[[\\\"192.168.198.220\\\",\\\"26380\\\"],[\\\"192.168.198.221\\\",\\\"26380\\\"],[\\\"192.168.198.222\\\",\\\"26380\\\"]],\\\"masterName\\\":\\\"mymaster\\\",\\\"password\\\":\\\"123456\\\",\\\"db\\\":0}\"}\n# execute(conn=conn, inputs=inputs, outputs=outputs, params=params, reportFileName='1000007.html')\n\n# import db_utils\n# import report_utils\n#\n# conn = None\n# report = report_utils.Report()\n# model = None\n# db_type=1\n# hdfsTmpPath='/tmp/mlp/'\n# try:\n#     if db_type==1:\n#         conn=db_utils.get_connection(db_type=db_type, host=\"192.168.198.108\", port=\"10000\", dbname=\"yq_yzx\", user=\"yangqing_yzx\", password=\"12qw#$ERx\")\n#         client = db_utils.hdfs_client(hadoop_path='http://192.168.198.105:50070/', user='yangqing_yzx')\n#     else:\n#         client = None\n#         conn=db_utils.get_connection(db_type=db_type, host='192.168.198.108', port='10000', dbname='yq_yzx', user='yangqing_yzx', password='12qw#$ERx',schema='yangqing_yzx')\n#     inputs = {}\n#     inputs['data_in'] = '\"10003209_0_1\"'\n#     inputs['schema'] = 'yangqing_yzx'\n#     outputs = {}\n#     params = {}\n#     params['pipelines'] = '[]'\n#     params['project_id'] = 'project_3782'\n#     params['pipeline_file'] = '/tmp/pyserve/pipeline/'\n#     params['twoclassthreshold'] = '0.5'\n#     params['redis'] = '{\"connectInfo\":[[\"192.168.198.138\",\"16580\"],[\"192.168.198.138\",\"16581\"],[\"192.168.198.138\",\"16582\"]],\"db\":0,\"masterName\":\"machine\",\"password\":\"123456\"}'\n#     reportFileName = \"10003230.html\"\n#     model = execute(conn, inputs, params, outputs, reportFileName)\n# finally:\n#     if model != None:\n#         sklearn2pmml(model,  '/tmp/pyserve/model/null', with_repr=True, debug=False)\n#     db_utils.closeConnection(conn)"
                            },
                            "supportPmml": false,
                            "children": null,
                            "parameters": {
                                "twoclassthreshold": ""
                            }
                        }
                    ],
                    "parameters": {}
                }
            ],
            "parameters": {}
        },
        {
            "id": 19,
            "createTime": "2022-04-25T07:23:56.141+0000",
            "creatorId": 104,
            "creatorName": "ct_kuke",
            "name": "测试分类1234",
            "targetAlgorithm": null,
            "parentId": 0,
            "enabled": true,
            "paralleled": false,
            "component": false,
            "allowViewSource": false,
            "iconPath": "el-icon-edit-outline",
            "minimumInput": 0,
            "inBuilt": false,
            "hasReport": false,
            "description": "",
            "tabs": [],
            "inputs": [],
            "outputs": [],
            "updateTime": "2022-04-28T09:53:06.720+0000",
            "sequence": 999,
            "extra": {
                "type": "NORMAL",
                "value": null,
                "mainClass": null,
                "engine": "PYTHON"
            },
            "script": {},
            "supportPmml": false,
            "children": [
                {
                    "id": 43,
                    "createTime": "2022-04-28T02:30:32.129+0000",
                    "creatorId": 104,
                    "creatorName": "ct_kuke",
                    "name": "test123",
                    "targetAlgorithm": null,
                    "parentId": 19,
                    "enabled": true,
                    "paralleled": false,
                    "component": false,
                    "allowViewSource": false,
                    "iconPath": "el-icon-edit-outline",
                    "minimumInput": 0,
                    "inBuilt": false,
                    "hasReport": false,
                    "description": "",
                    "tabs": [],
                    "inputs": [],
                    "outputs": [],
                    "updateTime": "2022-04-28T02:30:32.129+0000",
                    "sequence": 999,
                    "extra": {
                        "type": "NORMAL",
                        "value": null,
                        "mainClass": null,
                        "engine": "PYTHON"
                    },
                    "script": {},
                    "supportPmml": false,
                    "children": [
                        {
                            "id": 51,
                            "creatorId": 104,
                            "creatorName": "ct_kuke",
                            "name": "哈哈哈哈哈哈zx",
                            "targetAlgorithm": null,
                            "parentId": 43,
                            "enabled": true,
                            "paralleled": false,
                            "component": true,
                            "allowViewSource": null,
                            "iconPath": null,
                            "minimumInput": null,
                            "inBuilt": false,
                            "hasReport": null,
                            "description": "",
                            "tabs": [],
                            "inputs": [
                                {
                                    "id": 6727,
                                    "key": "data_in",
                                    "type": "INPUT",
                                    "cat": "DATA",
                                    "canPreview": false,
                                    "preViewMode": "ONLY100",
                                    "model": false
                                }
                            ],
                            "outputs": [
                                {
                                    "id": 6728,
                                    "key": "data_out",
                                    "type": "OUTPUT",
                                    "cat": "DATA",
                                    "canPreview": true,
                                    "preViewMode": "ONLY100",
                                    "access": "SAME",
                                    "columns": "[]",
                                    "model": false
                                }
                            ],
                            "updateTime": "2022-04-28T09:42:16.711+0000",
                            "sequence": null,
                            "extra": {
                                "type": "SCRIPT",
                                "value": null,
                                "mainClass": null,
                                "engine": "PYTHON"
                            },
                            "script": {
                                "MAIN": "  # <ALOGCLASSNAME>  name# </ALOGCLASSNAME> # <EXECTUSCRIPT> resultscript# </EXECTUSCRIPT>\n\n"
                            },
                            "supportPmml": null,
                            "children": null,
                            "parameters": {}
                        },
                        {
                            "id": 47,
                            "creatorId": 104,
                            "creatorName": "ct_kuke",
                            "name": "stage",
                            "targetAlgorithm": null,
                            "parentId": 43,
                            "enabled": true,
                            "paralleled": false,
                            "component": true,
                            "allowViewSource": true,
                            "iconPath": null,
                            "minimumInput": null,
                            "inBuilt": false,
                            "hasReport": true,
                            "description": "",
                            "tabs": [],
                            "inputs": [
                                {
                                    "id": 6701,
                                    "key": "data_in",
                                    "type": "INPUT",
                                    "cat": "DATA",
                                    "canPreview": false,
                                    "preViewMode": "ONLY100",
                                    "model": false
                                }
                            ],
                            "outputs": [
                                {
                                    "id": 6702,
                                    "key": "data_out",
                                    "type": "OUTPUT",
                                    "cat": "DATA",
                                    "canPreview": true,
                                    "preViewMode": "ONLY100",
                                    "access": "SAME",
                                    "columns": "[]",
                                    "model": false
                                }
                            ],
                            "updateTime": "2022-04-28T08:19:02.696+0000",
                            "sequence": null,
                            "extra": {
                                "type": "SCRIPT",
                                "value": null,
                                "mainClass": null,
                                "engine": "PYTHON"
                            },
                            "script": {
                                "MAIN": "  # <ALOGCLASSNAME>  name# </ALOGCLASSNAME> # <EXECTUSCRIPT> resultscript# </EXECTUSCRIPT>\n\n"
                            },
                            "supportPmml": null,
                            "children": null,
                            "parameters": {}
                        }
                    ],
                    "parameters": {}
                }
            ],
            "parameters": {}
        },
        {
            "id": 42,
            "createTime": "2022-04-28T02:22:32.251+0000",
            "creatorId": 104,
            "creatorName": "ct_kuke",
            "name": "测试分类32",
            "targetAlgorithm": null,
            "parentId": 0,
            "enabled": true,
            "paralleled": false,
            "component": false,
            "allowViewSource": false,
            "iconPath": "el-icon-edit-outline",
            "minimumInput": 0,
            "inBuilt": false,
            "hasReport": false,
            "description": "123456",
            "tabs": [],
            "inputs": [],
            "outputs": [],
            "updateTime": "2022-04-28T02:26:17.580+0000",
            "sequence": 999,
            "extra": {
                "type": "NORMAL",
                "value": null,
                "mainClass": null,
                "engine": "PYTHON"
            },
            "script": {},
            "supportPmml": false,
            "children": [
                {
                    "id": 56,
                    "createTime": "2022-04-28T12:34:52.822+0000",
                    "creatorId": 104,
                    "creatorName": "ct_kuke",
                    "name": "呵呵呵呵11",
                    "targetAlgorithm": null,
                    "parentId": 42,
                    "enabled": true,
                    "paralleled": false,
                    "component": true,
                    "allowViewSource": null,
                    "iconPath": null,
                    "minimumInput": null,
                    "inBuilt": false,
                    "hasReport": null,
                    "description": "",
                    "tabs": [],
                    "inputs": [
                        {
                            "id": 6747,
                            "key": "data_in",
                            "type": "INPUT",
                            "cat": "DATA",
                            "canPreview": false,
                            "preViewMode": "ONLY100",
                            "model": false
                        }
                    ],
                    "outputs": [
                        {
                            "id": 6748,
                            "key": "data_out",
                            "type": "OUTPUT",
                            "cat": "DATA",
                            "canPreview": true,
                            "preViewMode": "ONLY100",
                            "access": "SAME",
                            "columns": "[]",
                            "model": false
                        }
                    ],
                    "updateTime": "2022-04-28T12:35:21.593+0000",
                    "sequence": null,
                    "extra": {
                        "type": "SCRIPT",
                        "value": null,
                        "mainClass": null,
                        "engine": "PYTHON"
                    },
                    "script": {
                        "MAIN": "  # <ALOGCLASSNAME>  name# </ALOGCLASSNAME> # <EXECTUSCRIPT> resultscript# </EXECTUSCRIPT>\n"
                    },
                    "supportPmml": null,
                    "children": null,
                    "parameters": {}
                }
            ],
            "parameters": {}
        },
        {
            "id": 39,
            "createTime": "2022-04-27T08:42:51.540+0000",
            "creatorId": 104,
            "creatorName": "ct_kuke",
            "name": "测试分类",
            "targetAlgorithm": null,
            "parentId": 0,
            "enabled": true,
            "paralleled": false,
            "component": false,
            "allowViewSource": false,
            "iconPath": "el-icon-edit-outline",
            "minimumInput": 0,
            "inBuilt": false,
            "hasReport": false,
            "description": "",
            "tabs": [],
            "inputs": [],
            "outputs": [],
            "updateTime": "2022-04-27T08:42:51.540+0000",
            "sequence": 999,
            "extra": {
                "type": "NORMAL",
                "value": null,
                "mainClass": null,
                "engine": "PYTHON"
            },
            "script": {},
            "supportPmml": false,
            "children": [
                {
                    "id": 40,
                    "createTime": "2022-04-27T08:43:36.211+0000",
                    "creatorId": 104,
                    "creatorName": "ct_kuke",
                    "name": "二级分类",
                    "targetAlgorithm": null,
                    "parentId": 39,
                    "enabled": true,
                    "paralleled": false,
                    "component": false,
                    "allowViewSource": false,
                    "iconPath": "el-icon-edit-outline",
                    "minimumInput": 0,
                    "inBuilt": false,
                    "hasReport": false,
                    "description": "",
                    "tabs": [],
                    "inputs": [],
                    "outputs": [],
                    "updateTime": "2022-04-27T08:43:36.211+0000",
                    "sequence": 999,
                    "extra": {
                        "type": "NORMAL",
                        "value": null,
                        "mainClass": null,
                        "engine": "PYTHON"
                    },
                    "script": {},
                    "supportPmml": false,
                    "children": [
                        {
                            "id": 41,
                            "creatorId": 104,
                            "creatorName": "ct_kuke",
                            "name": "tiktok",
                            "targetAlgorithm": null,
                            "parentId": 40,
                            "enabled": true,
                            "paralleled": false,
                            "component": true,
                            "allowViewSource": true,
                            "iconPath": null,
                            "minimumInput": null,
                            "inBuilt": false,
                            "hasReport": true,
                            "description": "",
                            "tabs": [],
                            "inputs": [
                                {
                                    "id": 6721,
                                    "key": "data_in",
                                    "type": "INPUT",
                                    "cat": "DATA",
                                    "canPreview": false,
                                    "preViewMode": "ONLY100",
                                    "model": false
                                }
                            ],
                            "outputs": [
                                {
                                    "id": 6722,
                                    "key": "data_out",
                                    "type": "OUTPUT",
                                    "cat": "DATA",
                                    "canPreview": true,
                                    "preViewMode": "ONLY100",
                                    "access": "SAME",
                                    "columns": "[]",
                                    "model": false
                                }
                            ],
                            "updateTime": "2022-04-28T09:07:48.890+0000",
                            "sequence": null,
                            "extra": {
                                "type": "SCRIPT",
                                "value": null,
                                "mainClass": null,
                                "engine": "PYTHON"
                            },
                            "script": {
                                "MAIN": "  # <ALOGCLASSNAME>  name# </ALOGCLASSNAME> # <EXECTUSCRIPT> resultscript# </EXECTUSCRIPT>\n\n\n\n"
                            },
                            "supportPmml": null,
                            "children": null,
                            "parameters": {}
                        },
                        {
                            "id": 49,
                            "creatorId": 104,
                            "creatorName": "ct_kuke",
                            "name": "sste",
                            "targetAlgorithm": null,
                            "parentId": 40,
                            "enabled": true,
                            "paralleled": false,
                            "component": true,
                            "allowViewSource": false,
                            "iconPath": null,
                            "minimumInput": null,
                            "inBuilt": false,
                            "hasReport": true,
                            "description": "描述啦啦啦啦啦啦",
                            "tabs": [],
                            "inputs": [
                                {
                                    "id": 6713,
                                    "key": "data_in",
                                    "type": "INPUT",
                                    "cat": "DATA",
                                    "canPreview": false,
                                    "preViewMode": "ONLY100",
                                    "description": "这一段描述哈哈哈",
                                    "model": false
                                }
                            ],
                            "outputs": [
                                {
                                    "id": 6714,
                                    "key": "data_out",
                                    "type": "OUTPUT",
                                    "cat": "DATA",
                                    "canPreview": true,
                                    "preViewMode": "ONLY100",
                                    "description": "输出描述",
                                    "access": "SAME",
                                    "columns": "[]",
                                    "model": false
                                }
                            ],
                            "updateTime": "2022-04-28T08:43:29.499+0000",
                            "sequence": null,
                            "extra": {
                                "type": "SCRIPT",
                                "value": null,
                                "mainClass": null,
                                "engine": "PYTHON"
                            },
                            "script": {
                                "MAIN": "  # <ALOGCLASSNAME>  name# </ALOGCLASSNAME> # <EXECTUSCRIPT> resultscript# </EXECTUSCRIPT>\n"
                            },
                            "supportPmml": null,
                            "children": null,
                            "parameters": {}
                        },
                        {
                            "id": 55,
                            "createTime": "2022-04-28T12:27:38.012+0000",
                            "creatorId": 104,
                            "creatorName": "ct_kuke",
                            "name": "苏萌大",
                            "targetAlgorithm": null,
                            "parentId": 40,
                            "enabled": true,
                            "paralleled": false,
                            "component": true,
                            "allowViewSource": false,
                            "iconPath": null,
                            "minimumInput": null,
                            "inBuilt": false,
                            "hasReport": true,
                            "description": "",
                            "tabs": [],
                            "inputs": [
                                {
                                    "id": 6743,
                                    "key": "data_in",
                                    "type": "INPUT",
                                    "cat": "DATA",
                                    "canPreview": false,
                                    "preViewMode": "ONLY100",
                                    "model": false
                                }
                            ],
                            "outputs": [
                                {
                                    "id": 6744,
                                    "key": "data_out",
                                    "type": "OUTPUT",
                                    "cat": "DATA",
                                    "canPreview": true,
                                    "preViewMode": "ONLY100",
                                    "access": "SAME",
                                    "columns": "[]",
                                    "model": false
                                }
                            ],
                            "updateTime": "2022-04-28T12:27:55.445+0000",
                            "sequence": null,
                            "extra": {
                                "type": "SCRIPT",
                                "value": null,
                                "mainClass": null,
                                "engine": "PYTHON"
                            },
                            "script": {
                                "MAIN": "  # <ALOGCLASSNAME>  name# </ALOGCLASSNAME> # <EXECTUSCRIPT> resultscript# </EXECTUSCRIPT>\n"
                            },
                            "supportPmml": null,
                            "children": null,
                            "parameters": {}
                        },
                        {
                            "id": 48,
                            "creatorId": 104,
                            "creatorName": "ct_kuke",
                            "name": "stest222",
                            "targetAlgorithm": null,
                            "parentId": 40,
                            "enabled": true,
                            "paralleled": false,
                            "component": true,
                            "allowViewSource": true,
                            "iconPath": null,
                            "minimumInput": null,
                            "inBuilt": false,
                            "hasReport": true,
                            "description": "",
                            "tabs": [],
                            "inputs": [
                                {
                                    "id": 6709,
                                    "key": "data_in",
                                    "type": "INPUT",
                                    "cat": "DATA",
                                    "canPreview": false,
                                    "preViewMode": "ONLY100",
                                    "model": false
                                }
                            ],
                            "outputs": [
                                {
                                    "id": 6710,
                                    "key": "data_out",
                                    "type": "OUTPUT",
                                    "cat": "DATA",
                                    "canPreview": true,
                                    "preViewMode": "ONLY100",
                                    "access": "SAME",
                                    "columns": "[]",
                                    "model": false
                                }
                            ],
                            "updateTime": "2022-04-28T08:30:37.520+0000",
                            "sequence": null,
                            "extra": {
                                "type": "SCRIPT",
                                "value": null,
                                "mainClass": null,
                                "engine": "PYTHON"
                            },
                            "script": {
                                "MAIN": "  # <ALOGCLASSNAME>  name# </ALOGCLASSNAME> # <EXECTUSCRIPT> resultscript# </EXECTUSCRIPT>\n\n"
                            },
                            "supportPmml": null,
                            "children": null,
                            "parameters": {}
                        },
                        {
                            "id": 29,
                            "creatorId": 104,
                            "creatorName": "ct_kuke",
                            "name": "reddit",
                            "targetAlgorithm": null,
                            "parentId": 40,
                            "enabled": true,
                            "paralleled": false,
                            "component": true,
                            "allowViewSource": false,
                            "iconPath": null,
                            "minimumInput": null,
                            "inBuilt": false,
                            "hasReport": true,
                            "description": "",
                            "tabs": [
                                {
                                    "id": 4896,
                                    "tabName": "参数设置",
                                    "elements": [
                                        {
                                            "id": 13405,
                                            "name": "名称",
                                            "label": "lll",
                                            "defaultValue": "吖吖啊",
                                            "value": "吖吖啊",
                                            "options": "",
                                            "rexp": "",
                                            "placeholder": null,
                                            "toolTip": "悬浮",
                                            "sequence": 1,
                                            "elementType": 1,
                                            "extra": {},
                                            "visible": true,
                                            "required": false
                                        }
                                    ]
                                }
                            ],
                            "inputs": [
                                {
                                    "id": 6600,
                                    "key": "data_in",
                                    "type": "INPUT",
                                    "cat": "DATA",
                                    "canPreview": false,
                                    "preViewMode": "ONLY100",
                                    "model": false
                                }
                            ],
                            "outputs": [
                                {
                                    "id": 6601,
                                    "key": "data_out",
                                    "type": "OUTPUT",
                                    "cat": "DATA",
                                    "canPreview": true,
                                    "preViewMode": "ONLY100",
                                    "access": "SAME",
                                    "columns": "[]",
                                    "model": false
                                }
                            ],
                            "updateTime": "2022-04-27T08:50:14.052+0000",
                            "sequence": null,
                            "extra": {
                                "type": "SCRIPT",
                                "value": null,
                                "mainClass": null,
                                "engine": "PYTHON"
                            },
                            "script": {
                                "MAIN": "  # <ALOGCLASSNAME>  name# </ALOGCLASSNAME> # <EXECTUSCRIPT> resultscript# </EXECTUSCRIPT>\n\n\n\n\n\n"
                            },
                            "supportPmml": null,
                            "children": null,
                            "parameters": {
                                "名称": "吖吖啊"
                            }
                        }
                    ],
                    "parameters": {}
                }
            ],
            "parameters": {}
        },
        {
            "id": 45,
            "createTime": "2022-04-28T07:53:10.046+0000",
            "creatorId": 104,
            "creatorName": "ct_kuke",
            "name": "饥荒",
            "targetAlgorithm": null,
            "parentId": 0,
            "enabled": true,
            "paralleled": false,
            "component": false,
            "allowViewSource": false,
            "iconPath": "el-icon-edit-outline",
            "minimumInput": 0,
            "inBuilt": false,
            "hasReport": false,
            "description": "",
            "tabs": [],
            "inputs": [],
            "outputs": [],
            "updateTime": "2022-04-28T07:53:10.046+0000",
            "sequence": 999,
            "extra": {
                "type": "NORMAL",
                "value": null,
                "mainClass": null,
                "engine": "PYTHON"
            },
            "script": {},
            "supportPmml": false,
            "children": [
                {
                    "id": 46,
                    "createTime": "2022-04-28T07:53:41.032+0000",
                    "creatorId": 104,
                    "creatorName": "ct_kuke",
                    "name": "饱荒",
                    "targetAlgorithm": null,
                    "parentId": 45,
                    "enabled": true,
                    "paralleled": false,
                    "component": false,
                    "allowViewSource": false,
                    "iconPath": "el-icon-edit-outline",
                    "minimumInput": 0,
                    "inBuilt": false,
                    "hasReport": false,
                    "description": "",
                    "tabs": [],
                    "inputs": [],
                    "outputs": [],
                    "updateTime": "2022-04-28T07:53:41.032+0000",
                    "sequence": 999,
                    "extra": {
                        "type": "NORMAL",
                        "value": null,
                        "mainClass": null,
                        "engine": "PYTHON"
                    },
                    "script": {},
                    "supportPmml": false,
                    "children": null,
                    "parameters": {}
                }
            ],
            "parameters": {}
        }
    ],
    "status": "SUCCESS",
    "code": 200
}